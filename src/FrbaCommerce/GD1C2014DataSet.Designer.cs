//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3655
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FrbaCommerce {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("GD1C2014DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GD1C2014DataSet : global::System.Data.DataSet {
        
        private tl_ClientesDataTable tabletl_Clientes;
        
        private tl_ComprasDataTable tabletl_Compras;
        
        private tl_EmpresasDataTable tabletl_Empresas;
        
        private tl_FacturasDataTable tabletl_Facturas;
        
        private tl_Facturas_ItemsDataTable tabletl_Facturas_Items;
        
        private tl_FuncionalidadesDataTable tabletl_Funcionalidades;
        
        private tl_OfertasDataTable tabletl_Ofertas;
        
        private tl_PendientesDataTable tabletl_Pendientes;
        
        private tl_PreguntasDataTable tabletl_Preguntas;
        
        private tl_PublicacionesDataTable tabletl_Publicaciones;
        
        private tl_Publicaciones_RubrosDataTable tabletl_Publicaciones_Rubros;
        
        private tl_RolesDataTable tabletl_Roles;
        
        private tl_Roles_FuncionalidadesDataTable tabletl_Roles_Funcionalidades;
        
        private tl_RubrosDataTable tabletl_Rubros;
        
        private tl_UsuariosDataTable tabletl_Usuarios;
        
        private tl_Usuarios_RolesDataTable tabletl_Usuarios_Roles;
        
        private tl_VisibilidadesDataTable tabletl_Visibilidades;
        
        private sp_VendedoresConMasStockDataTable tablesp_VendedoresConMasStock;
        
        private clientesMasPublicacionesSinCalificarDataTable tableclientesMasPublicacionesSinCalificar;
        
        private vendedoresMayorReputacionDataTable tablevendedoresMayorReputacion;
        
        private vendedoresMayorFacturacionDataTable tablevendedoresMayorFacturacion;
        
        private tl_ClientesyEmpresasDataTable tabletl_ClientesyEmpresas;
        
        private HistorialComprasDataTable tableHistorialCompras;
        
        private HistorialCalificacionesOtorgadasDataTable tableHistorialCalificacionesOtorgadas;
        
        private HistorialOfertasDataTable tableHistorialOfertas;
        
        private HistorialCalificacionesRecibidasDataTable tableHistorialCalificacionesRecibidas;
        
        private tl_CalificacionesDataTable tabletl_Calificaciones;
        
        private tl_Publicacion_EstadosDataTable tabletl_Publicacion_Estados;
        
        private tl_Publicacion_TiposDataTable tabletl_Publicacion_Tipos;
        
        private PublicacionesDataTable tablePublicaciones;
        
        private global::System.Data.DataRelation relationfk_Compras_Publicacion;
        
        private global::System.Data.DataRelation relationfk_Facturas_Items_Compra;
        
        private global::System.Data.DataRelation relationfk_Facturas_Items_Factura;
        
        private global::System.Data.DataRelation relationfk_Ofertas_Publicacion;
        
        private global::System.Data.DataRelation relationfk_Pendientes_Compra;
        
        private global::System.Data.DataRelation relationfk_Pendientes_Publicacion;
        
        private global::System.Data.DataRelation relationfk_Preguntas_Publicacion;
        
        private global::System.Data.DataRelation relationfk_Publicaciones_Visibilidad;
        
        private global::System.Data.DataRelation relationfk_Publicaciones_Rubros_Publicacion;
        
        private global::System.Data.DataRelation relationfk_Publicaciones_Rubros_Rubro;
        
        private global::System.Data.DataRelation relationfk_Roles_Funcionalidades_Funcionalidad;
        
        private global::System.Data.DataRelation relationfk_Roles_Funcionalidades_Rol;
        
        private global::System.Data.DataRelation relationfk_Usuarios_Roles_Rol;
        
        private global::System.Data.DataRelation relationfk_Usuarios_Roles_Usuario;
        
        private global::System.Data.DataRelation relationfk_Ofertas_Publicacion1;
        
        private global::System.Data.DataRelation relationfk_Compras_Publicacion1;
        
        private global::System.Data.DataRelation relationfk_Publicaciones_Usuario;
        
        private global::System.Data.DataRelation relationfk_Compras_Usuario;
        
        private global::System.Data.DataRelation relationfk_Calificaciones_Compra;
        
        private global::System.Data.DataRelation relationfk_Ofertas_Usuario;
        
        private global::System.Data.DataRelation relationfk_Facturas_Items_Publicacion;
        
        private global::System.Data.DataRelation relationfk_Publicaciones_Estado;
        
        private global::System.Data.DataRelation relationfk_Publicaciones_Tipo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GD1C2014DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected GD1C2014DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tl_Clientes"] != null)) {
                    base.Tables.Add(new tl_ClientesDataTable(ds.Tables["tl_Clientes"]));
                }
                if ((ds.Tables["tl_Compras"] != null)) {
                    base.Tables.Add(new tl_ComprasDataTable(ds.Tables["tl_Compras"]));
                }
                if ((ds.Tables["tl_Empresas"] != null)) {
                    base.Tables.Add(new tl_EmpresasDataTable(ds.Tables["tl_Empresas"]));
                }
                if ((ds.Tables["tl_Facturas"] != null)) {
                    base.Tables.Add(new tl_FacturasDataTable(ds.Tables["tl_Facturas"]));
                }
                if ((ds.Tables["tl_Facturas_Items"] != null)) {
                    base.Tables.Add(new tl_Facturas_ItemsDataTable(ds.Tables["tl_Facturas_Items"]));
                }
                if ((ds.Tables["tl_Funcionalidades"] != null)) {
                    base.Tables.Add(new tl_FuncionalidadesDataTable(ds.Tables["tl_Funcionalidades"]));
                }
                if ((ds.Tables["tl_Ofertas"] != null)) {
                    base.Tables.Add(new tl_OfertasDataTable(ds.Tables["tl_Ofertas"]));
                }
                if ((ds.Tables["tl_Pendientes"] != null)) {
                    base.Tables.Add(new tl_PendientesDataTable(ds.Tables["tl_Pendientes"]));
                }
                if ((ds.Tables["tl_Preguntas"] != null)) {
                    base.Tables.Add(new tl_PreguntasDataTable(ds.Tables["tl_Preguntas"]));
                }
                if ((ds.Tables["tl_Publicaciones"] != null)) {
                    base.Tables.Add(new tl_PublicacionesDataTable(ds.Tables["tl_Publicaciones"]));
                }
                if ((ds.Tables["tl_Publicaciones_Rubros"] != null)) {
                    base.Tables.Add(new tl_Publicaciones_RubrosDataTable(ds.Tables["tl_Publicaciones_Rubros"]));
                }
                if ((ds.Tables["tl_Roles"] != null)) {
                    base.Tables.Add(new tl_RolesDataTable(ds.Tables["tl_Roles"]));
                }
                if ((ds.Tables["tl_Roles_Funcionalidades"] != null)) {
                    base.Tables.Add(new tl_Roles_FuncionalidadesDataTable(ds.Tables["tl_Roles_Funcionalidades"]));
                }
                if ((ds.Tables["tl_Rubros"] != null)) {
                    base.Tables.Add(new tl_RubrosDataTable(ds.Tables["tl_Rubros"]));
                }
                if ((ds.Tables["tl_Usuarios"] != null)) {
                    base.Tables.Add(new tl_UsuariosDataTable(ds.Tables["tl_Usuarios"]));
                }
                if ((ds.Tables["tl_Usuarios_Roles"] != null)) {
                    base.Tables.Add(new tl_Usuarios_RolesDataTable(ds.Tables["tl_Usuarios_Roles"]));
                }
                if ((ds.Tables["tl_Visibilidades"] != null)) {
                    base.Tables.Add(new tl_VisibilidadesDataTable(ds.Tables["tl_Visibilidades"]));
                }
                if ((ds.Tables["sp_VendedoresConMasStock"] != null)) {
                    base.Tables.Add(new sp_VendedoresConMasStockDataTable(ds.Tables["sp_VendedoresConMasStock"]));
                }
                if ((ds.Tables["clientesMasPublicacionesSinCalificar"] != null)) {
                    base.Tables.Add(new clientesMasPublicacionesSinCalificarDataTable(ds.Tables["clientesMasPublicacionesSinCalificar"]));
                }
                if ((ds.Tables["vendedoresMayorReputacion"] != null)) {
                    base.Tables.Add(new vendedoresMayorReputacionDataTable(ds.Tables["vendedoresMayorReputacion"]));
                }
                if ((ds.Tables["vendedoresMayorFacturacion"] != null)) {
                    base.Tables.Add(new vendedoresMayorFacturacionDataTable(ds.Tables["vendedoresMayorFacturacion"]));
                }
                if ((ds.Tables["tl_ClientesyEmpresas"] != null)) {
                    base.Tables.Add(new tl_ClientesyEmpresasDataTable(ds.Tables["tl_ClientesyEmpresas"]));
                }
                if ((ds.Tables["HistorialCompras"] != null)) {
                    base.Tables.Add(new HistorialComprasDataTable(ds.Tables["HistorialCompras"]));
                }
                if ((ds.Tables["HistorialCalificacionesOtorgadas"] != null)) {
                    base.Tables.Add(new HistorialCalificacionesOtorgadasDataTable(ds.Tables["HistorialCalificacionesOtorgadas"]));
                }
                if ((ds.Tables["HistorialOfertas"] != null)) {
                    base.Tables.Add(new HistorialOfertasDataTable(ds.Tables["HistorialOfertas"]));
                }
                if ((ds.Tables["HistorialCalificacionesRecibidas"] != null)) {
                    base.Tables.Add(new HistorialCalificacionesRecibidasDataTable(ds.Tables["HistorialCalificacionesRecibidas"]));
                }
                if ((ds.Tables["tl_Calificaciones"] != null)) {
                    base.Tables.Add(new tl_CalificacionesDataTable(ds.Tables["tl_Calificaciones"]));
                }
                if ((ds.Tables["tl_Publicacion_Estados"] != null)) {
                    base.Tables.Add(new tl_Publicacion_EstadosDataTable(ds.Tables["tl_Publicacion_Estados"]));
                }
                if ((ds.Tables["tl_Publicacion_Tipos"] != null)) {
                    base.Tables.Add(new tl_Publicacion_TiposDataTable(ds.Tables["tl_Publicacion_Tipos"]));
                }
                if ((ds.Tables["Publicaciones"] != null)) {
                    base.Tables.Add(new PublicacionesDataTable(ds.Tables["Publicaciones"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_ClientesDataTable tl_Clientes {
            get {
                return this.tabletl_Clientes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_ComprasDataTable tl_Compras {
            get {
                return this.tabletl_Compras;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_EmpresasDataTable tl_Empresas {
            get {
                return this.tabletl_Empresas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_FacturasDataTable tl_Facturas {
            get {
                return this.tabletl_Facturas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_Facturas_ItemsDataTable tl_Facturas_Items {
            get {
                return this.tabletl_Facturas_Items;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_FuncionalidadesDataTable tl_Funcionalidades {
            get {
                return this.tabletl_Funcionalidades;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_OfertasDataTable tl_Ofertas {
            get {
                return this.tabletl_Ofertas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_PendientesDataTable tl_Pendientes {
            get {
                return this.tabletl_Pendientes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_PreguntasDataTable tl_Preguntas {
            get {
                return this.tabletl_Preguntas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_PublicacionesDataTable tl_Publicaciones {
            get {
                return this.tabletl_Publicaciones;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_Publicaciones_RubrosDataTable tl_Publicaciones_Rubros {
            get {
                return this.tabletl_Publicaciones_Rubros;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_RolesDataTable tl_Roles {
            get {
                return this.tabletl_Roles;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_Roles_FuncionalidadesDataTable tl_Roles_Funcionalidades {
            get {
                return this.tabletl_Roles_Funcionalidades;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_RubrosDataTable tl_Rubros {
            get {
                return this.tabletl_Rubros;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_UsuariosDataTable tl_Usuarios {
            get {
                return this.tabletl_Usuarios;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_Usuarios_RolesDataTable tl_Usuarios_Roles {
            get {
                return this.tabletl_Usuarios_Roles;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_VisibilidadesDataTable tl_Visibilidades {
            get {
                return this.tabletl_Visibilidades;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sp_VendedoresConMasStockDataTable sp_VendedoresConMasStock {
            get {
                return this.tablesp_VendedoresConMasStock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public clientesMasPublicacionesSinCalificarDataTable clientesMasPublicacionesSinCalificar {
            get {
                return this.tableclientesMasPublicacionesSinCalificar;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vendedoresMayorReputacionDataTable vendedoresMayorReputacion {
            get {
                return this.tablevendedoresMayorReputacion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vendedoresMayorFacturacionDataTable vendedoresMayorFacturacion {
            get {
                return this.tablevendedoresMayorFacturacion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_ClientesyEmpresasDataTable tl_ClientesyEmpresas {
            get {
                return this.tabletl_ClientesyEmpresas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HistorialComprasDataTable HistorialCompras {
            get {
                return this.tableHistorialCompras;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HistorialCalificacionesOtorgadasDataTable HistorialCalificacionesOtorgadas {
            get {
                return this.tableHistorialCalificacionesOtorgadas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HistorialOfertasDataTable HistorialOfertas {
            get {
                return this.tableHistorialOfertas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HistorialCalificacionesRecibidasDataTable HistorialCalificacionesRecibidas {
            get {
                return this.tableHistorialCalificacionesRecibidas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_CalificacionesDataTable tl_Calificaciones {
            get {
                return this.tabletl_Calificaciones;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_Publicacion_EstadosDataTable tl_Publicacion_Estados {
            get {
                return this.tabletl_Publicacion_Estados;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tl_Publicacion_TiposDataTable tl_Publicacion_Tipos {
            get {
                return this.tabletl_Publicacion_Tipos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PublicacionesDataTable Publicaciones {
            get {
                return this.tablePublicaciones;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            GD1C2014DataSet cln = ((GD1C2014DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tl_Clientes"] != null)) {
                    base.Tables.Add(new tl_ClientesDataTable(ds.Tables["tl_Clientes"]));
                }
                if ((ds.Tables["tl_Compras"] != null)) {
                    base.Tables.Add(new tl_ComprasDataTable(ds.Tables["tl_Compras"]));
                }
                if ((ds.Tables["tl_Empresas"] != null)) {
                    base.Tables.Add(new tl_EmpresasDataTable(ds.Tables["tl_Empresas"]));
                }
                if ((ds.Tables["tl_Facturas"] != null)) {
                    base.Tables.Add(new tl_FacturasDataTable(ds.Tables["tl_Facturas"]));
                }
                if ((ds.Tables["tl_Facturas_Items"] != null)) {
                    base.Tables.Add(new tl_Facturas_ItemsDataTable(ds.Tables["tl_Facturas_Items"]));
                }
                if ((ds.Tables["tl_Funcionalidades"] != null)) {
                    base.Tables.Add(new tl_FuncionalidadesDataTable(ds.Tables["tl_Funcionalidades"]));
                }
                if ((ds.Tables["tl_Ofertas"] != null)) {
                    base.Tables.Add(new tl_OfertasDataTable(ds.Tables["tl_Ofertas"]));
                }
                if ((ds.Tables["tl_Pendientes"] != null)) {
                    base.Tables.Add(new tl_PendientesDataTable(ds.Tables["tl_Pendientes"]));
                }
                if ((ds.Tables["tl_Preguntas"] != null)) {
                    base.Tables.Add(new tl_PreguntasDataTable(ds.Tables["tl_Preguntas"]));
                }
                if ((ds.Tables["tl_Publicaciones"] != null)) {
                    base.Tables.Add(new tl_PublicacionesDataTable(ds.Tables["tl_Publicaciones"]));
                }
                if ((ds.Tables["tl_Publicaciones_Rubros"] != null)) {
                    base.Tables.Add(new tl_Publicaciones_RubrosDataTable(ds.Tables["tl_Publicaciones_Rubros"]));
                }
                if ((ds.Tables["tl_Roles"] != null)) {
                    base.Tables.Add(new tl_RolesDataTable(ds.Tables["tl_Roles"]));
                }
                if ((ds.Tables["tl_Roles_Funcionalidades"] != null)) {
                    base.Tables.Add(new tl_Roles_FuncionalidadesDataTable(ds.Tables["tl_Roles_Funcionalidades"]));
                }
                if ((ds.Tables["tl_Rubros"] != null)) {
                    base.Tables.Add(new tl_RubrosDataTable(ds.Tables["tl_Rubros"]));
                }
                if ((ds.Tables["tl_Usuarios"] != null)) {
                    base.Tables.Add(new tl_UsuariosDataTable(ds.Tables["tl_Usuarios"]));
                }
                if ((ds.Tables["tl_Usuarios_Roles"] != null)) {
                    base.Tables.Add(new tl_Usuarios_RolesDataTable(ds.Tables["tl_Usuarios_Roles"]));
                }
                if ((ds.Tables["tl_Visibilidades"] != null)) {
                    base.Tables.Add(new tl_VisibilidadesDataTable(ds.Tables["tl_Visibilidades"]));
                }
                if ((ds.Tables["sp_VendedoresConMasStock"] != null)) {
                    base.Tables.Add(new sp_VendedoresConMasStockDataTable(ds.Tables["sp_VendedoresConMasStock"]));
                }
                if ((ds.Tables["clientesMasPublicacionesSinCalificar"] != null)) {
                    base.Tables.Add(new clientesMasPublicacionesSinCalificarDataTable(ds.Tables["clientesMasPublicacionesSinCalificar"]));
                }
                if ((ds.Tables["vendedoresMayorReputacion"] != null)) {
                    base.Tables.Add(new vendedoresMayorReputacionDataTable(ds.Tables["vendedoresMayorReputacion"]));
                }
                if ((ds.Tables["vendedoresMayorFacturacion"] != null)) {
                    base.Tables.Add(new vendedoresMayorFacturacionDataTable(ds.Tables["vendedoresMayorFacturacion"]));
                }
                if ((ds.Tables["tl_ClientesyEmpresas"] != null)) {
                    base.Tables.Add(new tl_ClientesyEmpresasDataTable(ds.Tables["tl_ClientesyEmpresas"]));
                }
                if ((ds.Tables["HistorialCompras"] != null)) {
                    base.Tables.Add(new HistorialComprasDataTable(ds.Tables["HistorialCompras"]));
                }
                if ((ds.Tables["HistorialCalificacionesOtorgadas"] != null)) {
                    base.Tables.Add(new HistorialCalificacionesOtorgadasDataTable(ds.Tables["HistorialCalificacionesOtorgadas"]));
                }
                if ((ds.Tables["HistorialOfertas"] != null)) {
                    base.Tables.Add(new HistorialOfertasDataTable(ds.Tables["HistorialOfertas"]));
                }
                if ((ds.Tables["HistorialCalificacionesRecibidas"] != null)) {
                    base.Tables.Add(new HistorialCalificacionesRecibidasDataTable(ds.Tables["HistorialCalificacionesRecibidas"]));
                }
                if ((ds.Tables["tl_Calificaciones"] != null)) {
                    base.Tables.Add(new tl_CalificacionesDataTable(ds.Tables["tl_Calificaciones"]));
                }
                if ((ds.Tables["tl_Publicacion_Estados"] != null)) {
                    base.Tables.Add(new tl_Publicacion_EstadosDataTable(ds.Tables["tl_Publicacion_Estados"]));
                }
                if ((ds.Tables["tl_Publicacion_Tipos"] != null)) {
                    base.Tables.Add(new tl_Publicacion_TiposDataTable(ds.Tables["tl_Publicacion_Tipos"]));
                }
                if ((ds.Tables["Publicaciones"] != null)) {
                    base.Tables.Add(new PublicacionesDataTable(ds.Tables["Publicaciones"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletl_Clientes = ((tl_ClientesDataTable)(base.Tables["tl_Clientes"]));
            if ((initTable == true)) {
                if ((this.tabletl_Clientes != null)) {
                    this.tabletl_Clientes.InitVars();
                }
            }
            this.tabletl_Compras = ((tl_ComprasDataTable)(base.Tables["tl_Compras"]));
            if ((initTable == true)) {
                if ((this.tabletl_Compras != null)) {
                    this.tabletl_Compras.InitVars();
                }
            }
            this.tabletl_Empresas = ((tl_EmpresasDataTable)(base.Tables["tl_Empresas"]));
            if ((initTable == true)) {
                if ((this.tabletl_Empresas != null)) {
                    this.tabletl_Empresas.InitVars();
                }
            }
            this.tabletl_Facturas = ((tl_FacturasDataTable)(base.Tables["tl_Facturas"]));
            if ((initTable == true)) {
                if ((this.tabletl_Facturas != null)) {
                    this.tabletl_Facturas.InitVars();
                }
            }
            this.tabletl_Facturas_Items = ((tl_Facturas_ItemsDataTable)(base.Tables["tl_Facturas_Items"]));
            if ((initTable == true)) {
                if ((this.tabletl_Facturas_Items != null)) {
                    this.tabletl_Facturas_Items.InitVars();
                }
            }
            this.tabletl_Funcionalidades = ((tl_FuncionalidadesDataTable)(base.Tables["tl_Funcionalidades"]));
            if ((initTable == true)) {
                if ((this.tabletl_Funcionalidades != null)) {
                    this.tabletl_Funcionalidades.InitVars();
                }
            }
            this.tabletl_Ofertas = ((tl_OfertasDataTable)(base.Tables["tl_Ofertas"]));
            if ((initTable == true)) {
                if ((this.tabletl_Ofertas != null)) {
                    this.tabletl_Ofertas.InitVars();
                }
            }
            this.tabletl_Pendientes = ((tl_PendientesDataTable)(base.Tables["tl_Pendientes"]));
            if ((initTable == true)) {
                if ((this.tabletl_Pendientes != null)) {
                    this.tabletl_Pendientes.InitVars();
                }
            }
            this.tabletl_Preguntas = ((tl_PreguntasDataTable)(base.Tables["tl_Preguntas"]));
            if ((initTable == true)) {
                if ((this.tabletl_Preguntas != null)) {
                    this.tabletl_Preguntas.InitVars();
                }
            }
            this.tabletl_Publicaciones = ((tl_PublicacionesDataTable)(base.Tables["tl_Publicaciones"]));
            if ((initTable == true)) {
                if ((this.tabletl_Publicaciones != null)) {
                    this.tabletl_Publicaciones.InitVars();
                }
            }
            this.tabletl_Publicaciones_Rubros = ((tl_Publicaciones_RubrosDataTable)(base.Tables["tl_Publicaciones_Rubros"]));
            if ((initTable == true)) {
                if ((this.tabletl_Publicaciones_Rubros != null)) {
                    this.tabletl_Publicaciones_Rubros.InitVars();
                }
            }
            this.tabletl_Roles = ((tl_RolesDataTable)(base.Tables["tl_Roles"]));
            if ((initTable == true)) {
                if ((this.tabletl_Roles != null)) {
                    this.tabletl_Roles.InitVars();
                }
            }
            this.tabletl_Roles_Funcionalidades = ((tl_Roles_FuncionalidadesDataTable)(base.Tables["tl_Roles_Funcionalidades"]));
            if ((initTable == true)) {
                if ((this.tabletl_Roles_Funcionalidades != null)) {
                    this.tabletl_Roles_Funcionalidades.InitVars();
                }
            }
            this.tabletl_Rubros = ((tl_RubrosDataTable)(base.Tables["tl_Rubros"]));
            if ((initTable == true)) {
                if ((this.tabletl_Rubros != null)) {
                    this.tabletl_Rubros.InitVars();
                }
            }
            this.tabletl_Usuarios = ((tl_UsuariosDataTable)(base.Tables["tl_Usuarios"]));
            if ((initTable == true)) {
                if ((this.tabletl_Usuarios != null)) {
                    this.tabletl_Usuarios.InitVars();
                }
            }
            this.tabletl_Usuarios_Roles = ((tl_Usuarios_RolesDataTable)(base.Tables["tl_Usuarios_Roles"]));
            if ((initTable == true)) {
                if ((this.tabletl_Usuarios_Roles != null)) {
                    this.tabletl_Usuarios_Roles.InitVars();
                }
            }
            this.tabletl_Visibilidades = ((tl_VisibilidadesDataTable)(base.Tables["tl_Visibilidades"]));
            if ((initTable == true)) {
                if ((this.tabletl_Visibilidades != null)) {
                    this.tabletl_Visibilidades.InitVars();
                }
            }
            this.tablesp_VendedoresConMasStock = ((sp_VendedoresConMasStockDataTable)(base.Tables["sp_VendedoresConMasStock"]));
            if ((initTable == true)) {
                if ((this.tablesp_VendedoresConMasStock != null)) {
                    this.tablesp_VendedoresConMasStock.InitVars();
                }
            }
            this.tableclientesMasPublicacionesSinCalificar = ((clientesMasPublicacionesSinCalificarDataTable)(base.Tables["clientesMasPublicacionesSinCalificar"]));
            if ((initTable == true)) {
                if ((this.tableclientesMasPublicacionesSinCalificar != null)) {
                    this.tableclientesMasPublicacionesSinCalificar.InitVars();
                }
            }
            this.tablevendedoresMayorReputacion = ((vendedoresMayorReputacionDataTable)(base.Tables["vendedoresMayorReputacion"]));
            if ((initTable == true)) {
                if ((this.tablevendedoresMayorReputacion != null)) {
                    this.tablevendedoresMayorReputacion.InitVars();
                }
            }
            this.tablevendedoresMayorFacturacion = ((vendedoresMayorFacturacionDataTable)(base.Tables["vendedoresMayorFacturacion"]));
            if ((initTable == true)) {
                if ((this.tablevendedoresMayorFacturacion != null)) {
                    this.tablevendedoresMayorFacturacion.InitVars();
                }
            }
            this.tabletl_ClientesyEmpresas = ((tl_ClientesyEmpresasDataTable)(base.Tables["tl_ClientesyEmpresas"]));
            if ((initTable == true)) {
                if ((this.tabletl_ClientesyEmpresas != null)) {
                    this.tabletl_ClientesyEmpresas.InitVars();
                }
            }
            this.tableHistorialCompras = ((HistorialComprasDataTable)(base.Tables["HistorialCompras"]));
            if ((initTable == true)) {
                if ((this.tableHistorialCompras != null)) {
                    this.tableHistorialCompras.InitVars();
                }
            }
            this.tableHistorialCalificacionesOtorgadas = ((HistorialCalificacionesOtorgadasDataTable)(base.Tables["HistorialCalificacionesOtorgadas"]));
            if ((initTable == true)) {
                if ((this.tableHistorialCalificacionesOtorgadas != null)) {
                    this.tableHistorialCalificacionesOtorgadas.InitVars();
                }
            }
            this.tableHistorialOfertas = ((HistorialOfertasDataTable)(base.Tables["HistorialOfertas"]));
            if ((initTable == true)) {
                if ((this.tableHistorialOfertas != null)) {
                    this.tableHistorialOfertas.InitVars();
                }
            }
            this.tableHistorialCalificacionesRecibidas = ((HistorialCalificacionesRecibidasDataTable)(base.Tables["HistorialCalificacionesRecibidas"]));
            if ((initTable == true)) {
                if ((this.tableHistorialCalificacionesRecibidas != null)) {
                    this.tableHistorialCalificacionesRecibidas.InitVars();
                }
            }
            this.tabletl_Calificaciones = ((tl_CalificacionesDataTable)(base.Tables["tl_Calificaciones"]));
            if ((initTable == true)) {
                if ((this.tabletl_Calificaciones != null)) {
                    this.tabletl_Calificaciones.InitVars();
                }
            }
            this.tabletl_Publicacion_Estados = ((tl_Publicacion_EstadosDataTable)(base.Tables["tl_Publicacion_Estados"]));
            if ((initTable == true)) {
                if ((this.tabletl_Publicacion_Estados != null)) {
                    this.tabletl_Publicacion_Estados.InitVars();
                }
            }
            this.tabletl_Publicacion_Tipos = ((tl_Publicacion_TiposDataTable)(base.Tables["tl_Publicacion_Tipos"]));
            if ((initTable == true)) {
                if ((this.tabletl_Publicacion_Tipos != null)) {
                    this.tabletl_Publicacion_Tipos.InitVars();
                }
            }
            this.tablePublicaciones = ((PublicacionesDataTable)(base.Tables["Publicaciones"]));
            if ((initTable == true)) {
                if ((this.tablePublicaciones != null)) {
                    this.tablePublicaciones.InitVars();
                }
            }
            this.relationfk_Compras_Publicacion = this.Relations["fk_Compras_Publicacion"];
            this.relationfk_Facturas_Items_Compra = this.Relations["fk_Facturas_Items_Compra"];
            this.relationfk_Facturas_Items_Factura = this.Relations["fk_Facturas_Items_Factura"];
            this.relationfk_Ofertas_Publicacion = this.Relations["fk_Ofertas_Publicacion"];
            this.relationfk_Pendientes_Compra = this.Relations["fk_Pendientes_Compra"];
            this.relationfk_Pendientes_Publicacion = this.Relations["fk_Pendientes_Publicacion"];
            this.relationfk_Preguntas_Publicacion = this.Relations["fk_Preguntas_Publicacion"];
            this.relationfk_Publicaciones_Visibilidad = this.Relations["fk_Publicaciones_Visibilidad"];
            this.relationfk_Publicaciones_Rubros_Publicacion = this.Relations["fk_Publicaciones_Rubros_Publicacion"];
            this.relationfk_Publicaciones_Rubros_Rubro = this.Relations["fk_Publicaciones_Rubros_Rubro"];
            this.relationfk_Roles_Funcionalidades_Funcionalidad = this.Relations["fk_Roles_Funcionalidades_Funcionalidad"];
            this.relationfk_Roles_Funcionalidades_Rol = this.Relations["fk_Roles_Funcionalidades_Rol"];
            this.relationfk_Usuarios_Roles_Rol = this.Relations["fk_Usuarios_Roles_Rol"];
            this.relationfk_Usuarios_Roles_Usuario = this.Relations["fk_Usuarios_Roles_Usuario"];
            this.relationfk_Ofertas_Publicacion1 = this.Relations["fk_Ofertas_Publicacion1"];
            this.relationfk_Compras_Publicacion1 = this.Relations["fk_Compras_Publicacion1"];
            this.relationfk_Publicaciones_Usuario = this.Relations["fk_Publicaciones_Usuario"];
            this.relationfk_Compras_Usuario = this.Relations["fk_Compras_Usuario"];
            this.relationfk_Calificaciones_Compra = this.Relations["fk_Calificaciones_Compra"];
            this.relationfk_Ofertas_Usuario = this.Relations["fk_Ofertas_Usuario"];
            this.relationfk_Facturas_Items_Publicacion = this.Relations["fk_Facturas_Items_Publicacion"];
            this.relationfk_Publicaciones_Estado = this.Relations["fk_Publicaciones_Estado"];
            this.relationfk_Publicaciones_Tipo = this.Relations["fk_Publicaciones_Tipo"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "GD1C2014DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/GD1C2014DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletl_Clientes = new tl_ClientesDataTable();
            base.Tables.Add(this.tabletl_Clientes);
            this.tabletl_Compras = new tl_ComprasDataTable();
            base.Tables.Add(this.tabletl_Compras);
            this.tabletl_Empresas = new tl_EmpresasDataTable();
            base.Tables.Add(this.tabletl_Empresas);
            this.tabletl_Facturas = new tl_FacturasDataTable();
            base.Tables.Add(this.tabletl_Facturas);
            this.tabletl_Facturas_Items = new tl_Facturas_ItemsDataTable();
            base.Tables.Add(this.tabletl_Facturas_Items);
            this.tabletl_Funcionalidades = new tl_FuncionalidadesDataTable();
            base.Tables.Add(this.tabletl_Funcionalidades);
            this.tabletl_Ofertas = new tl_OfertasDataTable();
            base.Tables.Add(this.tabletl_Ofertas);
            this.tabletl_Pendientes = new tl_PendientesDataTable();
            base.Tables.Add(this.tabletl_Pendientes);
            this.tabletl_Preguntas = new tl_PreguntasDataTable();
            base.Tables.Add(this.tabletl_Preguntas);
            this.tabletl_Publicaciones = new tl_PublicacionesDataTable();
            base.Tables.Add(this.tabletl_Publicaciones);
            this.tabletl_Publicaciones_Rubros = new tl_Publicaciones_RubrosDataTable();
            base.Tables.Add(this.tabletl_Publicaciones_Rubros);
            this.tabletl_Roles = new tl_RolesDataTable();
            base.Tables.Add(this.tabletl_Roles);
            this.tabletl_Roles_Funcionalidades = new tl_Roles_FuncionalidadesDataTable();
            base.Tables.Add(this.tabletl_Roles_Funcionalidades);
            this.tabletl_Rubros = new tl_RubrosDataTable();
            base.Tables.Add(this.tabletl_Rubros);
            this.tabletl_Usuarios = new tl_UsuariosDataTable();
            base.Tables.Add(this.tabletl_Usuarios);
            this.tabletl_Usuarios_Roles = new tl_Usuarios_RolesDataTable();
            base.Tables.Add(this.tabletl_Usuarios_Roles);
            this.tabletl_Visibilidades = new tl_VisibilidadesDataTable();
            base.Tables.Add(this.tabletl_Visibilidades);
            this.tablesp_VendedoresConMasStock = new sp_VendedoresConMasStockDataTable();
            base.Tables.Add(this.tablesp_VendedoresConMasStock);
            this.tableclientesMasPublicacionesSinCalificar = new clientesMasPublicacionesSinCalificarDataTable();
            base.Tables.Add(this.tableclientesMasPublicacionesSinCalificar);
            this.tablevendedoresMayorReputacion = new vendedoresMayorReputacionDataTable();
            base.Tables.Add(this.tablevendedoresMayorReputacion);
            this.tablevendedoresMayorFacturacion = new vendedoresMayorFacturacionDataTable();
            base.Tables.Add(this.tablevendedoresMayorFacturacion);
            this.tabletl_ClientesyEmpresas = new tl_ClientesyEmpresasDataTable();
            base.Tables.Add(this.tabletl_ClientesyEmpresas);
            this.tableHistorialCompras = new HistorialComprasDataTable();
            base.Tables.Add(this.tableHistorialCompras);
            this.tableHistorialCalificacionesOtorgadas = new HistorialCalificacionesOtorgadasDataTable();
            base.Tables.Add(this.tableHistorialCalificacionesOtorgadas);
            this.tableHistorialOfertas = new HistorialOfertasDataTable();
            base.Tables.Add(this.tableHistorialOfertas);
            this.tableHistorialCalificacionesRecibidas = new HistorialCalificacionesRecibidasDataTable();
            base.Tables.Add(this.tableHistorialCalificacionesRecibidas);
            this.tabletl_Calificaciones = new tl_CalificacionesDataTable();
            base.Tables.Add(this.tabletl_Calificaciones);
            this.tabletl_Publicacion_Estados = new tl_Publicacion_EstadosDataTable();
            base.Tables.Add(this.tabletl_Publicacion_Estados);
            this.tabletl_Publicacion_Tipos = new tl_Publicacion_TiposDataTable();
            base.Tables.Add(this.tabletl_Publicacion_Tipos);
            this.tablePublicaciones = new PublicacionesDataTable();
            base.Tables.Add(this.tablePublicaciones);
            this.relationfk_Compras_Publicacion = new global::System.Data.DataRelation("fk_Compras_Publicacion", new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones.CodigoColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Compras.Publicacion_CodigoColumn}, false);
            this.Relations.Add(this.relationfk_Compras_Publicacion);
            this.relationfk_Facturas_Items_Compra = new global::System.Data.DataRelation("fk_Facturas_Items_Compra", new global::System.Data.DataColumn[] {
                        this.tabletl_Compras.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Facturas_Items.Compra_IDColumn}, false);
            this.Relations.Add(this.relationfk_Facturas_Items_Compra);
            this.relationfk_Facturas_Items_Factura = new global::System.Data.DataRelation("fk_Facturas_Items_Factura", new global::System.Data.DataColumn[] {
                        this.tabletl_Facturas.NroColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Facturas_Items.Factura_NroColumn}, false);
            this.Relations.Add(this.relationfk_Facturas_Items_Factura);
            this.relationfk_Ofertas_Publicacion = new global::System.Data.DataRelation("fk_Ofertas_Publicacion", new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones.CodigoColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Ofertas.Publicacion_CodigoColumn}, false);
            this.Relations.Add(this.relationfk_Ofertas_Publicacion);
            this.relationfk_Pendientes_Compra = new global::System.Data.DataRelation("fk_Pendientes_Compra", new global::System.Data.DataColumn[] {
                        this.tabletl_Compras.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Pendientes.Compra_IDColumn}, false);
            this.Relations.Add(this.relationfk_Pendientes_Compra);
            this.relationfk_Pendientes_Publicacion = new global::System.Data.DataRelation("fk_Pendientes_Publicacion", new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones.CodigoColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Pendientes.Publicacion_CodigoColumn}, false);
            this.Relations.Add(this.relationfk_Pendientes_Publicacion);
            this.relationfk_Preguntas_Publicacion = new global::System.Data.DataRelation("fk_Preguntas_Publicacion", new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones.CodigoColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Preguntas.Publicacion_CodigoColumn}, false);
            this.Relations.Add(this.relationfk_Preguntas_Publicacion);
            this.relationfk_Publicaciones_Visibilidad = new global::System.Data.DataRelation("fk_Publicaciones_Visibilidad", new global::System.Data.DataColumn[] {
                        this.tabletl_Visibilidades.CodigoColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones.Visibilidad_CodigoColumn}, false);
            this.Relations.Add(this.relationfk_Publicaciones_Visibilidad);
            this.relationfk_Publicaciones_Rubros_Publicacion = new global::System.Data.DataRelation("fk_Publicaciones_Rubros_Publicacion", new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones.CodigoColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones_Rubros.Publicacion_CodigoColumn}, false);
            this.Relations.Add(this.relationfk_Publicaciones_Rubros_Publicacion);
            this.relationfk_Publicaciones_Rubros_Rubro = new global::System.Data.DataRelation("fk_Publicaciones_Rubros_Rubro", new global::System.Data.DataColumn[] {
                        this.tabletl_Rubros.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones_Rubros.Rubro_IDColumn}, false);
            this.Relations.Add(this.relationfk_Publicaciones_Rubros_Rubro);
            this.relationfk_Roles_Funcionalidades_Funcionalidad = new global::System.Data.DataRelation("fk_Roles_Funcionalidades_Funcionalidad", new global::System.Data.DataColumn[] {
                        this.tabletl_Funcionalidades.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Roles_Funcionalidades.Funcionalidad_IDColumn}, false);
            this.Relations.Add(this.relationfk_Roles_Funcionalidades_Funcionalidad);
            this.relationfk_Roles_Funcionalidades_Rol = new global::System.Data.DataRelation("fk_Roles_Funcionalidades_Rol", new global::System.Data.DataColumn[] {
                        this.tabletl_Roles.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Roles_Funcionalidades.Rol_IDColumn}, false);
            this.Relations.Add(this.relationfk_Roles_Funcionalidades_Rol);
            this.relationfk_Usuarios_Roles_Rol = new global::System.Data.DataRelation("fk_Usuarios_Roles_Rol", new global::System.Data.DataColumn[] {
                        this.tabletl_Roles.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Usuarios_Roles.Rol_IDColumn}, false);
            this.Relations.Add(this.relationfk_Usuarios_Roles_Rol);
            this.relationfk_Usuarios_Roles_Usuario = new global::System.Data.DataRelation("fk_Usuarios_Roles_Usuario", new global::System.Data.DataColumn[] {
                        this.tabletl_Usuarios.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Usuarios_Roles.Usuario_IDColumn}, false);
            this.Relations.Add(this.relationfk_Usuarios_Roles_Usuario);
            this.relationfk_Ofertas_Publicacion1 = new global::System.Data.DataRelation("fk_Ofertas_Publicacion1", new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones.CodigoColumn}, new global::System.Data.DataColumn[] {
                        this.tableHistorialOfertas.Publicacion_CodigoColumn}, false);
            this.Relations.Add(this.relationfk_Ofertas_Publicacion1);
            this.relationfk_Compras_Publicacion1 = new global::System.Data.DataRelation("fk_Compras_Publicacion1", new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones.CodigoColumn}, new global::System.Data.DataColumn[] {
                        this.tableHistorialCompras.Publicacion_CodigoColumn}, false);
            this.Relations.Add(this.relationfk_Compras_Publicacion1);
            this.relationfk_Publicaciones_Usuario = new global::System.Data.DataRelation("fk_Publicaciones_Usuario", new global::System.Data.DataColumn[] {
                        this.tabletl_Usuarios.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones.Usuario_IDColumn}, false);
            this.Relations.Add(this.relationfk_Publicaciones_Usuario);
            this.relationfk_Compras_Usuario = new global::System.Data.DataRelation("fk_Compras_Usuario", new global::System.Data.DataColumn[] {
                        this.tabletl_Usuarios.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Compras.Usuario_IDColumn}, false);
            this.Relations.Add(this.relationfk_Compras_Usuario);
            this.relationfk_Calificaciones_Compra = new global::System.Data.DataRelation("fk_Calificaciones_Compra", new global::System.Data.DataColumn[] {
                        this.tabletl_Compras.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Calificaciones.Compra_IDColumn}, false);
            this.Relations.Add(this.relationfk_Calificaciones_Compra);
            this.relationfk_Ofertas_Usuario = new global::System.Data.DataRelation("fk_Ofertas_Usuario", new global::System.Data.DataColumn[] {
                        this.tabletl_Usuarios.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Ofertas.Usuario_IDColumn}, false);
            this.Relations.Add(this.relationfk_Ofertas_Usuario);
            this.relationfk_Facturas_Items_Publicacion = new global::System.Data.DataRelation("fk_Facturas_Items_Publicacion", new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones.CodigoColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Facturas_Items.Publicacion_CodigoColumn}, false);
            this.Relations.Add(this.relationfk_Facturas_Items_Publicacion);
            this.relationfk_Publicaciones_Estado = new global::System.Data.DataRelation("fk_Publicaciones_Estado", new global::System.Data.DataColumn[] {
                        this.tabletl_Publicacion_Estados.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones.Estado_IDColumn}, false);
            this.Relations.Add(this.relationfk_Publicaciones_Estado);
            this.relationfk_Publicaciones_Tipo = new global::System.Data.DataRelation("fk_Publicaciones_Tipo", new global::System.Data.DataColumn[] {
                        this.tabletl_Publicacion_Tipos.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletl_Publicaciones.Tipo_IDColumn}, false);
            this.Relations.Add(this.relationfk_Publicaciones_Tipo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Clientes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Compras() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Empresas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Facturas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Facturas_Items() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Funcionalidades() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Ofertas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Pendientes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Preguntas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Publicaciones() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Publicaciones_Rubros() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Roles() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Roles_Funcionalidades() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Rubros() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Usuarios() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Usuarios_Roles() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Visibilidades() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesp_VendedoresConMasStock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeclientesMasPublicacionesSinCalificar() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevendedoresMayorReputacion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevendedoresMayorFacturacion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_ClientesyEmpresas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHistorialCompras() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHistorialCalificacionesOtorgadas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHistorialOfertas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHistorialCalificacionesRecibidas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Calificaciones() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Publicacion_Estados() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetl_Publicacion_Tipos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePublicaciones() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            GD1C2014DataSet ds = new GD1C2014DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tl_ClientesRowChangeEventHandler(object sender, tl_ClientesRowChangeEvent e);
        
        public delegate void tl_ComprasRowChangeEventHandler(object sender, tl_ComprasRowChangeEvent e);
        
        public delegate void tl_EmpresasRowChangeEventHandler(object sender, tl_EmpresasRowChangeEvent e);
        
        public delegate void tl_FacturasRowChangeEventHandler(object sender, tl_FacturasRowChangeEvent e);
        
        public delegate void tl_Facturas_ItemsRowChangeEventHandler(object sender, tl_Facturas_ItemsRowChangeEvent e);
        
        public delegate void tl_FuncionalidadesRowChangeEventHandler(object sender, tl_FuncionalidadesRowChangeEvent e);
        
        public delegate void tl_OfertasRowChangeEventHandler(object sender, tl_OfertasRowChangeEvent e);
        
        public delegate void tl_PendientesRowChangeEventHandler(object sender, tl_PendientesRowChangeEvent e);
        
        public delegate void tl_PreguntasRowChangeEventHandler(object sender, tl_PreguntasRowChangeEvent e);
        
        public delegate void tl_PublicacionesRowChangeEventHandler(object sender, tl_PublicacionesRowChangeEvent e);
        
        public delegate void tl_Publicaciones_RubrosRowChangeEventHandler(object sender, tl_Publicaciones_RubrosRowChangeEvent e);
        
        public delegate void tl_RolesRowChangeEventHandler(object sender, tl_RolesRowChangeEvent e);
        
        public delegate void tl_Roles_FuncionalidadesRowChangeEventHandler(object sender, tl_Roles_FuncionalidadesRowChangeEvent e);
        
        public delegate void tl_RubrosRowChangeEventHandler(object sender, tl_RubrosRowChangeEvent e);
        
        public delegate void tl_UsuariosRowChangeEventHandler(object sender, tl_UsuariosRowChangeEvent e);
        
        public delegate void tl_Usuarios_RolesRowChangeEventHandler(object sender, tl_Usuarios_RolesRowChangeEvent e);
        
        public delegate void tl_VisibilidadesRowChangeEventHandler(object sender, tl_VisibilidadesRowChangeEvent e);
        
        public delegate void sp_VendedoresConMasStockRowChangeEventHandler(object sender, sp_VendedoresConMasStockRowChangeEvent e);
        
        public delegate void clientesMasPublicacionesSinCalificarRowChangeEventHandler(object sender, clientesMasPublicacionesSinCalificarRowChangeEvent e);
        
        public delegate void vendedoresMayorReputacionRowChangeEventHandler(object sender, vendedoresMayorReputacionRowChangeEvent e);
        
        public delegate void vendedoresMayorFacturacionRowChangeEventHandler(object sender, vendedoresMayorFacturacionRowChangeEvent e);
        
        public delegate void tl_ClientesyEmpresasRowChangeEventHandler(object sender, tl_ClientesyEmpresasRowChangeEvent e);
        
        public delegate void HistorialComprasRowChangeEventHandler(object sender, HistorialComprasRowChangeEvent e);
        
        public delegate void HistorialCalificacionesOtorgadasRowChangeEventHandler(object sender, HistorialCalificacionesOtorgadasRowChangeEvent e);
        
        public delegate void HistorialOfertasRowChangeEventHandler(object sender, HistorialOfertasRowChangeEvent e);
        
        public delegate void HistorialCalificacionesRecibidasRowChangeEventHandler(object sender, HistorialCalificacionesRecibidasRowChangeEvent e);
        
        public delegate void tl_CalificacionesRowChangeEventHandler(object sender, tl_CalificacionesRowChangeEvent e);
        
        public delegate void tl_Publicacion_EstadosRowChangeEventHandler(object sender, tl_Publicacion_EstadosRowChangeEvent e);
        
        public delegate void tl_Publicacion_TiposRowChangeEventHandler(object sender, tl_Publicacion_TiposRowChangeEvent e);
        
        public delegate void PublicacionesRowChangeEventHandler(object sender, PublicacionesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_ClientesDataTable : global::System.Data.TypedTableBase<tl_ClientesRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnTipo_Documento;
            
            private global::System.Data.DataColumn columnNro_Documento;
            
            private global::System.Data.DataColumn columnApellido;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnFecha_Nac;
            
            private global::System.Data.DataColumn columnMail;
            
            private global::System.Data.DataColumn columnDom_Calle;
            
            private global::System.Data.DataColumn columnNro_Calle;
            
            private global::System.Data.DataColumn columnPiso;
            
            private global::System.Data.DataColumn columnDepto;
            
            private global::System.Data.DataColumn columnCod_Postal;
            
            private global::System.Data.DataColumn columnTelefono;
            
            private global::System.Data.DataColumn columnHabilitado;
            
            private global::System.Data.DataColumn columnCUIL;
            
            private global::System.Data.DataColumn columnSuma_Calificaciones;
            
            private global::System.Data.DataColumn columnCantidad_Calificaciones;
            
            private global::System.Data.DataColumn columnComisiones_Pendientes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesDataTable() {
                this.TableName = "tl_Clientes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_ClientesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_ClientesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tipo_DocumentoColumn {
                get {
                    return this.columnTipo_Documento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nro_DocumentoColumn {
                get {
                    return this.columnNro_Documento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApellidoColumn {
                get {
                    return this.columnApellido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fecha_NacColumn {
                get {
                    return this.columnFecha_Nac;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailColumn {
                get {
                    return this.columnMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dom_CalleColumn {
                get {
                    return this.columnDom_Calle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nro_CalleColumn {
                get {
                    return this.columnNro_Calle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PisoColumn {
                get {
                    return this.columnPiso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptoColumn {
                get {
                    return this.columnDepto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_PostalColumn {
                get {
                    return this.columnCod_Postal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelefonoColumn {
                get {
                    return this.columnTelefono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HabilitadoColumn {
                get {
                    return this.columnHabilitado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUILColumn {
                get {
                    return this.columnCUIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Suma_CalificacionesColumn {
                get {
                    return this.columnSuma_Calificaciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cantidad_CalificacionesColumn {
                get {
                    return this.columnCantidad_Calificaciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comisiones_PendientesColumn {
                get {
                    return this.columnComisiones_Pendientes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesRow this[int index] {
                get {
                    return ((tl_ClientesRow)(this.Rows[index]));
                }
            }
            
            public event tl_ClientesRowChangeEventHandler tl_ClientesRowChanging;
            
            public event tl_ClientesRowChangeEventHandler tl_ClientesRowChanged;
            
            public event tl_ClientesRowChangeEventHandler tl_ClientesRowDeleting;
            
            public event tl_ClientesRowChangeEventHandler tl_ClientesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_ClientesRow(tl_ClientesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesRow Addtl_ClientesRow(
                        string Tipo_Documento, 
                        decimal Nro_Documento, 
                        string Apellido, 
                        string Nombre, 
                        System.DateTime Fecha_Nac, 
                        string Mail, 
                        string Dom_Calle, 
                        decimal Nro_Calle, 
                        decimal Piso, 
                        string Depto, 
                        string Cod_Postal, 
                        decimal Telefono, 
                        bool Habilitado, 
                        string CUIL, 
                        decimal Suma_Calificaciones, 
                        decimal Cantidad_Calificaciones, 
                        decimal Comisiones_Pendientes) {
                tl_ClientesRow rowtl_ClientesRow = ((tl_ClientesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Tipo_Documento,
                        Nro_Documento,
                        Apellido,
                        Nombre,
                        Fecha_Nac,
                        Mail,
                        Dom_Calle,
                        Nro_Calle,
                        Piso,
                        Depto,
                        Cod_Postal,
                        Telefono,
                        Habilitado,
                        CUIL,
                        Suma_Calificaciones,
                        Cantidad_Calificaciones,
                        Comisiones_Pendientes};
                rowtl_ClientesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_ClientesRow);
                return rowtl_ClientesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesRow FindByID(decimal ID) {
                return ((tl_ClientesRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_ClientesDataTable cln = ((tl_ClientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_ClientesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTipo_Documento = base.Columns["Tipo_Documento"];
                this.columnNro_Documento = base.Columns["Nro_Documento"];
                this.columnApellido = base.Columns["Apellido"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnFecha_Nac = base.Columns["Fecha_Nac"];
                this.columnMail = base.Columns["Mail"];
                this.columnDom_Calle = base.Columns["Dom_Calle"];
                this.columnNro_Calle = base.Columns["Nro_Calle"];
                this.columnPiso = base.Columns["Piso"];
                this.columnDepto = base.Columns["Depto"];
                this.columnCod_Postal = base.Columns["Cod_Postal"];
                this.columnTelefono = base.Columns["Telefono"];
                this.columnHabilitado = base.Columns["Habilitado"];
                this.columnCUIL = base.Columns["CUIL"];
                this.columnSuma_Calificaciones = base.Columns["Suma_Calificaciones"];
                this.columnCantidad_Calificaciones = base.Columns["Cantidad_Calificaciones"];
                this.columnComisiones_Pendientes = base.Columns["Comisiones_Pendientes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTipo_Documento = new global::System.Data.DataColumn("Tipo_Documento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo_Documento);
                this.columnNro_Documento = new global::System.Data.DataColumn("Nro_Documento", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNro_Documento);
                this.columnApellido = new global::System.Data.DataColumn("Apellido", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApellido);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnFecha_Nac = new global::System.Data.DataColumn("Fecha_Nac", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha_Nac);
                this.columnMail = new global::System.Data.DataColumn("Mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMail);
                this.columnDom_Calle = new global::System.Data.DataColumn("Dom_Calle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDom_Calle);
                this.columnNro_Calle = new global::System.Data.DataColumn("Nro_Calle", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNro_Calle);
                this.columnPiso = new global::System.Data.DataColumn("Piso", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiso);
                this.columnDepto = new global::System.Data.DataColumn("Depto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepto);
                this.columnCod_Postal = new global::System.Data.DataColumn("Cod_Postal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Postal);
                this.columnTelefono = new global::System.Data.DataColumn("Telefono", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefono);
                this.columnHabilitado = new global::System.Data.DataColumn("Habilitado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHabilitado);
                this.columnCUIL = new global::System.Data.DataColumn("CUIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUIL);
                this.columnSuma_Calificaciones = new global::System.Data.DataColumn("Suma_Calificaciones", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuma_Calificaciones);
                this.columnCantidad_Calificaciones = new global::System.Data.DataColumn("Cantidad_Calificaciones", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad_Calificaciones);
                this.columnComisiones_Pendientes = new global::System.Data.DataColumn("Comisiones_Pendientes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComisiones_Pendientes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnTipo_Documento.AllowDBNull = false;
                this.columnTipo_Documento.MaxLength = 10;
                this.columnNro_Documento.AllowDBNull = false;
                this.columnApellido.AllowDBNull = false;
                this.columnApellido.MaxLength = 255;
                this.columnNombre.AllowDBNull = false;
                this.columnNombre.MaxLength = 255;
                this.columnMail.MaxLength = 255;
                this.columnDom_Calle.MaxLength = 255;
                this.columnDepto.MaxLength = 50;
                this.columnCod_Postal.MaxLength = 50;
                this.columnHabilitado.AllowDBNull = false;
                this.columnCUIL.AllowDBNull = false;
                this.columnCUIL.MaxLength = 50;
                this.columnSuma_Calificaciones.AllowDBNull = false;
                this.columnCantidad_Calificaciones.AllowDBNull = false;
                this.columnComisiones_Pendientes.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesRow Newtl_ClientesRow() {
                return ((tl_ClientesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_ClientesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_ClientesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_ClientesRowChanged != null)) {
                    this.tl_ClientesRowChanged(this, new tl_ClientesRowChangeEvent(((tl_ClientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_ClientesRowChanging != null)) {
                    this.tl_ClientesRowChanging(this, new tl_ClientesRowChangeEvent(((tl_ClientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_ClientesRowDeleted != null)) {
                    this.tl_ClientesRowDeleted(this, new tl_ClientesRowChangeEvent(((tl_ClientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_ClientesRowDeleting != null)) {
                    this.tl_ClientesRowDeleting(this, new tl_ClientesRowChangeEvent(((tl_ClientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_ClientesRow(tl_ClientesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_ClientesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_ComprasDataTable : global::System.Data.TypedTableBase<tl_ComprasRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnPublicacion_Codigo;
            
            private global::System.Data.DataColumn columnCantidad;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnComision_Pagada;
            
            private global::System.Data.DataColumn columnUsuario_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ComprasDataTable() {
                this.TableName = "tl_Compras";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_ComprasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_ComprasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Publicacion_CodigoColumn {
                get {
                    return this.columnPublicacion_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comision_PagadaColumn {
                get {
                    return this.columnComision_Pagada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Usuario_IDColumn {
                get {
                    return this.columnUsuario_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ComprasRow this[int index] {
                get {
                    return ((tl_ComprasRow)(this.Rows[index]));
                }
            }
            
            public event tl_ComprasRowChangeEventHandler tl_ComprasRowChanging;
            
            public event tl_ComprasRowChangeEventHandler tl_ComprasRowChanged;
            
            public event tl_ComprasRowChangeEventHandler tl_ComprasRowDeleting;
            
            public event tl_ComprasRowChangeEventHandler tl_ComprasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_ComprasRow(tl_ComprasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ComprasRow Addtl_ComprasRow(tl_PublicacionesRow parenttl_PublicacionesRowByfk_Compras_Publicacion, decimal Cantidad, System.DateTime Fecha, bool Comision_Pagada, tl_UsuariosRow parenttl_UsuariosRowByfk_Compras_Usuario) {
                tl_ComprasRow rowtl_ComprasRow = ((tl_ComprasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Cantidad,
                        Fecha,
                        Comision_Pagada,
                        null};
                if ((parenttl_PublicacionesRowByfk_Compras_Publicacion != null)) {
                    columnValuesArray[1] = parenttl_PublicacionesRowByfk_Compras_Publicacion[0];
                }
                if ((parenttl_UsuariosRowByfk_Compras_Usuario != null)) {
                    columnValuesArray[5] = parenttl_UsuariosRowByfk_Compras_Usuario[0];
                }
                rowtl_ComprasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_ComprasRow);
                return rowtl_ComprasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ComprasRow FindByID(decimal ID) {
                return ((tl_ComprasRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_ComprasDataTable cln = ((tl_ComprasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_ComprasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnPublicacion_Codigo = base.Columns["Publicacion_Codigo"];
                this.columnCantidad = base.Columns["Cantidad"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnComision_Pagada = base.Columns["Comision_Pagada"];
                this.columnUsuario_ID = base.Columns["Usuario_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnPublicacion_Codigo = new global::System.Data.DataColumn("Publicacion_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicacion_Codigo);
                this.columnCantidad = new global::System.Data.DataColumn("Cantidad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnComision_Pagada = new global::System.Data.DataColumn("Comision_Pagada", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComision_Pagada);
                this.columnUsuario_ID = new global::System.Data.DataColumn("Usuario_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsuario_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnPublicacion_Codigo.AllowDBNull = false;
                this.columnCantidad.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
                this.columnComision_Pagada.AllowDBNull = false;
                this.columnUsuario_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ComprasRow Newtl_ComprasRow() {
                return ((tl_ComprasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_ComprasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_ComprasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_ComprasRowChanged != null)) {
                    this.tl_ComprasRowChanged(this, new tl_ComprasRowChangeEvent(((tl_ComprasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_ComprasRowChanging != null)) {
                    this.tl_ComprasRowChanging(this, new tl_ComprasRowChangeEvent(((tl_ComprasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_ComprasRowDeleted != null)) {
                    this.tl_ComprasRowDeleted(this, new tl_ComprasRowChangeEvent(((tl_ComprasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_ComprasRowDeleting != null)) {
                    this.tl_ComprasRowDeleting(this, new tl_ComprasRowChangeEvent(((tl_ComprasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_ComprasRow(tl_ComprasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_ComprasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_EmpresasDataTable : global::System.Data.TypedTableBase<tl_EmpresasRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRazon_Social;
            
            private global::System.Data.DataColumn columnCUIT;
            
            private global::System.Data.DataColumn columnFecha_Creacion;
            
            private global::System.Data.DataColumn columnMail;
            
            private global::System.Data.DataColumn columnDom_Calle;
            
            private global::System.Data.DataColumn columnNro_Calle;
            
            private global::System.Data.DataColumn columnPiso;
            
            private global::System.Data.DataColumn columnDepto;
            
            private global::System.Data.DataColumn columnCod_Postal;
            
            private global::System.Data.DataColumn columnHabilitada;
            
            private global::System.Data.DataColumn columnSuma_Calificaciones;
            
            private global::System.Data.DataColumn columnCantidad_Calificaciones;
            
            private global::System.Data.DataColumn columnComisiones_Pendientes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_EmpresasDataTable() {
                this.TableName = "tl_Empresas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_EmpresasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_EmpresasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Razon_SocialColumn {
                get {
                    return this.columnRazon_Social;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUITColumn {
                get {
                    return this.columnCUIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fecha_CreacionColumn {
                get {
                    return this.columnFecha_Creacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailColumn {
                get {
                    return this.columnMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dom_CalleColumn {
                get {
                    return this.columnDom_Calle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nro_CalleColumn {
                get {
                    return this.columnNro_Calle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PisoColumn {
                get {
                    return this.columnPiso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptoColumn {
                get {
                    return this.columnDepto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_PostalColumn {
                get {
                    return this.columnCod_Postal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HabilitadaColumn {
                get {
                    return this.columnHabilitada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Suma_CalificacionesColumn {
                get {
                    return this.columnSuma_Calificaciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cantidad_CalificacionesColumn {
                get {
                    return this.columnCantidad_Calificaciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comisiones_PendientesColumn {
                get {
                    return this.columnComisiones_Pendientes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_EmpresasRow this[int index] {
                get {
                    return ((tl_EmpresasRow)(this.Rows[index]));
                }
            }
            
            public event tl_EmpresasRowChangeEventHandler tl_EmpresasRowChanging;
            
            public event tl_EmpresasRowChangeEventHandler tl_EmpresasRowChanged;
            
            public event tl_EmpresasRowChangeEventHandler tl_EmpresasRowDeleting;
            
            public event tl_EmpresasRowChangeEventHandler tl_EmpresasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_EmpresasRow(tl_EmpresasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_EmpresasRow Addtl_EmpresasRow(string Razon_Social, string CUIT, System.DateTime Fecha_Creacion, string Mail, string Dom_Calle, decimal Nro_Calle, decimal Piso, string Depto, string Cod_Postal, bool Habilitada, decimal Suma_Calificaciones, decimal Cantidad_Calificaciones, decimal Comisiones_Pendientes) {
                tl_EmpresasRow rowtl_EmpresasRow = ((tl_EmpresasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Razon_Social,
                        CUIT,
                        Fecha_Creacion,
                        Mail,
                        Dom_Calle,
                        Nro_Calle,
                        Piso,
                        Depto,
                        Cod_Postal,
                        Habilitada,
                        Suma_Calificaciones,
                        Cantidad_Calificaciones,
                        Comisiones_Pendientes};
                rowtl_EmpresasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_EmpresasRow);
                return rowtl_EmpresasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_EmpresasRow FindByID(decimal ID) {
                return ((tl_EmpresasRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_EmpresasDataTable cln = ((tl_EmpresasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_EmpresasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRazon_Social = base.Columns["Razon_Social"];
                this.columnCUIT = base.Columns["CUIT"];
                this.columnFecha_Creacion = base.Columns["Fecha_Creacion"];
                this.columnMail = base.Columns["Mail"];
                this.columnDom_Calle = base.Columns["Dom_Calle"];
                this.columnNro_Calle = base.Columns["Nro_Calle"];
                this.columnPiso = base.Columns["Piso"];
                this.columnDepto = base.Columns["Depto"];
                this.columnCod_Postal = base.Columns["Cod_Postal"];
                this.columnHabilitada = base.Columns["Habilitada"];
                this.columnSuma_Calificaciones = base.Columns["Suma_Calificaciones"];
                this.columnCantidad_Calificaciones = base.Columns["Cantidad_Calificaciones"];
                this.columnComisiones_Pendientes = base.Columns["Comisiones_Pendientes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRazon_Social = new global::System.Data.DataColumn("Razon_Social", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRazon_Social);
                this.columnCUIT = new global::System.Data.DataColumn("CUIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUIT);
                this.columnFecha_Creacion = new global::System.Data.DataColumn("Fecha_Creacion", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha_Creacion);
                this.columnMail = new global::System.Data.DataColumn("Mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMail);
                this.columnDom_Calle = new global::System.Data.DataColumn("Dom_Calle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDom_Calle);
                this.columnNro_Calle = new global::System.Data.DataColumn("Nro_Calle", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNro_Calle);
                this.columnPiso = new global::System.Data.DataColumn("Piso", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiso);
                this.columnDepto = new global::System.Data.DataColumn("Depto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepto);
                this.columnCod_Postal = new global::System.Data.DataColumn("Cod_Postal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Postal);
                this.columnHabilitada = new global::System.Data.DataColumn("Habilitada", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHabilitada);
                this.columnSuma_Calificaciones = new global::System.Data.DataColumn("Suma_Calificaciones", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuma_Calificaciones);
                this.columnCantidad_Calificaciones = new global::System.Data.DataColumn("Cantidad_Calificaciones", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad_Calificaciones);
                this.columnComisiones_Pendientes = new global::System.Data.DataColumn("Comisiones_Pendientes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComisiones_Pendientes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnRazon_Social.AllowDBNull = false;
                this.columnRazon_Social.MaxLength = 255;
                this.columnCUIT.AllowDBNull = false;
                this.columnCUIT.MaxLength = 50;
                this.columnFecha_Creacion.AllowDBNull = false;
                this.columnMail.MaxLength = 50;
                this.columnDom_Calle.MaxLength = 100;
                this.columnDepto.MaxLength = 50;
                this.columnCod_Postal.MaxLength = 50;
                this.columnHabilitada.AllowDBNull = false;
                this.columnSuma_Calificaciones.AllowDBNull = false;
                this.columnCantidad_Calificaciones.AllowDBNull = false;
                this.columnComisiones_Pendientes.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_EmpresasRow Newtl_EmpresasRow() {
                return ((tl_EmpresasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_EmpresasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_EmpresasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_EmpresasRowChanged != null)) {
                    this.tl_EmpresasRowChanged(this, new tl_EmpresasRowChangeEvent(((tl_EmpresasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_EmpresasRowChanging != null)) {
                    this.tl_EmpresasRowChanging(this, new tl_EmpresasRowChangeEvent(((tl_EmpresasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_EmpresasRowDeleted != null)) {
                    this.tl_EmpresasRowDeleted(this, new tl_EmpresasRowChangeEvent(((tl_EmpresasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_EmpresasRowDeleting != null)) {
                    this.tl_EmpresasRowDeleting(this, new tl_EmpresasRowChangeEvent(((tl_EmpresasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_EmpresasRow(tl_EmpresasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_EmpresasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_FacturasDataTable : global::System.Data.TypedTableBase<tl_FacturasRow> {
            
            private global::System.Data.DataColumn columnNro;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnPago_Descripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FacturasDataTable() {
                this.TableName = "tl_Facturas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_FacturasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_FacturasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NroColumn {
                get {
                    return this.columnNro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pago_DescripcionColumn {
                get {
                    return this.columnPago_Descripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FacturasRow this[int index] {
                get {
                    return ((tl_FacturasRow)(this.Rows[index]));
                }
            }
            
            public event tl_FacturasRowChangeEventHandler tl_FacturasRowChanging;
            
            public event tl_FacturasRowChangeEventHandler tl_FacturasRowChanged;
            
            public event tl_FacturasRowChangeEventHandler tl_FacturasRowDeleting;
            
            public event tl_FacturasRowChangeEventHandler tl_FacturasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_FacturasRow(tl_FacturasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FacturasRow Addtl_FacturasRow(System.DateTime Fecha, string Pago_Descripcion) {
                tl_FacturasRow rowtl_FacturasRow = ((tl_FacturasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Fecha,
                        Pago_Descripcion};
                rowtl_FacturasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_FacturasRow);
                return rowtl_FacturasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FacturasRow FindByNro(decimal Nro) {
                return ((tl_FacturasRow)(this.Rows.Find(new object[] {
                            Nro})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_FacturasDataTable cln = ((tl_FacturasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_FacturasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNro = base.Columns["Nro"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnPago_Descripcion = base.Columns["Pago_Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNro = new global::System.Data.DataColumn("Nro", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNro);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnPago_Descripcion = new global::System.Data.DataColumn("Pago_Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPago_Descripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNro}, true));
                this.columnNro.AutoIncrement = true;
                this.columnNro.AutoIncrementSeed = -1;
                this.columnNro.AutoIncrementStep = -1;
                this.columnNro.AllowDBNull = false;
                this.columnNro.ReadOnly = true;
                this.columnNro.Unique = true;
                this.columnFecha.AllowDBNull = false;
                this.columnPago_Descripcion.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FacturasRow Newtl_FacturasRow() {
                return ((tl_FacturasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_FacturasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_FacturasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_FacturasRowChanged != null)) {
                    this.tl_FacturasRowChanged(this, new tl_FacturasRowChangeEvent(((tl_FacturasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_FacturasRowChanging != null)) {
                    this.tl_FacturasRowChanging(this, new tl_FacturasRowChangeEvent(((tl_FacturasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_FacturasRowDeleted != null)) {
                    this.tl_FacturasRowDeleted(this, new tl_FacturasRowChangeEvent(((tl_FacturasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_FacturasRowDeleting != null)) {
                    this.tl_FacturasRowDeleting(this, new tl_FacturasRowChangeEvent(((tl_FacturasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_FacturasRow(tl_FacturasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_FacturasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_Facturas_ItemsDataTable : global::System.Data.TypedTableBase<tl_Facturas_ItemsRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFactura_Nro;
            
            private global::System.Data.DataColumn columnCantidad;
            
            private global::System.Data.DataColumn columnMonto;
            
            private global::System.Data.DataColumn columnCompra_ID;
            
            private global::System.Data.DataColumn columnPublicacion_Codigo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Facturas_ItemsDataTable() {
                this.TableName = "tl_Facturas_Items";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_Facturas_ItemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_Facturas_ItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Factura_NroColumn {
                get {
                    return this.columnFactura_Nro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MontoColumn {
                get {
                    return this.columnMonto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Compra_IDColumn {
                get {
                    return this.columnCompra_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Publicacion_CodigoColumn {
                get {
                    return this.columnPublicacion_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Facturas_ItemsRow this[int index] {
                get {
                    return ((tl_Facturas_ItemsRow)(this.Rows[index]));
                }
            }
            
            public event tl_Facturas_ItemsRowChangeEventHandler tl_Facturas_ItemsRowChanging;
            
            public event tl_Facturas_ItemsRowChangeEventHandler tl_Facturas_ItemsRowChanged;
            
            public event tl_Facturas_ItemsRowChangeEventHandler tl_Facturas_ItemsRowDeleting;
            
            public event tl_Facturas_ItemsRowChangeEventHandler tl_Facturas_ItemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_Facturas_ItemsRow(tl_Facturas_ItemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Facturas_ItemsRow Addtl_Facturas_ItemsRow(tl_FacturasRow parenttl_FacturasRowByfk_Facturas_Items_Factura, decimal Cantidad, decimal Monto, tl_ComprasRow parenttl_ComprasRowByfk_Facturas_Items_Compra, tl_PublicacionesRow parenttl_PublicacionesRowByfk_Facturas_Items_Publicacion) {
                tl_Facturas_ItemsRow rowtl_Facturas_ItemsRow = ((tl_Facturas_ItemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Cantidad,
                        Monto,
                        null,
                        null};
                if ((parenttl_FacturasRowByfk_Facturas_Items_Factura != null)) {
                    columnValuesArray[1] = parenttl_FacturasRowByfk_Facturas_Items_Factura[0];
                }
                if ((parenttl_ComprasRowByfk_Facturas_Items_Compra != null)) {
                    columnValuesArray[4] = parenttl_ComprasRowByfk_Facturas_Items_Compra[0];
                }
                if ((parenttl_PublicacionesRowByfk_Facturas_Items_Publicacion != null)) {
                    columnValuesArray[5] = parenttl_PublicacionesRowByfk_Facturas_Items_Publicacion[0];
                }
                rowtl_Facturas_ItemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_Facturas_ItemsRow);
                return rowtl_Facturas_ItemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Facturas_ItemsRow FindByID(decimal ID) {
                return ((tl_Facturas_ItemsRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_Facturas_ItemsDataTable cln = ((tl_Facturas_ItemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_Facturas_ItemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnFactura_Nro = base.Columns["Factura_Nro"];
                this.columnCantidad = base.Columns["Cantidad"];
                this.columnMonto = base.Columns["Monto"];
                this.columnCompra_ID = base.Columns["Compra_ID"];
                this.columnPublicacion_Codigo = base.Columns["Publicacion_Codigo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFactura_Nro = new global::System.Data.DataColumn("Factura_Nro", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactura_Nro);
                this.columnCantidad = new global::System.Data.DataColumn("Cantidad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad);
                this.columnMonto = new global::System.Data.DataColumn("Monto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonto);
                this.columnCompra_ID = new global::System.Data.DataColumn("Compra_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompra_ID);
                this.columnPublicacion_Codigo = new global::System.Data.DataColumn("Publicacion_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicacion_Codigo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnFactura_Nro.AllowDBNull = false;
                this.columnCantidad.AllowDBNull = false;
                this.columnMonto.AllowDBNull = false;
                this.columnPublicacion_Codigo.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Facturas_ItemsRow Newtl_Facturas_ItemsRow() {
                return ((tl_Facturas_ItemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_Facturas_ItemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_Facturas_ItemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_Facturas_ItemsRowChanged != null)) {
                    this.tl_Facturas_ItemsRowChanged(this, new tl_Facturas_ItemsRowChangeEvent(((tl_Facturas_ItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_Facturas_ItemsRowChanging != null)) {
                    this.tl_Facturas_ItemsRowChanging(this, new tl_Facturas_ItemsRowChangeEvent(((tl_Facturas_ItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_Facturas_ItemsRowDeleted != null)) {
                    this.tl_Facturas_ItemsRowDeleted(this, new tl_Facturas_ItemsRowChangeEvent(((tl_Facturas_ItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_Facturas_ItemsRowDeleting != null)) {
                    this.tl_Facturas_ItemsRowDeleting(this, new tl_Facturas_ItemsRowChangeEvent(((tl_Facturas_ItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_Facturas_ItemsRow(tl_Facturas_ItemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_Facturas_ItemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_FuncionalidadesDataTable : global::System.Data.TypedTableBase<tl_FuncionalidadesRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNombre;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FuncionalidadesDataTable() {
                this.TableName = "tl_Funcionalidades";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_FuncionalidadesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_FuncionalidadesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FuncionalidadesRow this[int index] {
                get {
                    return ((tl_FuncionalidadesRow)(this.Rows[index]));
                }
            }
            
            public event tl_FuncionalidadesRowChangeEventHandler tl_FuncionalidadesRowChanging;
            
            public event tl_FuncionalidadesRowChangeEventHandler tl_FuncionalidadesRowChanged;
            
            public event tl_FuncionalidadesRowChangeEventHandler tl_FuncionalidadesRowDeleting;
            
            public event tl_FuncionalidadesRowChangeEventHandler tl_FuncionalidadesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_FuncionalidadesRow(tl_FuncionalidadesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FuncionalidadesRow Addtl_FuncionalidadesRow(string Nombre) {
                tl_FuncionalidadesRow rowtl_FuncionalidadesRow = ((tl_FuncionalidadesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Nombre};
                rowtl_FuncionalidadesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_FuncionalidadesRow);
                return rowtl_FuncionalidadesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FuncionalidadesRow FindByID(decimal ID) {
                return ((tl_FuncionalidadesRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_FuncionalidadesDataTable cln = ((tl_FuncionalidadesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_FuncionalidadesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNombre = base.Columns["Nombre"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnNombre.AllowDBNull = false;
                this.columnNombre.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FuncionalidadesRow Newtl_FuncionalidadesRow() {
                return ((tl_FuncionalidadesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_FuncionalidadesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_FuncionalidadesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_FuncionalidadesRowChanged != null)) {
                    this.tl_FuncionalidadesRowChanged(this, new tl_FuncionalidadesRowChangeEvent(((tl_FuncionalidadesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_FuncionalidadesRowChanging != null)) {
                    this.tl_FuncionalidadesRowChanging(this, new tl_FuncionalidadesRowChangeEvent(((tl_FuncionalidadesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_FuncionalidadesRowDeleted != null)) {
                    this.tl_FuncionalidadesRowDeleted(this, new tl_FuncionalidadesRowChangeEvent(((tl_FuncionalidadesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_FuncionalidadesRowDeleting != null)) {
                    this.tl_FuncionalidadesRowDeleting(this, new tl_FuncionalidadesRowChangeEvent(((tl_FuncionalidadesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_FuncionalidadesRow(tl_FuncionalidadesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_FuncionalidadesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_OfertasDataTable : global::System.Data.TypedTableBase<tl_OfertasRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnPublicacion_Codigo;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnMonto;
            
            private global::System.Data.DataColumn columnGanadora;
            
            private global::System.Data.DataColumn columnUsuario_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_OfertasDataTable() {
                this.TableName = "tl_Ofertas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_OfertasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_OfertasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Publicacion_CodigoColumn {
                get {
                    return this.columnPublicacion_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MontoColumn {
                get {
                    return this.columnMonto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GanadoraColumn {
                get {
                    return this.columnGanadora;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Usuario_IDColumn {
                get {
                    return this.columnUsuario_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_OfertasRow this[int index] {
                get {
                    return ((tl_OfertasRow)(this.Rows[index]));
                }
            }
            
            public event tl_OfertasRowChangeEventHandler tl_OfertasRowChanging;
            
            public event tl_OfertasRowChangeEventHandler tl_OfertasRowChanged;
            
            public event tl_OfertasRowChangeEventHandler tl_OfertasRowDeleting;
            
            public event tl_OfertasRowChangeEventHandler tl_OfertasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_OfertasRow(tl_OfertasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_OfertasRow Addtl_OfertasRow(tl_PublicacionesRow parenttl_PublicacionesRowByfk_Ofertas_Publicacion, System.DateTime Fecha, decimal Monto, bool Ganadora, tl_UsuariosRow parenttl_UsuariosRowByfk_Ofertas_Usuario) {
                tl_OfertasRow rowtl_OfertasRow = ((tl_OfertasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Fecha,
                        Monto,
                        Ganadora,
                        null};
                if ((parenttl_PublicacionesRowByfk_Ofertas_Publicacion != null)) {
                    columnValuesArray[1] = parenttl_PublicacionesRowByfk_Ofertas_Publicacion[0];
                }
                if ((parenttl_UsuariosRowByfk_Ofertas_Usuario != null)) {
                    columnValuesArray[5] = parenttl_UsuariosRowByfk_Ofertas_Usuario[0];
                }
                rowtl_OfertasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_OfertasRow);
                return rowtl_OfertasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_OfertasRow FindByID(decimal ID) {
                return ((tl_OfertasRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_OfertasDataTable cln = ((tl_OfertasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_OfertasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnPublicacion_Codigo = base.Columns["Publicacion_Codigo"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnMonto = base.Columns["Monto"];
                this.columnGanadora = base.Columns["Ganadora"];
                this.columnUsuario_ID = base.Columns["Usuario_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnPublicacion_Codigo = new global::System.Data.DataColumn("Publicacion_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicacion_Codigo);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnMonto = new global::System.Data.DataColumn("Monto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonto);
                this.columnGanadora = new global::System.Data.DataColumn("Ganadora", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGanadora);
                this.columnUsuario_ID = new global::System.Data.DataColumn("Usuario_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsuario_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnPublicacion_Codigo.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
                this.columnMonto.AllowDBNull = false;
                this.columnGanadora.AllowDBNull = false;
                this.columnUsuario_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_OfertasRow Newtl_OfertasRow() {
                return ((tl_OfertasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_OfertasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_OfertasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_OfertasRowChanged != null)) {
                    this.tl_OfertasRowChanged(this, new tl_OfertasRowChangeEvent(((tl_OfertasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_OfertasRowChanging != null)) {
                    this.tl_OfertasRowChanging(this, new tl_OfertasRowChangeEvent(((tl_OfertasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_OfertasRowDeleted != null)) {
                    this.tl_OfertasRowDeleted(this, new tl_OfertasRowChangeEvent(((tl_OfertasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_OfertasRowDeleting != null)) {
                    this.tl_OfertasRowDeleting(this, new tl_OfertasRowChangeEvent(((tl_OfertasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_OfertasRow(tl_OfertasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_OfertasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_PendientesDataTable : global::System.Data.TypedTableBase<tl_PendientesRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnMonto;
            
            private global::System.Data.DataColumn columnPublicacion_Codigo;
            
            private global::System.Data.DataColumn columnCompra_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PendientesDataTable() {
                this.TableName = "tl_Pendientes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_PendientesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_PendientesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MontoColumn {
                get {
                    return this.columnMonto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Publicacion_CodigoColumn {
                get {
                    return this.columnPublicacion_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Compra_IDColumn {
                get {
                    return this.columnCompra_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PendientesRow this[int index] {
                get {
                    return ((tl_PendientesRow)(this.Rows[index]));
                }
            }
            
            public event tl_PendientesRowChangeEventHandler tl_PendientesRowChanging;
            
            public event tl_PendientesRowChangeEventHandler tl_PendientesRowChanged;
            
            public event tl_PendientesRowChangeEventHandler tl_PendientesRowDeleting;
            
            public event tl_PendientesRowChangeEventHandler tl_PendientesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_PendientesRow(tl_PendientesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PendientesRow Addtl_PendientesRow(System.DateTime Fecha, decimal Monto, tl_PublicacionesRow parenttl_PublicacionesRowByfk_Pendientes_Publicacion, tl_ComprasRow parenttl_ComprasRowByfk_Pendientes_Compra) {
                tl_PendientesRow rowtl_PendientesRow = ((tl_PendientesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Fecha,
                        Monto,
                        null,
                        null};
                if ((parenttl_PublicacionesRowByfk_Pendientes_Publicacion != null)) {
                    columnValuesArray[3] = parenttl_PublicacionesRowByfk_Pendientes_Publicacion[0];
                }
                if ((parenttl_ComprasRowByfk_Pendientes_Compra != null)) {
                    columnValuesArray[4] = parenttl_ComprasRowByfk_Pendientes_Compra[0];
                }
                rowtl_PendientesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_PendientesRow);
                return rowtl_PendientesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PendientesRow FindByID(decimal ID) {
                return ((tl_PendientesRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_PendientesDataTable cln = ((tl_PendientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_PendientesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnMonto = base.Columns["Monto"];
                this.columnPublicacion_Codigo = base.Columns["Publicacion_Codigo"];
                this.columnCompra_ID = base.Columns["Compra_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnMonto = new global::System.Data.DataColumn("Monto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonto);
                this.columnPublicacion_Codigo = new global::System.Data.DataColumn("Publicacion_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicacion_Codigo);
                this.columnCompra_ID = new global::System.Data.DataColumn("Compra_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompra_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnFecha.AllowDBNull = false;
                this.columnMonto.AllowDBNull = false;
                this.columnPublicacion_Codigo.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PendientesRow Newtl_PendientesRow() {
                return ((tl_PendientesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_PendientesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_PendientesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_PendientesRowChanged != null)) {
                    this.tl_PendientesRowChanged(this, new tl_PendientesRowChangeEvent(((tl_PendientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_PendientesRowChanging != null)) {
                    this.tl_PendientesRowChanging(this, new tl_PendientesRowChangeEvent(((tl_PendientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_PendientesRowDeleted != null)) {
                    this.tl_PendientesRowDeleted(this, new tl_PendientesRowChangeEvent(((tl_PendientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_PendientesRowDeleting != null)) {
                    this.tl_PendientesRowDeleting(this, new tl_PendientesRowChangeEvent(((tl_PendientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_PendientesRow(tl_PendientesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_PendientesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_PreguntasDataTable : global::System.Data.TypedTableBase<tl_PreguntasRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnPublicacion_Codigo;
            
            private global::System.Data.DataColumn columnPregunta;
            
            private global::System.Data.DataColumn columnFecha_Respuesta;
            
            private global::System.Data.DataColumn columnRespuesta;
            
            private global::System.Data.DataColumn columnUsuario_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PreguntasDataTable() {
                this.TableName = "tl_Preguntas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_PreguntasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_PreguntasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Publicacion_CodigoColumn {
                get {
                    return this.columnPublicacion_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreguntaColumn {
                get {
                    return this.columnPregunta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fecha_RespuestaColumn {
                get {
                    return this.columnFecha_Respuesta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RespuestaColumn {
                get {
                    return this.columnRespuesta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Usuario_IDColumn {
                get {
                    return this.columnUsuario_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PreguntasRow this[int index] {
                get {
                    return ((tl_PreguntasRow)(this.Rows[index]));
                }
            }
            
            public event tl_PreguntasRowChangeEventHandler tl_PreguntasRowChanging;
            
            public event tl_PreguntasRowChangeEventHandler tl_PreguntasRowChanged;
            
            public event tl_PreguntasRowChangeEventHandler tl_PreguntasRowDeleting;
            
            public event tl_PreguntasRowChangeEventHandler tl_PreguntasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_PreguntasRow(tl_PreguntasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PreguntasRow Addtl_PreguntasRow(tl_PublicacionesRow parenttl_PublicacionesRowByfk_Preguntas_Publicacion, string Pregunta, System.DateTime Fecha_Respuesta, string Respuesta, decimal Usuario_ID) {
                tl_PreguntasRow rowtl_PreguntasRow = ((tl_PreguntasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Pregunta,
                        Fecha_Respuesta,
                        Respuesta,
                        Usuario_ID};
                if ((parenttl_PublicacionesRowByfk_Preguntas_Publicacion != null)) {
                    columnValuesArray[1] = parenttl_PublicacionesRowByfk_Preguntas_Publicacion[0];
                }
                rowtl_PreguntasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_PreguntasRow);
                return rowtl_PreguntasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PreguntasRow FindByID(decimal ID) {
                return ((tl_PreguntasRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_PreguntasDataTable cln = ((tl_PreguntasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_PreguntasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnPublicacion_Codigo = base.Columns["Publicacion_Codigo"];
                this.columnPregunta = base.Columns["Pregunta"];
                this.columnFecha_Respuesta = base.Columns["Fecha_Respuesta"];
                this.columnRespuesta = base.Columns["Respuesta"];
                this.columnUsuario_ID = base.Columns["Usuario_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnPublicacion_Codigo = new global::System.Data.DataColumn("Publicacion_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicacion_Codigo);
                this.columnPregunta = new global::System.Data.DataColumn("Pregunta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPregunta);
                this.columnFecha_Respuesta = new global::System.Data.DataColumn("Fecha_Respuesta", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha_Respuesta);
                this.columnRespuesta = new global::System.Data.DataColumn("Respuesta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRespuesta);
                this.columnUsuario_ID = new global::System.Data.DataColumn("Usuario_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsuario_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnPublicacion_Codigo.AllowDBNull = false;
                this.columnPregunta.AllowDBNull = false;
                this.columnPregunta.MaxLength = 255;
                this.columnRespuesta.MaxLength = 255;
                this.columnUsuario_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PreguntasRow Newtl_PreguntasRow() {
                return ((tl_PreguntasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_PreguntasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_PreguntasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_PreguntasRowChanged != null)) {
                    this.tl_PreguntasRowChanged(this, new tl_PreguntasRowChangeEvent(((tl_PreguntasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_PreguntasRowChanging != null)) {
                    this.tl_PreguntasRowChanging(this, new tl_PreguntasRowChangeEvent(((tl_PreguntasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_PreguntasRowDeleted != null)) {
                    this.tl_PreguntasRowDeleted(this, new tl_PreguntasRowChangeEvent(((tl_PreguntasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_PreguntasRowDeleting != null)) {
                    this.tl_PreguntasRowDeleting(this, new tl_PreguntasRowChangeEvent(((tl_PreguntasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_PreguntasRow(tl_PreguntasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_PreguntasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_PublicacionesDataTable : global::System.Data.TypedTableBase<tl_PublicacionesRow> {
            
            private global::System.Data.DataColumn columnCodigo;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnStock;
            
            private global::System.Data.DataColumn columnFecha_Vencimiento;
            
            private global::System.Data.DataColumn columnPrecio;
            
            private global::System.Data.DataColumn columnVisibilidad_Codigo;
            
            private global::System.Data.DataColumn columnPermite_Preguntas;
            
            private global::System.Data.DataColumn columnUsuario_ID;
            
            private global::System.Data.DataColumn columnTipo_ID;
            
            private global::System.Data.DataColumn columnEstado_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesDataTable() {
                this.TableName = "tl_Publicaciones";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_PublicacionesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_PublicacionesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockColumn {
                get {
                    return this.columnStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fecha_VencimientoColumn {
                get {
                    return this.columnFecha_Vencimiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioColumn {
                get {
                    return this.columnPrecio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Visibilidad_CodigoColumn {
                get {
                    return this.columnVisibilidad_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Permite_PreguntasColumn {
                get {
                    return this.columnPermite_Preguntas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Usuario_IDColumn {
                get {
                    return this.columnUsuario_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tipo_IDColumn {
                get {
                    return this.columnTipo_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Estado_IDColumn {
                get {
                    return this.columnEstado_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow this[int index] {
                get {
                    return ((tl_PublicacionesRow)(this.Rows[index]));
                }
            }
            
            public event tl_PublicacionesRowChangeEventHandler tl_PublicacionesRowChanging;
            
            public event tl_PublicacionesRowChangeEventHandler tl_PublicacionesRowChanged;
            
            public event tl_PublicacionesRowChangeEventHandler tl_PublicacionesRowDeleting;
            
            public event tl_PublicacionesRowChangeEventHandler tl_PublicacionesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_PublicacionesRow(tl_PublicacionesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow Addtl_PublicacionesRow(string Descripcion, System.DateTime Fecha, decimal Stock, System.DateTime Fecha_Vencimiento, decimal Precio, tl_VisibilidadesRow parenttl_VisibilidadesRowByfk_Publicaciones_Visibilidad, bool Permite_Preguntas, tl_UsuariosRow parenttl_UsuariosRowByfk_Publicaciones_Usuario, tl_Publicacion_TiposRow parenttl_Publicacion_TiposRowByfk_Publicaciones_Tipo, tl_Publicacion_EstadosRow parenttl_Publicacion_EstadosRowByfk_Publicaciones_Estado) {
                tl_PublicacionesRow rowtl_PublicacionesRow = ((tl_PublicacionesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Descripcion,
                        Fecha,
                        Stock,
                        Fecha_Vencimiento,
                        Precio,
                        null,
                        Permite_Preguntas,
                        null,
                        null,
                        null};
                if ((parenttl_VisibilidadesRowByfk_Publicaciones_Visibilidad != null)) {
                    columnValuesArray[6] = parenttl_VisibilidadesRowByfk_Publicaciones_Visibilidad[0];
                }
                if ((parenttl_UsuariosRowByfk_Publicaciones_Usuario != null)) {
                    columnValuesArray[8] = parenttl_UsuariosRowByfk_Publicaciones_Usuario[0];
                }
                if ((parenttl_Publicacion_TiposRowByfk_Publicaciones_Tipo != null)) {
                    columnValuesArray[9] = parenttl_Publicacion_TiposRowByfk_Publicaciones_Tipo[0];
                }
                if ((parenttl_Publicacion_EstadosRowByfk_Publicaciones_Estado != null)) {
                    columnValuesArray[10] = parenttl_Publicacion_EstadosRowByfk_Publicaciones_Estado[0];
                }
                rowtl_PublicacionesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_PublicacionesRow);
                return rowtl_PublicacionesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow FindByCodigo(decimal Codigo) {
                return ((tl_PublicacionesRow)(this.Rows.Find(new object[] {
                            Codigo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_PublicacionesDataTable cln = ((tl_PublicacionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_PublicacionesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCodigo = base.Columns["Codigo"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnStock = base.Columns["Stock"];
                this.columnFecha_Vencimiento = base.Columns["Fecha_Vencimiento"];
                this.columnPrecio = base.Columns["Precio"];
                this.columnVisibilidad_Codigo = base.Columns["Visibilidad_Codigo"];
                this.columnPermite_Preguntas = base.Columns["Permite_Preguntas"];
                this.columnUsuario_ID = base.Columns["Usuario_ID"];
                this.columnTipo_ID = base.Columns["Tipo_ID"];
                this.columnEstado_ID = base.Columns["Estado_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCodigo = new global::System.Data.DataColumn("Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnStock = new global::System.Data.DataColumn("Stock", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStock);
                this.columnFecha_Vencimiento = new global::System.Data.DataColumn("Fecha_Vencimiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha_Vencimiento);
                this.columnPrecio = new global::System.Data.DataColumn("Precio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecio);
                this.columnVisibilidad_Codigo = new global::System.Data.DataColumn("Visibilidad_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisibilidad_Codigo);
                this.columnPermite_Preguntas = new global::System.Data.DataColumn("Permite_Preguntas", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermite_Preguntas);
                this.columnUsuario_ID = new global::System.Data.DataColumn("Usuario_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsuario_ID);
                this.columnTipo_ID = new global::System.Data.DataColumn("Tipo_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo_ID);
                this.columnEstado_ID = new global::System.Data.DataColumn("Estado_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstado_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCodigo}, true));
                this.columnCodigo.AutoIncrement = true;
                this.columnCodigo.AutoIncrementSeed = -1;
                this.columnCodigo.AutoIncrementStep = -1;
                this.columnCodigo.AllowDBNull = false;
                this.columnCodigo.ReadOnly = true;
                this.columnCodigo.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 255;
                this.columnFecha.AllowDBNull = false;
                this.columnStock.AllowDBNull = false;
                this.columnFecha_Vencimiento.AllowDBNull = false;
                this.columnPrecio.AllowDBNull = false;
                this.columnVisibilidad_Codigo.AllowDBNull = false;
                this.columnPermite_Preguntas.AllowDBNull = false;
                this.columnUsuario_ID.AllowDBNull = false;
                this.columnTipo_ID.AllowDBNull = false;
                this.columnEstado_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow Newtl_PublicacionesRow() {
                return ((tl_PublicacionesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_PublicacionesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_PublicacionesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_PublicacionesRowChanged != null)) {
                    this.tl_PublicacionesRowChanged(this, new tl_PublicacionesRowChangeEvent(((tl_PublicacionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_PublicacionesRowChanging != null)) {
                    this.tl_PublicacionesRowChanging(this, new tl_PublicacionesRowChangeEvent(((tl_PublicacionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_PublicacionesRowDeleted != null)) {
                    this.tl_PublicacionesRowDeleted(this, new tl_PublicacionesRowChangeEvent(((tl_PublicacionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_PublicacionesRowDeleting != null)) {
                    this.tl_PublicacionesRowDeleting(this, new tl_PublicacionesRowChangeEvent(((tl_PublicacionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_PublicacionesRow(tl_PublicacionesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_PublicacionesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_Publicaciones_RubrosDataTable : global::System.Data.TypedTableBase<tl_Publicaciones_RubrosRow> {
            
            private global::System.Data.DataColumn columnPublicacion_Codigo;
            
            private global::System.Data.DataColumn columnRubro_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicaciones_RubrosDataTable() {
                this.TableName = "tl_Publicaciones_Rubros";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_Publicaciones_RubrosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_Publicaciones_RubrosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Publicacion_CodigoColumn {
                get {
                    return this.columnPublicacion_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rubro_IDColumn {
                get {
                    return this.columnRubro_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicaciones_RubrosRow this[int index] {
                get {
                    return ((tl_Publicaciones_RubrosRow)(this.Rows[index]));
                }
            }
            
            public event tl_Publicaciones_RubrosRowChangeEventHandler tl_Publicaciones_RubrosRowChanging;
            
            public event tl_Publicaciones_RubrosRowChangeEventHandler tl_Publicaciones_RubrosRowChanged;
            
            public event tl_Publicaciones_RubrosRowChangeEventHandler tl_Publicaciones_RubrosRowDeleting;
            
            public event tl_Publicaciones_RubrosRowChangeEventHandler tl_Publicaciones_RubrosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_Publicaciones_RubrosRow(tl_Publicaciones_RubrosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicaciones_RubrosRow Addtl_Publicaciones_RubrosRow(tl_PublicacionesRow parenttl_PublicacionesRowByfk_Publicaciones_Rubros_Publicacion, tl_RubrosRow parenttl_RubrosRowByfk_Publicaciones_Rubros_Rubro) {
                tl_Publicaciones_RubrosRow rowtl_Publicaciones_RubrosRow = ((tl_Publicaciones_RubrosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parenttl_PublicacionesRowByfk_Publicaciones_Rubros_Publicacion != null)) {
                    columnValuesArray[0] = parenttl_PublicacionesRowByfk_Publicaciones_Rubros_Publicacion[0];
                }
                if ((parenttl_RubrosRowByfk_Publicaciones_Rubros_Rubro != null)) {
                    columnValuesArray[1] = parenttl_RubrosRowByfk_Publicaciones_Rubros_Rubro[0];
                }
                rowtl_Publicaciones_RubrosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_Publicaciones_RubrosRow);
                return rowtl_Publicaciones_RubrosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicaciones_RubrosRow FindByPublicacion_CodigoRubro_ID(decimal Publicacion_Codigo, decimal Rubro_ID) {
                return ((tl_Publicaciones_RubrosRow)(this.Rows.Find(new object[] {
                            Publicacion_Codigo,
                            Rubro_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_Publicaciones_RubrosDataTable cln = ((tl_Publicaciones_RubrosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_Publicaciones_RubrosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPublicacion_Codigo = base.Columns["Publicacion_Codigo"];
                this.columnRubro_ID = base.Columns["Rubro_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPublicacion_Codigo = new global::System.Data.DataColumn("Publicacion_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicacion_Codigo);
                this.columnRubro_ID = new global::System.Data.DataColumn("Rubro_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRubro_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPublicacion_Codigo,
                                this.columnRubro_ID}, true));
                this.columnPublicacion_Codigo.AllowDBNull = false;
                this.columnRubro_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicaciones_RubrosRow Newtl_Publicaciones_RubrosRow() {
                return ((tl_Publicaciones_RubrosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_Publicaciones_RubrosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_Publicaciones_RubrosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_Publicaciones_RubrosRowChanged != null)) {
                    this.tl_Publicaciones_RubrosRowChanged(this, new tl_Publicaciones_RubrosRowChangeEvent(((tl_Publicaciones_RubrosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_Publicaciones_RubrosRowChanging != null)) {
                    this.tl_Publicaciones_RubrosRowChanging(this, new tl_Publicaciones_RubrosRowChangeEvent(((tl_Publicaciones_RubrosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_Publicaciones_RubrosRowDeleted != null)) {
                    this.tl_Publicaciones_RubrosRowDeleted(this, new tl_Publicaciones_RubrosRowChangeEvent(((tl_Publicaciones_RubrosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_Publicaciones_RubrosRowDeleting != null)) {
                    this.tl_Publicaciones_RubrosRowDeleting(this, new tl_Publicaciones_RubrosRowChangeEvent(((tl_Publicaciones_RubrosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_Publicaciones_RubrosRow(tl_Publicaciones_RubrosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_Publicaciones_RubrosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_RolesDataTable : global::System.Data.TypedTableBase<tl_RolesRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnHabilitado;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RolesDataTable() {
                this.TableName = "tl_Roles";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_RolesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_RolesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HabilitadoColumn {
                get {
                    return this.columnHabilitado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RolesRow this[int index] {
                get {
                    return ((tl_RolesRow)(this.Rows[index]));
                }
            }
            
            public event tl_RolesRowChangeEventHandler tl_RolesRowChanging;
            
            public event tl_RolesRowChangeEventHandler tl_RolesRowChanged;
            
            public event tl_RolesRowChangeEventHandler tl_RolesRowDeleting;
            
            public event tl_RolesRowChangeEventHandler tl_RolesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_RolesRow(tl_RolesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RolesRow Addtl_RolesRow(string Nombre, bool Habilitado) {
                tl_RolesRow rowtl_RolesRow = ((tl_RolesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Nombre,
                        Habilitado};
                rowtl_RolesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_RolesRow);
                return rowtl_RolesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RolesRow FindByID(decimal ID) {
                return ((tl_RolesRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_RolesDataTable cln = ((tl_RolesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_RolesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnHabilitado = base.Columns["Habilitado"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnHabilitado = new global::System.Data.DataColumn("Habilitado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHabilitado);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnNombre.AllowDBNull = false;
                this.columnNombre.MaxLength = 50;
                this.columnHabilitado.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RolesRow Newtl_RolesRow() {
                return ((tl_RolesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_RolesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_RolesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_RolesRowChanged != null)) {
                    this.tl_RolesRowChanged(this, new tl_RolesRowChangeEvent(((tl_RolesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_RolesRowChanging != null)) {
                    this.tl_RolesRowChanging(this, new tl_RolesRowChangeEvent(((tl_RolesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_RolesRowDeleted != null)) {
                    this.tl_RolesRowDeleted(this, new tl_RolesRowChangeEvent(((tl_RolesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_RolesRowDeleting != null)) {
                    this.tl_RolesRowDeleting(this, new tl_RolesRowChangeEvent(((tl_RolesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_RolesRow(tl_RolesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_RolesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_Roles_FuncionalidadesDataTable : global::System.Data.TypedTableBase<tl_Roles_FuncionalidadesRow> {
            
            private global::System.Data.DataColumn columnRol_ID;
            
            private global::System.Data.DataColumn columnFuncionalidad_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Roles_FuncionalidadesDataTable() {
                this.TableName = "tl_Roles_Funcionalidades";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_Roles_FuncionalidadesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_Roles_FuncionalidadesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rol_IDColumn {
                get {
                    return this.columnRol_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funcionalidad_IDColumn {
                get {
                    return this.columnFuncionalidad_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Roles_FuncionalidadesRow this[int index] {
                get {
                    return ((tl_Roles_FuncionalidadesRow)(this.Rows[index]));
                }
            }
            
            public event tl_Roles_FuncionalidadesRowChangeEventHandler tl_Roles_FuncionalidadesRowChanging;
            
            public event tl_Roles_FuncionalidadesRowChangeEventHandler tl_Roles_FuncionalidadesRowChanged;
            
            public event tl_Roles_FuncionalidadesRowChangeEventHandler tl_Roles_FuncionalidadesRowDeleting;
            
            public event tl_Roles_FuncionalidadesRowChangeEventHandler tl_Roles_FuncionalidadesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_Roles_FuncionalidadesRow(tl_Roles_FuncionalidadesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Roles_FuncionalidadesRow Addtl_Roles_FuncionalidadesRow(tl_RolesRow parenttl_RolesRowByfk_Roles_Funcionalidades_Rol, tl_FuncionalidadesRow parenttl_FuncionalidadesRowByfk_Roles_Funcionalidades_Funcionalidad) {
                tl_Roles_FuncionalidadesRow rowtl_Roles_FuncionalidadesRow = ((tl_Roles_FuncionalidadesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parenttl_RolesRowByfk_Roles_Funcionalidades_Rol != null)) {
                    columnValuesArray[0] = parenttl_RolesRowByfk_Roles_Funcionalidades_Rol[0];
                }
                if ((parenttl_FuncionalidadesRowByfk_Roles_Funcionalidades_Funcionalidad != null)) {
                    columnValuesArray[1] = parenttl_FuncionalidadesRowByfk_Roles_Funcionalidades_Funcionalidad[0];
                }
                rowtl_Roles_FuncionalidadesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_Roles_FuncionalidadesRow);
                return rowtl_Roles_FuncionalidadesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Roles_FuncionalidadesRow FindByRol_IDFuncionalidad_ID(decimal Rol_ID, decimal Funcionalidad_ID) {
                return ((tl_Roles_FuncionalidadesRow)(this.Rows.Find(new object[] {
                            Rol_ID,
                            Funcionalidad_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_Roles_FuncionalidadesDataTable cln = ((tl_Roles_FuncionalidadesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_Roles_FuncionalidadesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRol_ID = base.Columns["Rol_ID"];
                this.columnFuncionalidad_ID = base.Columns["Funcionalidad_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRol_ID = new global::System.Data.DataColumn("Rol_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRol_ID);
                this.columnFuncionalidad_ID = new global::System.Data.DataColumn("Funcionalidad_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuncionalidad_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRol_ID,
                                this.columnFuncionalidad_ID}, true));
                this.columnRol_ID.AllowDBNull = false;
                this.columnFuncionalidad_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Roles_FuncionalidadesRow Newtl_Roles_FuncionalidadesRow() {
                return ((tl_Roles_FuncionalidadesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_Roles_FuncionalidadesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_Roles_FuncionalidadesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_Roles_FuncionalidadesRowChanged != null)) {
                    this.tl_Roles_FuncionalidadesRowChanged(this, new tl_Roles_FuncionalidadesRowChangeEvent(((tl_Roles_FuncionalidadesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_Roles_FuncionalidadesRowChanging != null)) {
                    this.tl_Roles_FuncionalidadesRowChanging(this, new tl_Roles_FuncionalidadesRowChangeEvent(((tl_Roles_FuncionalidadesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_Roles_FuncionalidadesRowDeleted != null)) {
                    this.tl_Roles_FuncionalidadesRowDeleted(this, new tl_Roles_FuncionalidadesRowChangeEvent(((tl_Roles_FuncionalidadesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_Roles_FuncionalidadesRowDeleting != null)) {
                    this.tl_Roles_FuncionalidadesRowDeleting(this, new tl_Roles_FuncionalidadesRowChangeEvent(((tl_Roles_FuncionalidadesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_Roles_FuncionalidadesRow(tl_Roles_FuncionalidadesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_Roles_FuncionalidadesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_RubrosDataTable : global::System.Data.TypedTableBase<tl_RubrosRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnHabilitado;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RubrosDataTable() {
                this.TableName = "tl_Rubros";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_RubrosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_RubrosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HabilitadoColumn {
                get {
                    return this.columnHabilitado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RubrosRow this[int index] {
                get {
                    return ((tl_RubrosRow)(this.Rows[index]));
                }
            }
            
            public event tl_RubrosRowChangeEventHandler tl_RubrosRowChanging;
            
            public event tl_RubrosRowChangeEventHandler tl_RubrosRowChanged;
            
            public event tl_RubrosRowChangeEventHandler tl_RubrosRowDeleting;
            
            public event tl_RubrosRowChangeEventHandler tl_RubrosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_RubrosRow(tl_RubrosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RubrosRow Addtl_RubrosRow(string Descripcion, bool Habilitado) {
                tl_RubrosRow rowtl_RubrosRow = ((tl_RubrosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Descripcion,
                        Habilitado};
                rowtl_RubrosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_RubrosRow);
                return rowtl_RubrosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RubrosRow FindByID(decimal ID) {
                return ((tl_RubrosRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_RubrosDataTable cln = ((tl_RubrosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_RubrosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnHabilitado = base.Columns["Habilitado"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnHabilitado = new global::System.Data.DataColumn("Habilitado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHabilitado);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 50;
                this.columnHabilitado.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RubrosRow Newtl_RubrosRow() {
                return ((tl_RubrosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_RubrosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_RubrosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_RubrosRowChanged != null)) {
                    this.tl_RubrosRowChanged(this, new tl_RubrosRowChangeEvent(((tl_RubrosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_RubrosRowChanging != null)) {
                    this.tl_RubrosRowChanging(this, new tl_RubrosRowChangeEvent(((tl_RubrosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_RubrosRowDeleted != null)) {
                    this.tl_RubrosRowDeleted(this, new tl_RubrosRowChangeEvent(((tl_RubrosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_RubrosRowDeleting != null)) {
                    this.tl_RubrosRowDeleting(this, new tl_RubrosRowChangeEvent(((tl_RubrosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_RubrosRow(tl_RubrosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_RubrosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_UsuariosDataTable : global::System.Data.TypedTableBase<tl_UsuariosRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnUsername;
            
            private global::System.Data.DataColumn columnPassword;
            
            private global::System.Data.DataColumn columnLogins_Fallidos;
            
            private global::System.Data.DataColumn columnHabilitado;
            
            private global::System.Data.DataColumn columnActivo;
            
            private global::System.Data.DataColumn columnChange_Password;
            
            private global::System.Data.DataColumn columnCalificaciones_Pendientes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_UsuariosDataTable() {
                this.TableName = "tl_Usuarios";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_UsuariosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_UsuariosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsernameColumn {
                get {
                    return this.columnUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PasswordColumn {
                get {
                    return this.columnPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Logins_FallidosColumn {
                get {
                    return this.columnLogins_Fallidos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HabilitadoColumn {
                get {
                    return this.columnHabilitado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Change_PasswordColumn {
                get {
                    return this.columnChange_Password;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Calificaciones_PendientesColumn {
                get {
                    return this.columnCalificaciones_Pendientes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_UsuariosRow this[int index] {
                get {
                    return ((tl_UsuariosRow)(this.Rows[index]));
                }
            }
            
            public event tl_UsuariosRowChangeEventHandler tl_UsuariosRowChanging;
            
            public event tl_UsuariosRowChangeEventHandler tl_UsuariosRowChanged;
            
            public event tl_UsuariosRowChangeEventHandler tl_UsuariosRowDeleting;
            
            public event tl_UsuariosRowChangeEventHandler tl_UsuariosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_UsuariosRow(tl_UsuariosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_UsuariosRow Addtl_UsuariosRow(string Username, string Password, byte Logins_Fallidos, bool Habilitado, bool Activo, bool Change_Password, int Calificaciones_Pendientes) {
                tl_UsuariosRow rowtl_UsuariosRow = ((tl_UsuariosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Username,
                        Password,
                        Logins_Fallidos,
                        Habilitado,
                        Activo,
                        Change_Password,
                        Calificaciones_Pendientes};
                rowtl_UsuariosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_UsuariosRow);
                return rowtl_UsuariosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_UsuariosRow FindByID(decimal ID) {
                return ((tl_UsuariosRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_UsuariosDataTable cln = ((tl_UsuariosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_UsuariosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnUsername = base.Columns["Username"];
                this.columnPassword = base.Columns["Password"];
                this.columnLogins_Fallidos = base.Columns["Logins_Fallidos"];
                this.columnHabilitado = base.Columns["Habilitado"];
                this.columnActivo = base.Columns["Activo"];
                this.columnChange_Password = base.Columns["Change_Password"];
                this.columnCalificaciones_Pendientes = base.Columns["Calificaciones_Pendientes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnUsername = new global::System.Data.DataColumn("Username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsername);
                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnLogins_Fallidos = new global::System.Data.DataColumn("Logins_Fallidos", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogins_Fallidos);
                this.columnHabilitado = new global::System.Data.DataColumn("Habilitado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHabilitado);
                this.columnActivo = new global::System.Data.DataColumn("Activo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivo);
                this.columnChange_Password = new global::System.Data.DataColumn("Change_Password", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChange_Password);
                this.columnCalificaciones_Pendientes = new global::System.Data.DataColumn("Calificaciones_Pendientes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalificaciones_Pendientes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnUsername.AllowDBNull = false;
                this.columnUsername.MaxLength = 50;
                this.columnPassword.AllowDBNull = false;
                this.columnPassword.MaxLength = 255;
                this.columnLogins_Fallidos.AllowDBNull = false;
                this.columnHabilitado.AllowDBNull = false;
                this.columnActivo.AllowDBNull = false;
                this.columnChange_Password.AllowDBNull = false;
                this.columnCalificaciones_Pendientes.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_UsuariosRow Newtl_UsuariosRow() {
                return ((tl_UsuariosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_UsuariosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_UsuariosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_UsuariosRowChanged != null)) {
                    this.tl_UsuariosRowChanged(this, new tl_UsuariosRowChangeEvent(((tl_UsuariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_UsuariosRowChanging != null)) {
                    this.tl_UsuariosRowChanging(this, new tl_UsuariosRowChangeEvent(((tl_UsuariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_UsuariosRowDeleted != null)) {
                    this.tl_UsuariosRowDeleted(this, new tl_UsuariosRowChangeEvent(((tl_UsuariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_UsuariosRowDeleting != null)) {
                    this.tl_UsuariosRowDeleting(this, new tl_UsuariosRowChangeEvent(((tl_UsuariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_UsuariosRow(tl_UsuariosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_UsuariosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_Usuarios_RolesDataTable : global::System.Data.TypedTableBase<tl_Usuarios_RolesRow> {
            
            private global::System.Data.DataColumn columnUsuario_ID;
            
            private global::System.Data.DataColumn columnRol_ID;
            
            private global::System.Data.DataColumn columnHabilitado;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Usuarios_RolesDataTable() {
                this.TableName = "tl_Usuarios_Roles";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_Usuarios_RolesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_Usuarios_RolesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Usuario_IDColumn {
                get {
                    return this.columnUsuario_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rol_IDColumn {
                get {
                    return this.columnRol_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HabilitadoColumn {
                get {
                    return this.columnHabilitado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Usuarios_RolesRow this[int index] {
                get {
                    return ((tl_Usuarios_RolesRow)(this.Rows[index]));
                }
            }
            
            public event tl_Usuarios_RolesRowChangeEventHandler tl_Usuarios_RolesRowChanging;
            
            public event tl_Usuarios_RolesRowChangeEventHandler tl_Usuarios_RolesRowChanged;
            
            public event tl_Usuarios_RolesRowChangeEventHandler tl_Usuarios_RolesRowDeleting;
            
            public event tl_Usuarios_RolesRowChangeEventHandler tl_Usuarios_RolesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_Usuarios_RolesRow(tl_Usuarios_RolesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Usuarios_RolesRow Addtl_Usuarios_RolesRow(tl_UsuariosRow parenttl_UsuariosRowByfk_Usuarios_Roles_Usuario, tl_RolesRow parenttl_RolesRowByfk_Usuarios_Roles_Rol, bool Habilitado) {
                tl_Usuarios_RolesRow rowtl_Usuarios_RolesRow = ((tl_Usuarios_RolesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Habilitado};
                if ((parenttl_UsuariosRowByfk_Usuarios_Roles_Usuario != null)) {
                    columnValuesArray[0] = parenttl_UsuariosRowByfk_Usuarios_Roles_Usuario[0];
                }
                if ((parenttl_RolesRowByfk_Usuarios_Roles_Rol != null)) {
                    columnValuesArray[1] = parenttl_RolesRowByfk_Usuarios_Roles_Rol[0];
                }
                rowtl_Usuarios_RolesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_Usuarios_RolesRow);
                return rowtl_Usuarios_RolesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Usuarios_RolesRow FindByUsuario_IDRol_ID(decimal Usuario_ID, decimal Rol_ID) {
                return ((tl_Usuarios_RolesRow)(this.Rows.Find(new object[] {
                            Usuario_ID,
                            Rol_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_Usuarios_RolesDataTable cln = ((tl_Usuarios_RolesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_Usuarios_RolesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUsuario_ID = base.Columns["Usuario_ID"];
                this.columnRol_ID = base.Columns["Rol_ID"];
                this.columnHabilitado = base.Columns["Habilitado"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUsuario_ID = new global::System.Data.DataColumn("Usuario_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsuario_ID);
                this.columnRol_ID = new global::System.Data.DataColumn("Rol_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRol_ID);
                this.columnHabilitado = new global::System.Data.DataColumn("Habilitado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHabilitado);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUsuario_ID,
                                this.columnRol_ID}, true));
                this.columnUsuario_ID.AllowDBNull = false;
                this.columnRol_ID.AllowDBNull = false;
                this.columnHabilitado.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Usuarios_RolesRow Newtl_Usuarios_RolesRow() {
                return ((tl_Usuarios_RolesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_Usuarios_RolesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_Usuarios_RolesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_Usuarios_RolesRowChanged != null)) {
                    this.tl_Usuarios_RolesRowChanged(this, new tl_Usuarios_RolesRowChangeEvent(((tl_Usuarios_RolesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_Usuarios_RolesRowChanging != null)) {
                    this.tl_Usuarios_RolesRowChanging(this, new tl_Usuarios_RolesRowChangeEvent(((tl_Usuarios_RolesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_Usuarios_RolesRowDeleted != null)) {
                    this.tl_Usuarios_RolesRowDeleted(this, new tl_Usuarios_RolesRowChangeEvent(((tl_Usuarios_RolesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_Usuarios_RolesRowDeleting != null)) {
                    this.tl_Usuarios_RolesRowDeleting(this, new tl_Usuarios_RolesRowChangeEvent(((tl_Usuarios_RolesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_Usuarios_RolesRow(tl_Usuarios_RolesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_Usuarios_RolesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_VisibilidadesDataTable : global::System.Data.TypedTableBase<tl_VisibilidadesRow> {
            
            private global::System.Data.DataColumn columnCodigo;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnPrecio;
            
            private global::System.Data.DataColumn columnPorcentaje;
            
            private global::System.Data.DataColumn columnDuracion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_VisibilidadesDataTable() {
                this.TableName = "tl_Visibilidades";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_VisibilidadesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_VisibilidadesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioColumn {
                get {
                    return this.columnPrecio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PorcentajeColumn {
                get {
                    return this.columnPorcentaje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DuracionColumn {
                get {
                    return this.columnDuracion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_VisibilidadesRow this[int index] {
                get {
                    return ((tl_VisibilidadesRow)(this.Rows[index]));
                }
            }
            
            public event tl_VisibilidadesRowChangeEventHandler tl_VisibilidadesRowChanging;
            
            public event tl_VisibilidadesRowChangeEventHandler tl_VisibilidadesRowChanged;
            
            public event tl_VisibilidadesRowChangeEventHandler tl_VisibilidadesRowDeleting;
            
            public event tl_VisibilidadesRowChangeEventHandler tl_VisibilidadesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_VisibilidadesRow(tl_VisibilidadesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_VisibilidadesRow Addtl_VisibilidadesRow(string Descripcion, decimal Precio, decimal Porcentaje, int Duracion) {
                tl_VisibilidadesRow rowtl_VisibilidadesRow = ((tl_VisibilidadesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Descripcion,
                        Precio,
                        Porcentaje,
                        Duracion};
                rowtl_VisibilidadesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_VisibilidadesRow);
                return rowtl_VisibilidadesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_VisibilidadesRow FindByCodigo(decimal Codigo) {
                return ((tl_VisibilidadesRow)(this.Rows.Find(new object[] {
                            Codigo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_VisibilidadesDataTable cln = ((tl_VisibilidadesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_VisibilidadesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCodigo = base.Columns["Codigo"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnPrecio = base.Columns["Precio"];
                this.columnPorcentaje = base.Columns["Porcentaje"];
                this.columnDuracion = base.Columns["Duracion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCodigo = new global::System.Data.DataColumn("Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnPrecio = new global::System.Data.DataColumn("Precio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecio);
                this.columnPorcentaje = new global::System.Data.DataColumn("Porcentaje", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorcentaje);
                this.columnDuracion = new global::System.Data.DataColumn("Duracion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuracion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCodigo}, true));
                this.columnCodigo.AutoIncrement = true;
                this.columnCodigo.AutoIncrementSeed = -1;
                this.columnCodigo.AutoIncrementStep = -1;
                this.columnCodigo.AllowDBNull = false;
                this.columnCodigo.ReadOnly = true;
                this.columnCodigo.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 255;
                this.columnPrecio.AllowDBNull = false;
                this.columnPorcentaje.AllowDBNull = false;
                this.columnDuracion.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_VisibilidadesRow Newtl_VisibilidadesRow() {
                return ((tl_VisibilidadesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_VisibilidadesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_VisibilidadesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_VisibilidadesRowChanged != null)) {
                    this.tl_VisibilidadesRowChanged(this, new tl_VisibilidadesRowChangeEvent(((tl_VisibilidadesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_VisibilidadesRowChanging != null)) {
                    this.tl_VisibilidadesRowChanging(this, new tl_VisibilidadesRowChangeEvent(((tl_VisibilidadesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_VisibilidadesRowDeleted != null)) {
                    this.tl_VisibilidadesRowDeleted(this, new tl_VisibilidadesRowChangeEvent(((tl_VisibilidadesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_VisibilidadesRowDeleting != null)) {
                    this.tl_VisibilidadesRowDeleting(this, new tl_VisibilidadesRowChangeEvent(((tl_VisibilidadesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_VisibilidadesRow(tl_VisibilidadesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_VisibilidadesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sp_VendedoresConMasStockDataTable : global::System.Data.TypedTableBase<sp_VendedoresConMasStockRow> {
            
            private global::System.Data.DataColumn columnCodigo_de_usuario;
            
            private global::System.Data.DataColumn columnProductos_sin_vender;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_VendedoresConMasStockDataTable() {
                this.TableName = "sp_VendedoresConMasStock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sp_VendedoresConMasStockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sp_VendedoresConMasStockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Codigo_de_usuarioColumn {
                get {
                    return this.columnCodigo_de_usuario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Productos_sin_venderColumn {
                get {
                    return this.columnProductos_sin_vender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_VendedoresConMasStockRow this[int index] {
                get {
                    return ((sp_VendedoresConMasStockRow)(this.Rows[index]));
                }
            }
            
            public event sp_VendedoresConMasStockRowChangeEventHandler sp_VendedoresConMasStockRowChanging;
            
            public event sp_VendedoresConMasStockRowChangeEventHandler sp_VendedoresConMasStockRowChanged;
            
            public event sp_VendedoresConMasStockRowChangeEventHandler sp_VendedoresConMasStockRowDeleting;
            
            public event sp_VendedoresConMasStockRowChangeEventHandler sp_VendedoresConMasStockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsp_VendedoresConMasStockRow(sp_VendedoresConMasStockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_VendedoresConMasStockRow Addsp_VendedoresConMasStockRow(decimal Codigo_de_usuario, decimal Productos_sin_vender) {
                sp_VendedoresConMasStockRow rowsp_VendedoresConMasStockRow = ((sp_VendedoresConMasStockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Codigo_de_usuario,
                        Productos_sin_vender};
                rowsp_VendedoresConMasStockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsp_VendedoresConMasStockRow);
                return rowsp_VendedoresConMasStockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sp_VendedoresConMasStockDataTable cln = ((sp_VendedoresConMasStockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sp_VendedoresConMasStockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCodigo_de_usuario = base.Columns["Codigo de usuario"];
                this.columnProductos_sin_vender = base.Columns["Productos sin vender"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCodigo_de_usuario = new global::System.Data.DataColumn("Codigo de usuario", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo_de_usuario);
                this.columnProductos_sin_vender = new global::System.Data.DataColumn("Productos sin vender", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductos_sin_vender);
                this.columnCodigo_de_usuario.AllowDBNull = false;
                this.columnCodigo_de_usuario.ReadOnly = true;
                this.columnProductos_sin_vender.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_VendedoresConMasStockRow Newsp_VendedoresConMasStockRow() {
                return ((sp_VendedoresConMasStockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sp_VendedoresConMasStockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sp_VendedoresConMasStockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sp_VendedoresConMasStockRowChanged != null)) {
                    this.sp_VendedoresConMasStockRowChanged(this, new sp_VendedoresConMasStockRowChangeEvent(((sp_VendedoresConMasStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sp_VendedoresConMasStockRowChanging != null)) {
                    this.sp_VendedoresConMasStockRowChanging(this, new sp_VendedoresConMasStockRowChangeEvent(((sp_VendedoresConMasStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sp_VendedoresConMasStockRowDeleted != null)) {
                    this.sp_VendedoresConMasStockRowDeleted(this, new sp_VendedoresConMasStockRowChangeEvent(((sp_VendedoresConMasStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sp_VendedoresConMasStockRowDeleting != null)) {
                    this.sp_VendedoresConMasStockRowDeleting(this, new sp_VendedoresConMasStockRowChangeEvent(((sp_VendedoresConMasStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesp_VendedoresConMasStockRow(sp_VendedoresConMasStockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sp_VendedoresConMasStockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class clientesMasPublicacionesSinCalificarDataTable : global::System.Data.TypedTableBase<clientesMasPublicacionesSinCalificarRow> {
            
            private global::System.Data.DataColumn columnUsername;
            
            private global::System.Data.DataColumn columnUsuario_ID;
            
            private global::System.Data.DataColumn columnSin_Calificar;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public clientesMasPublicacionesSinCalificarDataTable() {
                this.TableName = "clientesMasPublicacionesSinCalificar";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal clientesMasPublicacionesSinCalificarDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected clientesMasPublicacionesSinCalificarDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsernameColumn {
                get {
                    return this.columnUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Usuario_IDColumn {
                get {
                    return this.columnUsuario_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sin_CalificarColumn {
                get {
                    return this.columnSin_Calificar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public clientesMasPublicacionesSinCalificarRow this[int index] {
                get {
                    return ((clientesMasPublicacionesSinCalificarRow)(this.Rows[index]));
                }
            }
            
            public event clientesMasPublicacionesSinCalificarRowChangeEventHandler clientesMasPublicacionesSinCalificarRowChanging;
            
            public event clientesMasPublicacionesSinCalificarRowChangeEventHandler clientesMasPublicacionesSinCalificarRowChanged;
            
            public event clientesMasPublicacionesSinCalificarRowChangeEventHandler clientesMasPublicacionesSinCalificarRowDeleting;
            
            public event clientesMasPublicacionesSinCalificarRowChangeEventHandler clientesMasPublicacionesSinCalificarRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddclientesMasPublicacionesSinCalificarRow(clientesMasPublicacionesSinCalificarRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public clientesMasPublicacionesSinCalificarRow AddclientesMasPublicacionesSinCalificarRow(string Username, decimal Usuario_ID, int Sin_Calificar) {
                clientesMasPublicacionesSinCalificarRow rowclientesMasPublicacionesSinCalificarRow = ((clientesMasPublicacionesSinCalificarRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Username,
                        Usuario_ID,
                        Sin_Calificar};
                rowclientesMasPublicacionesSinCalificarRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowclientesMasPublicacionesSinCalificarRow);
                return rowclientesMasPublicacionesSinCalificarRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                clientesMasPublicacionesSinCalificarDataTable cln = ((clientesMasPublicacionesSinCalificarDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new clientesMasPublicacionesSinCalificarDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUsername = base.Columns["Username"];
                this.columnUsuario_ID = base.Columns["Usuario_ID"];
                this.columnSin_Calificar = base.Columns["Sin Calificar"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUsername = new global::System.Data.DataColumn("Username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsername);
                this.columnUsuario_ID = new global::System.Data.DataColumn("Usuario_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsuario_ID);
                this.columnSin_Calificar = new global::System.Data.DataColumn("Sin Calificar", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSin_Calificar);
                this.columnUsername.AllowDBNull = false;
                this.columnUsername.MaxLength = 50;
                this.columnUsuario_ID.AllowDBNull = false;
                this.columnSin_Calificar.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public clientesMasPublicacionesSinCalificarRow NewclientesMasPublicacionesSinCalificarRow() {
                return ((clientesMasPublicacionesSinCalificarRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new clientesMasPublicacionesSinCalificarRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(clientesMasPublicacionesSinCalificarRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.clientesMasPublicacionesSinCalificarRowChanged != null)) {
                    this.clientesMasPublicacionesSinCalificarRowChanged(this, new clientesMasPublicacionesSinCalificarRowChangeEvent(((clientesMasPublicacionesSinCalificarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.clientesMasPublicacionesSinCalificarRowChanging != null)) {
                    this.clientesMasPublicacionesSinCalificarRowChanging(this, new clientesMasPublicacionesSinCalificarRowChangeEvent(((clientesMasPublicacionesSinCalificarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.clientesMasPublicacionesSinCalificarRowDeleted != null)) {
                    this.clientesMasPublicacionesSinCalificarRowDeleted(this, new clientesMasPublicacionesSinCalificarRowChangeEvent(((clientesMasPublicacionesSinCalificarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.clientesMasPublicacionesSinCalificarRowDeleting != null)) {
                    this.clientesMasPublicacionesSinCalificarRowDeleting(this, new clientesMasPublicacionesSinCalificarRowChangeEvent(((clientesMasPublicacionesSinCalificarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveclientesMasPublicacionesSinCalificarRow(clientesMasPublicacionesSinCalificarRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "clientesMasPublicacionesSinCalificarDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vendedoresMayorReputacionDataTable : global::System.Data.TypedTableBase<vendedoresMayorReputacionRow> {
            
            private global::System.Data.DataColumn columnUsername;
            
            private global::System.Data.DataColumn columnReputacion;
            
            private global::System.Data.DataColumn columnUsuario_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorReputacionDataTable() {
                this.TableName = "vendedoresMayorReputacion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendedoresMayorReputacionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vendedoresMayorReputacionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsernameColumn {
                get {
                    return this.columnUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReputacionColumn {
                get {
                    return this.columnReputacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Usuario_IDColumn {
                get {
                    return this.columnUsuario_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorReputacionRow this[int index] {
                get {
                    return ((vendedoresMayorReputacionRow)(this.Rows[index]));
                }
            }
            
            public event vendedoresMayorReputacionRowChangeEventHandler vendedoresMayorReputacionRowChanging;
            
            public event vendedoresMayorReputacionRowChangeEventHandler vendedoresMayorReputacionRowChanged;
            
            public event vendedoresMayorReputacionRowChangeEventHandler vendedoresMayorReputacionRowDeleting;
            
            public event vendedoresMayorReputacionRowChangeEventHandler vendedoresMayorReputacionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvendedoresMayorReputacionRow(vendedoresMayorReputacionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorReputacionRow AddvendedoresMayorReputacionRow(string Username, decimal Reputacion, decimal Usuario_ID) {
                vendedoresMayorReputacionRow rowvendedoresMayorReputacionRow = ((vendedoresMayorReputacionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Username,
                        Reputacion,
                        Usuario_ID};
                rowvendedoresMayorReputacionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvendedoresMayorReputacionRow);
                return rowvendedoresMayorReputacionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                vendedoresMayorReputacionDataTable cln = ((vendedoresMayorReputacionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new vendedoresMayorReputacionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUsername = base.Columns["Username"];
                this.columnReputacion = base.Columns["Reputacion"];
                this.columnUsuario_ID = base.Columns["Usuario_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUsername = new global::System.Data.DataColumn("Username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsername);
                this.columnReputacion = new global::System.Data.DataColumn("Reputacion", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReputacion);
                this.columnUsuario_ID = new global::System.Data.DataColumn("Usuario_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsuario_ID);
                this.columnUsername.AllowDBNull = false;
                this.columnUsername.MaxLength = 50;
                this.columnReputacion.ReadOnly = true;
                this.columnUsuario_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorReputacionRow NewvendedoresMayorReputacionRow() {
                return ((vendedoresMayorReputacionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new vendedoresMayorReputacionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(vendedoresMayorReputacionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vendedoresMayorReputacionRowChanged != null)) {
                    this.vendedoresMayorReputacionRowChanged(this, new vendedoresMayorReputacionRowChangeEvent(((vendedoresMayorReputacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vendedoresMayorReputacionRowChanging != null)) {
                    this.vendedoresMayorReputacionRowChanging(this, new vendedoresMayorReputacionRowChangeEvent(((vendedoresMayorReputacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vendedoresMayorReputacionRowDeleted != null)) {
                    this.vendedoresMayorReputacionRowDeleted(this, new vendedoresMayorReputacionRowChangeEvent(((vendedoresMayorReputacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vendedoresMayorReputacionRowDeleting != null)) {
                    this.vendedoresMayorReputacionRowDeleting(this, new vendedoresMayorReputacionRowChangeEvent(((vendedoresMayorReputacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevendedoresMayorReputacionRow(vendedoresMayorReputacionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vendedoresMayorReputacionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vendedoresMayorFacturacionDataTable : global::System.Data.TypedTableBase<vendedoresMayorFacturacionRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnUsername;
            
            private global::System.Data.DataColumn columnMontoTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorFacturacionDataTable() {
                this.TableName = "vendedoresMayorFacturacion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendedoresMayorFacturacionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vendedoresMayorFacturacionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsernameColumn {
                get {
                    return this.columnUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MontoTotalColumn {
                get {
                    return this.columnMontoTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorFacturacionRow this[int index] {
                get {
                    return ((vendedoresMayorFacturacionRow)(this.Rows[index]));
                }
            }
            
            public event vendedoresMayorFacturacionRowChangeEventHandler vendedoresMayorFacturacionRowChanging;
            
            public event vendedoresMayorFacturacionRowChangeEventHandler vendedoresMayorFacturacionRowChanged;
            
            public event vendedoresMayorFacturacionRowChangeEventHandler vendedoresMayorFacturacionRowDeleting;
            
            public event vendedoresMayorFacturacionRowChangeEventHandler vendedoresMayorFacturacionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvendedoresMayorFacturacionRow(vendedoresMayorFacturacionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorFacturacionRow AddvendedoresMayorFacturacionRow(string Username, decimal MontoTotal) {
                vendedoresMayorFacturacionRow rowvendedoresMayorFacturacionRow = ((vendedoresMayorFacturacionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Username,
                        MontoTotal};
                rowvendedoresMayorFacturacionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvendedoresMayorFacturacionRow);
                return rowvendedoresMayorFacturacionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorFacturacionRow FindByID(decimal ID) {
                return ((vendedoresMayorFacturacionRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                vendedoresMayorFacturacionDataTable cln = ((vendedoresMayorFacturacionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new vendedoresMayorFacturacionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnUsername = base.Columns["Username"];
                this.columnMontoTotal = base.Columns["MontoTotal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnUsername = new global::System.Data.DataColumn("Username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsername);
                this.columnMontoTotal = new global::System.Data.DataColumn("MontoTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMontoTotal);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnUsername.AllowDBNull = false;
                this.columnUsername.MaxLength = 50;
                this.columnMontoTotal.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorFacturacionRow NewvendedoresMayorFacturacionRow() {
                return ((vendedoresMayorFacturacionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new vendedoresMayorFacturacionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(vendedoresMayorFacturacionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vendedoresMayorFacturacionRowChanged != null)) {
                    this.vendedoresMayorFacturacionRowChanged(this, new vendedoresMayorFacturacionRowChangeEvent(((vendedoresMayorFacturacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vendedoresMayorFacturacionRowChanging != null)) {
                    this.vendedoresMayorFacturacionRowChanging(this, new vendedoresMayorFacturacionRowChangeEvent(((vendedoresMayorFacturacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vendedoresMayorFacturacionRowDeleted != null)) {
                    this.vendedoresMayorFacturacionRowDeleted(this, new vendedoresMayorFacturacionRowChangeEvent(((vendedoresMayorFacturacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vendedoresMayorFacturacionRowDeleting != null)) {
                    this.vendedoresMayorFacturacionRowDeleting(this, new vendedoresMayorFacturacionRowChangeEvent(((vendedoresMayorFacturacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevendedoresMayorFacturacionRow(vendedoresMayorFacturacionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vendedoresMayorFacturacionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_ClientesyEmpresasDataTable : global::System.Data.TypedTableBase<tl_ClientesyEmpresasRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnApellido;
            
            private global::System.Data.DataColumn columnMail;
            
            private global::System.Data.DataColumn columnDom_Calle;
            
            private global::System.Data.DataColumn columnNro_Calle;
            
            private global::System.Data.DataColumn columnPiso;
            
            private global::System.Data.DataColumn columnDepto;
            
            private global::System.Data.DataColumn columnCod_Postal;
            
            private global::System.Data.DataColumn columnTelefono;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesyEmpresasDataTable() {
                this.TableName = "tl_ClientesyEmpresas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_ClientesyEmpresasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_ClientesyEmpresasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApellidoColumn {
                get {
                    return this.columnApellido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailColumn {
                get {
                    return this.columnMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dom_CalleColumn {
                get {
                    return this.columnDom_Calle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nro_CalleColumn {
                get {
                    return this.columnNro_Calle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PisoColumn {
                get {
                    return this.columnPiso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptoColumn {
                get {
                    return this.columnDepto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_PostalColumn {
                get {
                    return this.columnCod_Postal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelefonoColumn {
                get {
                    return this.columnTelefono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesyEmpresasRow this[int index] {
                get {
                    return ((tl_ClientesyEmpresasRow)(this.Rows[index]));
                }
            }
            
            public event tl_ClientesyEmpresasRowChangeEventHandler tl_ClientesyEmpresasRowChanging;
            
            public event tl_ClientesyEmpresasRowChangeEventHandler tl_ClientesyEmpresasRowChanged;
            
            public event tl_ClientesyEmpresasRowChangeEventHandler tl_ClientesyEmpresasRowDeleting;
            
            public event tl_ClientesyEmpresasRowChangeEventHandler tl_ClientesyEmpresasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_ClientesyEmpresasRow(tl_ClientesyEmpresasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesyEmpresasRow Addtl_ClientesyEmpresasRow(decimal ID, string Nombre, string Apellido, string Mail, string Dom_Calle, decimal Nro_Calle, decimal Piso, string Depto, string Cod_Postal, decimal Telefono) {
                tl_ClientesyEmpresasRow rowtl_ClientesyEmpresasRow = ((tl_ClientesyEmpresasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Nombre,
                        Apellido,
                        Mail,
                        Dom_Calle,
                        Nro_Calle,
                        Piso,
                        Depto,
                        Cod_Postal,
                        Telefono};
                rowtl_ClientesyEmpresasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_ClientesyEmpresasRow);
                return rowtl_ClientesyEmpresasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_ClientesyEmpresasDataTable cln = ((tl_ClientesyEmpresasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_ClientesyEmpresasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnApellido = base.Columns["Apellido"];
                this.columnMail = base.Columns["Mail"];
                this.columnDom_Calle = base.Columns["Dom_Calle"];
                this.columnNro_Calle = base.Columns["Nro_Calle"];
                this.columnPiso = base.Columns["Piso"];
                this.columnDepto = base.Columns["Depto"];
                this.columnCod_Postal = base.Columns["Cod_Postal"];
                this.columnTelefono = base.Columns["Telefono"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnApellido = new global::System.Data.DataColumn("Apellido", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApellido);
                this.columnMail = new global::System.Data.DataColumn("Mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMail);
                this.columnDom_Calle = new global::System.Data.DataColumn("Dom_Calle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDom_Calle);
                this.columnNro_Calle = new global::System.Data.DataColumn("Nro_Calle", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNro_Calle);
                this.columnPiso = new global::System.Data.DataColumn("Piso", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiso);
                this.columnDepto = new global::System.Data.DataColumn("Depto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepto);
                this.columnCod_Postal = new global::System.Data.DataColumn("Cod_Postal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Postal);
                this.columnTelefono = new global::System.Data.DataColumn("Telefono", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefono);
                this.columnID.ReadOnly = true;
                this.columnNombre.ReadOnly = true;
                this.columnNombre.MaxLength = 255;
                this.columnApellido.ReadOnly = true;
                this.columnApellido.MaxLength = 255;
                this.columnMail.ReadOnly = true;
                this.columnMail.MaxLength = 255;
                this.columnDom_Calle.ReadOnly = true;
                this.columnDom_Calle.MaxLength = 255;
                this.columnNro_Calle.ReadOnly = true;
                this.columnPiso.ReadOnly = true;
                this.columnDepto.ReadOnly = true;
                this.columnDepto.MaxLength = 50;
                this.columnCod_Postal.ReadOnly = true;
                this.columnCod_Postal.MaxLength = 50;
                this.columnTelefono.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesyEmpresasRow Newtl_ClientesyEmpresasRow() {
                return ((tl_ClientesyEmpresasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_ClientesyEmpresasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_ClientesyEmpresasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_ClientesyEmpresasRowChanged != null)) {
                    this.tl_ClientesyEmpresasRowChanged(this, new tl_ClientesyEmpresasRowChangeEvent(((tl_ClientesyEmpresasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_ClientesyEmpresasRowChanging != null)) {
                    this.tl_ClientesyEmpresasRowChanging(this, new tl_ClientesyEmpresasRowChangeEvent(((tl_ClientesyEmpresasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_ClientesyEmpresasRowDeleted != null)) {
                    this.tl_ClientesyEmpresasRowDeleted(this, new tl_ClientesyEmpresasRowChangeEvent(((tl_ClientesyEmpresasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_ClientesyEmpresasRowDeleting != null)) {
                    this.tl_ClientesyEmpresasRowDeleting(this, new tl_ClientesyEmpresasRowChangeEvent(((tl_ClientesyEmpresasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_ClientesyEmpresasRow(tl_ClientesyEmpresasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_ClientesyEmpresasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HistorialComprasDataTable : global::System.Data.TypedTableBase<HistorialComprasRow> {
            
            private global::System.Data.DataColumn columnPublicacion_Codigo;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnCantidad;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialComprasDataTable() {
                this.TableName = "HistorialCompras";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HistorialComprasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HistorialComprasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Publicacion_CodigoColumn {
                get {
                    return this.columnPublicacion_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialComprasRow this[int index] {
                get {
                    return ((HistorialComprasRow)(this.Rows[index]));
                }
            }
            
            public event HistorialComprasRowChangeEventHandler HistorialComprasRowChanging;
            
            public event HistorialComprasRowChangeEventHandler HistorialComprasRowChanged;
            
            public event HistorialComprasRowChangeEventHandler HistorialComprasRowDeleting;
            
            public event HistorialComprasRowChangeEventHandler HistorialComprasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHistorialComprasRow(HistorialComprasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialComprasRow AddHistorialComprasRow(tl_PublicacionesRow parenttl_PublicacionesRowByfk_Compras_Publicacion1, System.DateTime Fecha, decimal Cantidad) {
                HistorialComprasRow rowHistorialComprasRow = ((HistorialComprasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Fecha,
                        Cantidad};
                if ((parenttl_PublicacionesRowByfk_Compras_Publicacion1 != null)) {
                    columnValuesArray[0] = parenttl_PublicacionesRowByfk_Compras_Publicacion1[0];
                }
                rowHistorialComprasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHistorialComprasRow);
                return rowHistorialComprasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HistorialComprasDataTable cln = ((HistorialComprasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HistorialComprasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPublicacion_Codigo = base.Columns["Publicacion_Codigo"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnCantidad = base.Columns["Cantidad"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPublicacion_Codigo = new global::System.Data.DataColumn("Publicacion_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicacion_Codigo);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnCantidad = new global::System.Data.DataColumn("Cantidad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad);
                this.columnPublicacion_Codigo.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
                this.columnCantidad.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialComprasRow NewHistorialComprasRow() {
                return ((HistorialComprasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HistorialComprasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HistorialComprasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HistorialComprasRowChanged != null)) {
                    this.HistorialComprasRowChanged(this, new HistorialComprasRowChangeEvent(((HistorialComprasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HistorialComprasRowChanging != null)) {
                    this.HistorialComprasRowChanging(this, new HistorialComprasRowChangeEvent(((HistorialComprasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HistorialComprasRowDeleted != null)) {
                    this.HistorialComprasRowDeleted(this, new HistorialComprasRowChangeEvent(((HistorialComprasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HistorialComprasRowDeleting != null)) {
                    this.HistorialComprasRowDeleting(this, new HistorialComprasRowChangeEvent(((HistorialComprasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHistorialComprasRow(HistorialComprasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HistorialComprasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HistorialCalificacionesOtorgadasDataTable : global::System.Data.TypedTableBase<HistorialCalificacionesOtorgadasRow> {
            
            private global::System.Data.DataColumn columnCodigo;
            
            private global::System.Data.DataColumn columnCantidad_Estrellas;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesOtorgadasDataTable() {
                this.TableName = "HistorialCalificacionesOtorgadas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HistorialCalificacionesOtorgadasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HistorialCalificacionesOtorgadasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cantidad_EstrellasColumn {
                get {
                    return this.columnCantidad_Estrellas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesOtorgadasRow this[int index] {
                get {
                    return ((HistorialCalificacionesOtorgadasRow)(this.Rows[index]));
                }
            }
            
            public event HistorialCalificacionesOtorgadasRowChangeEventHandler HistorialCalificacionesOtorgadasRowChanging;
            
            public event HistorialCalificacionesOtorgadasRowChangeEventHandler HistorialCalificacionesOtorgadasRowChanged;
            
            public event HistorialCalificacionesOtorgadasRowChangeEventHandler HistorialCalificacionesOtorgadasRowDeleting;
            
            public event HistorialCalificacionesOtorgadasRowChangeEventHandler HistorialCalificacionesOtorgadasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHistorialCalificacionesOtorgadasRow(HistorialCalificacionesOtorgadasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesOtorgadasRow AddHistorialCalificacionesOtorgadasRow(decimal Cantidad_Estrellas, string Descripcion) {
                HistorialCalificacionesOtorgadasRow rowHistorialCalificacionesOtorgadasRow = ((HistorialCalificacionesOtorgadasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Cantidad_Estrellas,
                        Descripcion};
                rowHistorialCalificacionesOtorgadasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHistorialCalificacionesOtorgadasRow);
                return rowHistorialCalificacionesOtorgadasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesOtorgadasRow FindByCodigo(decimal Codigo) {
                return ((HistorialCalificacionesOtorgadasRow)(this.Rows.Find(new object[] {
                            Codigo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HistorialCalificacionesOtorgadasDataTable cln = ((HistorialCalificacionesOtorgadasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HistorialCalificacionesOtorgadasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCodigo = base.Columns["Codigo"];
                this.columnCantidad_Estrellas = base.Columns["Cantidad_Estrellas"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCodigo = new global::System.Data.DataColumn("Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.columnCantidad_Estrellas = new global::System.Data.DataColumn("Cantidad_Estrellas", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad_Estrellas);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCodigo}, true));
                this.columnCodigo.AutoIncrement = true;
                this.columnCodigo.AutoIncrementSeed = -1;
                this.columnCodigo.AutoIncrementStep = -1;
                this.columnCodigo.AllowDBNull = false;
                this.columnCodigo.ReadOnly = true;
                this.columnCodigo.Unique = true;
                this.columnCantidad_Estrellas.AllowDBNull = false;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesOtorgadasRow NewHistorialCalificacionesOtorgadasRow() {
                return ((HistorialCalificacionesOtorgadasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HistorialCalificacionesOtorgadasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HistorialCalificacionesOtorgadasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HistorialCalificacionesOtorgadasRowChanged != null)) {
                    this.HistorialCalificacionesOtorgadasRowChanged(this, new HistorialCalificacionesOtorgadasRowChangeEvent(((HistorialCalificacionesOtorgadasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HistorialCalificacionesOtorgadasRowChanging != null)) {
                    this.HistorialCalificacionesOtorgadasRowChanging(this, new HistorialCalificacionesOtorgadasRowChangeEvent(((HistorialCalificacionesOtorgadasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HistorialCalificacionesOtorgadasRowDeleted != null)) {
                    this.HistorialCalificacionesOtorgadasRowDeleted(this, new HistorialCalificacionesOtorgadasRowChangeEvent(((HistorialCalificacionesOtorgadasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HistorialCalificacionesOtorgadasRowDeleting != null)) {
                    this.HistorialCalificacionesOtorgadasRowDeleting(this, new HistorialCalificacionesOtorgadasRowChangeEvent(((HistorialCalificacionesOtorgadasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHistorialCalificacionesOtorgadasRow(HistorialCalificacionesOtorgadasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HistorialCalificacionesOtorgadasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HistorialOfertasDataTable : global::System.Data.TypedTableBase<HistorialOfertasRow> {
            
            private global::System.Data.DataColumn columnPublicacion_Codigo;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnMonto;
            
            private global::System.Data.DataColumn columnGanadora;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialOfertasDataTable() {
                this.TableName = "HistorialOfertas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HistorialOfertasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HistorialOfertasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Publicacion_CodigoColumn {
                get {
                    return this.columnPublicacion_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MontoColumn {
                get {
                    return this.columnMonto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GanadoraColumn {
                get {
                    return this.columnGanadora;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialOfertasRow this[int index] {
                get {
                    return ((HistorialOfertasRow)(this.Rows[index]));
                }
            }
            
            public event HistorialOfertasRowChangeEventHandler HistorialOfertasRowChanging;
            
            public event HistorialOfertasRowChangeEventHandler HistorialOfertasRowChanged;
            
            public event HistorialOfertasRowChangeEventHandler HistorialOfertasRowDeleting;
            
            public event HistorialOfertasRowChangeEventHandler HistorialOfertasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHistorialOfertasRow(HistorialOfertasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialOfertasRow AddHistorialOfertasRow(tl_PublicacionesRow parenttl_PublicacionesRowByfk_Ofertas_Publicacion1, System.DateTime Fecha, decimal Monto, bool Ganadora) {
                HistorialOfertasRow rowHistorialOfertasRow = ((HistorialOfertasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Fecha,
                        Monto,
                        Ganadora};
                if ((parenttl_PublicacionesRowByfk_Ofertas_Publicacion1 != null)) {
                    columnValuesArray[0] = parenttl_PublicacionesRowByfk_Ofertas_Publicacion1[0];
                }
                rowHistorialOfertasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHistorialOfertasRow);
                return rowHistorialOfertasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HistorialOfertasDataTable cln = ((HistorialOfertasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HistorialOfertasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPublicacion_Codigo = base.Columns["Publicacion_Codigo"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnMonto = base.Columns["Monto"];
                this.columnGanadora = base.Columns["Ganadora"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPublicacion_Codigo = new global::System.Data.DataColumn("Publicacion_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicacion_Codigo);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnMonto = new global::System.Data.DataColumn("Monto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonto);
                this.columnGanadora = new global::System.Data.DataColumn("Ganadora", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGanadora);
                this.columnPublicacion_Codigo.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
                this.columnMonto.AllowDBNull = false;
                this.columnGanadora.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialOfertasRow NewHistorialOfertasRow() {
                return ((HistorialOfertasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HistorialOfertasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HistorialOfertasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HistorialOfertasRowChanged != null)) {
                    this.HistorialOfertasRowChanged(this, new HistorialOfertasRowChangeEvent(((HistorialOfertasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HistorialOfertasRowChanging != null)) {
                    this.HistorialOfertasRowChanging(this, new HistorialOfertasRowChangeEvent(((HistorialOfertasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HistorialOfertasRowDeleted != null)) {
                    this.HistorialOfertasRowDeleted(this, new HistorialOfertasRowChangeEvent(((HistorialOfertasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HistorialOfertasRowDeleting != null)) {
                    this.HistorialOfertasRowDeleting(this, new HistorialOfertasRowChangeEvent(((HistorialOfertasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHistorialOfertasRow(HistorialOfertasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HistorialOfertasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HistorialCalificacionesRecibidasDataTable : global::System.Data.TypedTableBase<HistorialCalificacionesRecibidasRow> {
            
            private global::System.Data.DataColumn columnCodigo;
            
            private global::System.Data.DataColumn columnCantidad_Estrellas;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesRecibidasDataTable() {
                this.TableName = "HistorialCalificacionesRecibidas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HistorialCalificacionesRecibidasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HistorialCalificacionesRecibidasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cantidad_EstrellasColumn {
                get {
                    return this.columnCantidad_Estrellas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesRecibidasRow this[int index] {
                get {
                    return ((HistorialCalificacionesRecibidasRow)(this.Rows[index]));
                }
            }
            
            public event HistorialCalificacionesRecibidasRowChangeEventHandler HistorialCalificacionesRecibidasRowChanging;
            
            public event HistorialCalificacionesRecibidasRowChangeEventHandler HistorialCalificacionesRecibidasRowChanged;
            
            public event HistorialCalificacionesRecibidasRowChangeEventHandler HistorialCalificacionesRecibidasRowDeleting;
            
            public event HistorialCalificacionesRecibidasRowChangeEventHandler HistorialCalificacionesRecibidasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHistorialCalificacionesRecibidasRow(HistorialCalificacionesRecibidasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesRecibidasRow AddHistorialCalificacionesRecibidasRow(decimal Cantidad_Estrellas, string Descripcion) {
                HistorialCalificacionesRecibidasRow rowHistorialCalificacionesRecibidasRow = ((HistorialCalificacionesRecibidasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Cantidad_Estrellas,
                        Descripcion};
                rowHistorialCalificacionesRecibidasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHistorialCalificacionesRecibidasRow);
                return rowHistorialCalificacionesRecibidasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesRecibidasRow FindByCodigo(decimal Codigo) {
                return ((HistorialCalificacionesRecibidasRow)(this.Rows.Find(new object[] {
                            Codigo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HistorialCalificacionesRecibidasDataTable cln = ((HistorialCalificacionesRecibidasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HistorialCalificacionesRecibidasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCodigo = base.Columns["Codigo"];
                this.columnCantidad_Estrellas = base.Columns["Cantidad_Estrellas"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCodigo = new global::System.Data.DataColumn("Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.columnCantidad_Estrellas = new global::System.Data.DataColumn("Cantidad_Estrellas", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad_Estrellas);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCodigo}, true));
                this.columnCodigo.AutoIncrement = true;
                this.columnCodigo.AutoIncrementSeed = -1;
                this.columnCodigo.AutoIncrementStep = -1;
                this.columnCodigo.AllowDBNull = false;
                this.columnCodigo.ReadOnly = true;
                this.columnCodigo.Unique = true;
                this.columnCantidad_Estrellas.AllowDBNull = false;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesRecibidasRow NewHistorialCalificacionesRecibidasRow() {
                return ((HistorialCalificacionesRecibidasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HistorialCalificacionesRecibidasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HistorialCalificacionesRecibidasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HistorialCalificacionesRecibidasRowChanged != null)) {
                    this.HistorialCalificacionesRecibidasRowChanged(this, new HistorialCalificacionesRecibidasRowChangeEvent(((HistorialCalificacionesRecibidasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HistorialCalificacionesRecibidasRowChanging != null)) {
                    this.HistorialCalificacionesRecibidasRowChanging(this, new HistorialCalificacionesRecibidasRowChangeEvent(((HistorialCalificacionesRecibidasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HistorialCalificacionesRecibidasRowDeleted != null)) {
                    this.HistorialCalificacionesRecibidasRowDeleted(this, new HistorialCalificacionesRecibidasRowChangeEvent(((HistorialCalificacionesRecibidasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HistorialCalificacionesRecibidasRowDeleting != null)) {
                    this.HistorialCalificacionesRecibidasRowDeleting(this, new HistorialCalificacionesRecibidasRowChangeEvent(((HistorialCalificacionesRecibidasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHistorialCalificacionesRecibidasRow(HistorialCalificacionesRecibidasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HistorialCalificacionesRecibidasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_CalificacionesDataTable : global::System.Data.TypedTableBase<tl_CalificacionesRow> {
            
            private global::System.Data.DataColumn columnCodigo;
            
            private global::System.Data.DataColumn columnCompra_ID;
            
            private global::System.Data.DataColumn columnCantidad_Estrellas;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_CalificacionesDataTable() {
                this.TableName = "tl_Calificaciones";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_CalificacionesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_CalificacionesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Compra_IDColumn {
                get {
                    return this.columnCompra_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cantidad_EstrellasColumn {
                get {
                    return this.columnCantidad_Estrellas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_CalificacionesRow this[int index] {
                get {
                    return ((tl_CalificacionesRow)(this.Rows[index]));
                }
            }
            
            public event tl_CalificacionesRowChangeEventHandler tl_CalificacionesRowChanging;
            
            public event tl_CalificacionesRowChangeEventHandler tl_CalificacionesRowChanged;
            
            public event tl_CalificacionesRowChangeEventHandler tl_CalificacionesRowDeleting;
            
            public event tl_CalificacionesRowChangeEventHandler tl_CalificacionesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_CalificacionesRow(tl_CalificacionesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_CalificacionesRow Addtl_CalificacionesRow(tl_ComprasRow parenttl_ComprasRowByfk_Calificaciones_Compra, decimal Cantidad_Estrellas, string Descripcion) {
                tl_CalificacionesRow rowtl_CalificacionesRow = ((tl_CalificacionesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Cantidad_Estrellas,
                        Descripcion};
                if ((parenttl_ComprasRowByfk_Calificaciones_Compra != null)) {
                    columnValuesArray[1] = parenttl_ComprasRowByfk_Calificaciones_Compra[0];
                }
                rowtl_CalificacionesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_CalificacionesRow);
                return rowtl_CalificacionesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_CalificacionesRow FindByCodigo(decimal Codigo) {
                return ((tl_CalificacionesRow)(this.Rows.Find(new object[] {
                            Codigo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_CalificacionesDataTable cln = ((tl_CalificacionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_CalificacionesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCodigo = base.Columns["Codigo"];
                this.columnCompra_ID = base.Columns["Compra_ID"];
                this.columnCantidad_Estrellas = base.Columns["Cantidad_Estrellas"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCodigo = new global::System.Data.DataColumn("Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.columnCompra_ID = new global::System.Data.DataColumn("Compra_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompra_ID);
                this.columnCantidad_Estrellas = new global::System.Data.DataColumn("Cantidad_Estrellas", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad_Estrellas);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCodigo}, true));
                this.columnCodigo.AutoIncrement = true;
                this.columnCodigo.AutoIncrementSeed = -1;
                this.columnCodigo.AutoIncrementStep = -1;
                this.columnCodigo.AllowDBNull = false;
                this.columnCodigo.ReadOnly = true;
                this.columnCodigo.Unique = true;
                this.columnCompra_ID.AllowDBNull = false;
                this.columnCantidad_Estrellas.AllowDBNull = false;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_CalificacionesRow Newtl_CalificacionesRow() {
                return ((tl_CalificacionesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_CalificacionesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_CalificacionesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_CalificacionesRowChanged != null)) {
                    this.tl_CalificacionesRowChanged(this, new tl_CalificacionesRowChangeEvent(((tl_CalificacionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_CalificacionesRowChanging != null)) {
                    this.tl_CalificacionesRowChanging(this, new tl_CalificacionesRowChangeEvent(((tl_CalificacionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_CalificacionesRowDeleted != null)) {
                    this.tl_CalificacionesRowDeleted(this, new tl_CalificacionesRowChangeEvent(((tl_CalificacionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_CalificacionesRowDeleting != null)) {
                    this.tl_CalificacionesRowDeleting(this, new tl_CalificacionesRowChangeEvent(((tl_CalificacionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_CalificacionesRow(tl_CalificacionesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_CalificacionesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_Publicacion_EstadosDataTable : global::System.Data.TypedTableBase<tl_Publicacion_EstadosRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnEstado;
            
            private global::System.Data.DataColumn columnHabilitado;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_EstadosDataTable() {
                this.TableName = "tl_Publicacion_Estados";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_Publicacion_EstadosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_Publicacion_EstadosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstadoColumn {
                get {
                    return this.columnEstado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HabilitadoColumn {
                get {
                    return this.columnHabilitado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_EstadosRow this[int index] {
                get {
                    return ((tl_Publicacion_EstadosRow)(this.Rows[index]));
                }
            }
            
            public event tl_Publicacion_EstadosRowChangeEventHandler tl_Publicacion_EstadosRowChanging;
            
            public event tl_Publicacion_EstadosRowChangeEventHandler tl_Publicacion_EstadosRowChanged;
            
            public event tl_Publicacion_EstadosRowChangeEventHandler tl_Publicacion_EstadosRowDeleting;
            
            public event tl_Publicacion_EstadosRowChangeEventHandler tl_Publicacion_EstadosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_Publicacion_EstadosRow(tl_Publicacion_EstadosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_EstadosRow Addtl_Publicacion_EstadosRow(string Estado, bool Habilitado) {
                tl_Publicacion_EstadosRow rowtl_Publicacion_EstadosRow = ((tl_Publicacion_EstadosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Estado,
                        Habilitado};
                rowtl_Publicacion_EstadosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_Publicacion_EstadosRow);
                return rowtl_Publicacion_EstadosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_EstadosRow FindByID(decimal ID) {
                return ((tl_Publicacion_EstadosRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_Publicacion_EstadosDataTable cln = ((tl_Publicacion_EstadosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_Publicacion_EstadosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnEstado = base.Columns["Estado"];
                this.columnHabilitado = base.Columns["Habilitado"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnEstado = new global::System.Data.DataColumn("Estado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstado);
                this.columnHabilitado = new global::System.Data.DataColumn("Habilitado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHabilitado);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnEstado.AllowDBNull = false;
                this.columnEstado.MaxLength = 50;
                this.columnHabilitado.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_EstadosRow Newtl_Publicacion_EstadosRow() {
                return ((tl_Publicacion_EstadosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_Publicacion_EstadosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_Publicacion_EstadosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_Publicacion_EstadosRowChanged != null)) {
                    this.tl_Publicacion_EstadosRowChanged(this, new tl_Publicacion_EstadosRowChangeEvent(((tl_Publicacion_EstadosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_Publicacion_EstadosRowChanging != null)) {
                    this.tl_Publicacion_EstadosRowChanging(this, new tl_Publicacion_EstadosRowChangeEvent(((tl_Publicacion_EstadosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_Publicacion_EstadosRowDeleted != null)) {
                    this.tl_Publicacion_EstadosRowDeleted(this, new tl_Publicacion_EstadosRowChangeEvent(((tl_Publicacion_EstadosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_Publicacion_EstadosRowDeleting != null)) {
                    this.tl_Publicacion_EstadosRowDeleting(this, new tl_Publicacion_EstadosRowChangeEvent(((tl_Publicacion_EstadosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_Publicacion_EstadosRow(tl_Publicacion_EstadosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_Publicacion_EstadosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tl_Publicacion_TiposDataTable : global::System.Data.TypedTableBase<tl_Publicacion_TiposRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnTipo;
            
            private global::System.Data.DataColumn columnHabilitado;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_TiposDataTable() {
                this.TableName = "tl_Publicacion_Tipos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_Publicacion_TiposDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tl_Publicacion_TiposDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HabilitadoColumn {
                get {
                    return this.columnHabilitado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_TiposRow this[int index] {
                get {
                    return ((tl_Publicacion_TiposRow)(this.Rows[index]));
                }
            }
            
            public event tl_Publicacion_TiposRowChangeEventHandler tl_Publicacion_TiposRowChanging;
            
            public event tl_Publicacion_TiposRowChangeEventHandler tl_Publicacion_TiposRowChanged;
            
            public event tl_Publicacion_TiposRowChangeEventHandler tl_Publicacion_TiposRowDeleting;
            
            public event tl_Publicacion_TiposRowChangeEventHandler tl_Publicacion_TiposRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtl_Publicacion_TiposRow(tl_Publicacion_TiposRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_TiposRow Addtl_Publicacion_TiposRow(string Tipo, bool Habilitado) {
                tl_Publicacion_TiposRow rowtl_Publicacion_TiposRow = ((tl_Publicacion_TiposRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Tipo,
                        Habilitado};
                rowtl_Publicacion_TiposRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtl_Publicacion_TiposRow);
                return rowtl_Publicacion_TiposRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_TiposRow FindByID(decimal ID) {
                return ((tl_Publicacion_TiposRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tl_Publicacion_TiposDataTable cln = ((tl_Publicacion_TiposDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tl_Publicacion_TiposDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTipo = base.Columns["Tipo"];
                this.columnHabilitado = base.Columns["Habilitado"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columnHabilitado = new global::System.Data.DataColumn("Habilitado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHabilitado);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnTipo.AllowDBNull = false;
                this.columnTipo.MaxLength = 50;
                this.columnHabilitado.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_TiposRow Newtl_Publicacion_TiposRow() {
                return ((tl_Publicacion_TiposRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tl_Publicacion_TiposRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tl_Publicacion_TiposRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tl_Publicacion_TiposRowChanged != null)) {
                    this.tl_Publicacion_TiposRowChanged(this, new tl_Publicacion_TiposRowChangeEvent(((tl_Publicacion_TiposRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tl_Publicacion_TiposRowChanging != null)) {
                    this.tl_Publicacion_TiposRowChanging(this, new tl_Publicacion_TiposRowChangeEvent(((tl_Publicacion_TiposRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tl_Publicacion_TiposRowDeleted != null)) {
                    this.tl_Publicacion_TiposRowDeleted(this, new tl_Publicacion_TiposRowChangeEvent(((tl_Publicacion_TiposRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tl_Publicacion_TiposRowDeleting != null)) {
                    this.tl_Publicacion_TiposRowDeleting(this, new tl_Publicacion_TiposRowChangeEvent(((tl_Publicacion_TiposRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetl_Publicacion_TiposRow(tl_Publicacion_TiposRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tl_Publicacion_TiposDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PublicacionesDataTable : global::System.Data.TypedTableBase<PublicacionesRow> {
            
            private global::System.Data.DataColumn columnCodigo;
            
            private global::System.Data.DataColumn columnUsuario_ID;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnFecha;
            
            private global::System.Data.DataColumn columnStock;
            
            private global::System.Data.DataColumn columnFecha_Vencimiento;
            
            private global::System.Data.DataColumn columnPrecio;
            
            private global::System.Data.DataColumn columnTipo;
            
            private global::System.Data.DataColumn columnVisibilidad_Codigo;
            
            private global::System.Data.DataColumn columnVisibilidad_Descripcion;
            
            private global::System.Data.DataColumn columnEstado;
            
            private global::System.Data.DataColumn columnPermite_Preguntas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PublicacionesDataTable() {
                this.TableName = "Publicaciones";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PublicacionesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PublicacionesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Usuario_IDColumn {
                get {
                    return this.columnUsuario_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockColumn {
                get {
                    return this.columnStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fecha_VencimientoColumn {
                get {
                    return this.columnFecha_Vencimiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioColumn {
                get {
                    return this.columnPrecio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Visibilidad_CodigoColumn {
                get {
                    return this.columnVisibilidad_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Visibilidad_DescripcionColumn {
                get {
                    return this.columnVisibilidad_Descripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstadoColumn {
                get {
                    return this.columnEstado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Permite_PreguntasColumn {
                get {
                    return this.columnPermite_Preguntas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PublicacionesRow this[int index] {
                get {
                    return ((PublicacionesRow)(this.Rows[index]));
                }
            }
            
            public event PublicacionesRowChangeEventHandler PublicacionesRowChanging;
            
            public event PublicacionesRowChangeEventHandler PublicacionesRowChanged;
            
            public event PublicacionesRowChangeEventHandler PublicacionesRowDeleting;
            
            public event PublicacionesRowChangeEventHandler PublicacionesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPublicacionesRow(PublicacionesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PublicacionesRow AddPublicacionesRow(decimal Usuario_ID, string Descripcion, System.DateTime Fecha, decimal Stock, System.DateTime Fecha_Vencimiento, decimal Precio, string Tipo, decimal Visibilidad_Codigo, string Visibilidad_Descripcion, string Estado, bool Permite_Preguntas) {
                PublicacionesRow rowPublicacionesRow = ((PublicacionesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Usuario_ID,
                        Descripcion,
                        Fecha,
                        Stock,
                        Fecha_Vencimiento,
                        Precio,
                        Tipo,
                        Visibilidad_Codigo,
                        Visibilidad_Descripcion,
                        Estado,
                        Permite_Preguntas};
                rowPublicacionesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPublicacionesRow);
                return rowPublicacionesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PublicacionesDataTable cln = ((PublicacionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PublicacionesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCodigo = base.Columns["Codigo"];
                this.columnUsuario_ID = base.Columns["Usuario_ID"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnStock = base.Columns["Stock"];
                this.columnFecha_Vencimiento = base.Columns["Fecha_Vencimiento"];
                this.columnPrecio = base.Columns["Precio"];
                this.columnTipo = base.Columns["Tipo"];
                this.columnVisibilidad_Codigo = base.Columns["Visibilidad_Codigo"];
                this.columnVisibilidad_Descripcion = base.Columns["Visibilidad_Descripcion"];
                this.columnEstado = base.Columns["Estado"];
                this.columnPermite_Preguntas = base.Columns["Permite_Preguntas"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCodigo = new global::System.Data.DataColumn("Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.columnUsuario_ID = new global::System.Data.DataColumn("Usuario_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsuario_ID);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnStock = new global::System.Data.DataColumn("Stock", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStock);
                this.columnFecha_Vencimiento = new global::System.Data.DataColumn("Fecha_Vencimiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha_Vencimiento);
                this.columnPrecio = new global::System.Data.DataColumn("Precio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecio);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columnVisibilidad_Codigo = new global::System.Data.DataColumn("Visibilidad_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisibilidad_Codigo);
                this.columnVisibilidad_Descripcion = new global::System.Data.DataColumn("Visibilidad_Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisibilidad_Descripcion);
                this.columnEstado = new global::System.Data.DataColumn("Estado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstado);
                this.columnPermite_Preguntas = new global::System.Data.DataColumn("Permite_Preguntas", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermite_Preguntas);
                this.columnCodigo.AutoIncrement = true;
                this.columnCodigo.AutoIncrementSeed = -1;
                this.columnCodigo.AutoIncrementStep = -1;
                this.columnCodigo.AllowDBNull = false;
                this.columnCodigo.ReadOnly = true;
                this.columnUsuario_ID.AllowDBNull = false;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 255;
                this.columnFecha.AllowDBNull = false;
                this.columnStock.AllowDBNull = false;
                this.columnFecha_Vencimiento.AllowDBNull = false;
                this.columnPrecio.AllowDBNull = false;
                this.columnTipo.AllowDBNull = false;
                this.columnTipo.MaxLength = 50;
                this.columnVisibilidad_Codigo.AllowDBNull = false;
                this.columnVisibilidad_Descripcion.AllowDBNull = false;
                this.columnVisibilidad_Descripcion.MaxLength = 255;
                this.columnEstado.AllowDBNull = false;
                this.columnEstado.MaxLength = 50;
                this.columnPermite_Preguntas.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PublicacionesRow NewPublicacionesRow() {
                return ((PublicacionesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PublicacionesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PublicacionesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PublicacionesRowChanged != null)) {
                    this.PublicacionesRowChanged(this, new PublicacionesRowChangeEvent(((PublicacionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PublicacionesRowChanging != null)) {
                    this.PublicacionesRowChanging(this, new PublicacionesRowChangeEvent(((PublicacionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PublicacionesRowDeleted != null)) {
                    this.PublicacionesRowDeleted(this, new PublicacionesRowChangeEvent(((PublicacionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PublicacionesRowDeleting != null)) {
                    this.PublicacionesRowDeleting(this, new PublicacionesRowChangeEvent(((PublicacionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePublicacionesRow(PublicacionesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2014DataSet ds = new GD1C2014DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PublicacionesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_ClientesRow : global::System.Data.DataRow {
            
            private tl_ClientesDataTable tabletl_Clientes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_ClientesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Clientes = ((tl_ClientesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Clientes.IDColumn]));
                }
                set {
                    this[this.tabletl_Clientes.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo_Documento {
                get {
                    return ((string)(this[this.tabletl_Clientes.Tipo_DocumentoColumn]));
                }
                set {
                    this[this.tabletl_Clientes.Tipo_DocumentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Nro_Documento {
                get {
                    return ((decimal)(this[this.tabletl_Clientes.Nro_DocumentoColumn]));
                }
                set {
                    this[this.tabletl_Clientes.Nro_DocumentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Apellido {
                get {
                    return ((string)(this[this.tabletl_Clientes.ApellidoColumn]));
                }
                set {
                    this[this.tabletl_Clientes.ApellidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    return ((string)(this[this.tabletl_Clientes.NombreColumn]));
                }
                set {
                    this[this.tabletl_Clientes.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha_Nac {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletl_Clientes.Fecha_NacColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fecha_Nac\' in table \'tl_Clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Clientes.Fecha_NacColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mail {
                get {
                    try {
                        return ((string)(this[this.tabletl_Clientes.MailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mail\' in table \'tl_Clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Clientes.MailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dom_Calle {
                get {
                    try {
                        return ((string)(this[this.tabletl_Clientes.Dom_CalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dom_Calle\' in table \'tl_Clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Clientes.Dom_CalleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Nro_Calle {
                get {
                    try {
                        return ((decimal)(this[this.tabletl_Clientes.Nro_CalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nro_Calle\' in table \'tl_Clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Clientes.Nro_CalleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Piso {
                get {
                    try {
                        return ((decimal)(this[this.tabletl_Clientes.PisoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Piso\' in table \'tl_Clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Clientes.PisoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Depto {
                get {
                    try {
                        return ((string)(this[this.tabletl_Clientes.DeptoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depto\' in table \'tl_Clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Clientes.DeptoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cod_Postal {
                get {
                    try {
                        return ((string)(this[this.tabletl_Clientes.Cod_PostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cod_Postal\' in table \'tl_Clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Clientes.Cod_PostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Telefono {
                get {
                    try {
                        return ((decimal)(this[this.tabletl_Clientes.TelefonoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telefono\' in table \'tl_Clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Clientes.TelefonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Habilitado {
                get {
                    return ((bool)(this[this.tabletl_Clientes.HabilitadoColumn]));
                }
                set {
                    this[this.tabletl_Clientes.HabilitadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUIL {
                get {
                    return ((string)(this[this.tabletl_Clientes.CUILColumn]));
                }
                set {
                    this[this.tabletl_Clientes.CUILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Suma_Calificaciones {
                get {
                    return ((decimal)(this[this.tabletl_Clientes.Suma_CalificacionesColumn]));
                }
                set {
                    this[this.tabletl_Clientes.Suma_CalificacionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cantidad_Calificaciones {
                get {
                    return ((decimal)(this[this.tabletl_Clientes.Cantidad_CalificacionesColumn]));
                }
                set {
                    this[this.tabletl_Clientes.Cantidad_CalificacionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Comisiones_Pendientes {
                get {
                    return ((decimal)(this[this.tabletl_Clientes.Comisiones_PendientesColumn]));
                }
                set {
                    this[this.tabletl_Clientes.Comisiones_PendientesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFecha_NacNull() {
                return this.IsNull(this.tabletl_Clientes.Fecha_NacColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFecha_NacNull() {
                this[this.tabletl_Clientes.Fecha_NacColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailNull() {
                return this.IsNull(this.tabletl_Clientes.MailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailNull() {
                this[this.tabletl_Clientes.MailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDom_CalleNull() {
                return this.IsNull(this.tabletl_Clientes.Dom_CalleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDom_CalleNull() {
                this[this.tabletl_Clientes.Dom_CalleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNro_CalleNull() {
                return this.IsNull(this.tabletl_Clientes.Nro_CalleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNro_CalleNull() {
                this[this.tabletl_Clientes.Nro_CalleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPisoNull() {
                return this.IsNull(this.tabletl_Clientes.PisoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPisoNull() {
                this[this.tabletl_Clientes.PisoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptoNull() {
                return this.IsNull(this.tabletl_Clientes.DeptoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptoNull() {
                this[this.tabletl_Clientes.DeptoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCod_PostalNull() {
                return this.IsNull(this.tabletl_Clientes.Cod_PostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCod_PostalNull() {
                this[this.tabletl_Clientes.Cod_PostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelefonoNull() {
                return this.IsNull(this.tabletl_Clientes.TelefonoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelefonoNull() {
                this[this.tabletl_Clientes.TelefonoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_ComprasRow : global::System.Data.DataRow {
            
            private tl_ComprasDataTable tabletl_Compras;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_ComprasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Compras = ((tl_ComprasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Compras.IDColumn]));
                }
                set {
                    this[this.tabletl_Compras.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Publicacion_Codigo {
                get {
                    return ((decimal)(this[this.tabletl_Compras.Publicacion_CodigoColumn]));
                }
                set {
                    this[this.tabletl_Compras.Publicacion_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cantidad {
                get {
                    return ((decimal)(this[this.tabletl_Compras.CantidadColumn]));
                }
                set {
                    this[this.tabletl_Compras.CantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tabletl_Compras.FechaColumn]));
                }
                set {
                    this[this.tabletl_Compras.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Comision_Pagada {
                get {
                    return ((bool)(this[this.tabletl_Compras.Comision_PagadaColumn]));
                }
                set {
                    this[this.tabletl_Compras.Comision_PagadaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Usuario_ID {
                get {
                    return ((decimal)(this[this.tabletl_Compras.Usuario_IDColumn]));
                }
                set {
                    this[this.tabletl_Compras.Usuario_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow tl_PublicacionesRow {
                get {
                    return ((tl_PublicacionesRow)(this.GetParentRow(this.Table.ParentRelations["fk_Compras_Publicacion"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Compras_Publicacion"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_UsuariosRow tl_UsuariosRow {
                get {
                    return ((tl_UsuariosRow)(this.GetParentRow(this.Table.ParentRelations["fk_Compras_Usuario"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Compras_Usuario"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Facturas_ItemsRow[] Gettl_Facturas_ItemsRows() {
                if ((this.Table.ChildRelations["fk_Facturas_Items_Compra"] == null)) {
                    return new tl_Facturas_ItemsRow[0];
                }
                else {
                    return ((tl_Facturas_ItemsRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Facturas_Items_Compra"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PendientesRow[] Gettl_PendientesRows() {
                if ((this.Table.ChildRelations["fk_Pendientes_Compra"] == null)) {
                    return new tl_PendientesRow[0];
                }
                else {
                    return ((tl_PendientesRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Pendientes_Compra"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_CalificacionesRow[] Gettl_CalificacionesRows() {
                if ((this.Table.ChildRelations["fk_Calificaciones_Compra"] == null)) {
                    return new tl_CalificacionesRow[0];
                }
                else {
                    return ((tl_CalificacionesRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Calificaciones_Compra"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_EmpresasRow : global::System.Data.DataRow {
            
            private tl_EmpresasDataTable tabletl_Empresas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_EmpresasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Empresas = ((tl_EmpresasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Empresas.IDColumn]));
                }
                set {
                    this[this.tabletl_Empresas.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Razon_Social {
                get {
                    return ((string)(this[this.tabletl_Empresas.Razon_SocialColumn]));
                }
                set {
                    this[this.tabletl_Empresas.Razon_SocialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUIT {
                get {
                    return ((string)(this[this.tabletl_Empresas.CUITColumn]));
                }
                set {
                    this[this.tabletl_Empresas.CUITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha_Creacion {
                get {
                    return ((global::System.DateTime)(this[this.tabletl_Empresas.Fecha_CreacionColumn]));
                }
                set {
                    this[this.tabletl_Empresas.Fecha_CreacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mail {
                get {
                    try {
                        return ((string)(this[this.tabletl_Empresas.MailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mail\' in table \'tl_Empresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Empresas.MailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dom_Calle {
                get {
                    try {
                        return ((string)(this[this.tabletl_Empresas.Dom_CalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dom_Calle\' in table \'tl_Empresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Empresas.Dom_CalleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Nro_Calle {
                get {
                    try {
                        return ((decimal)(this[this.tabletl_Empresas.Nro_CalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nro_Calle\' in table \'tl_Empresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Empresas.Nro_CalleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Piso {
                get {
                    try {
                        return ((decimal)(this[this.tabletl_Empresas.PisoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Piso\' in table \'tl_Empresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Empresas.PisoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Depto {
                get {
                    try {
                        return ((string)(this[this.tabletl_Empresas.DeptoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depto\' in table \'tl_Empresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Empresas.DeptoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cod_Postal {
                get {
                    try {
                        return ((string)(this[this.tabletl_Empresas.Cod_PostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cod_Postal\' in table \'tl_Empresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Empresas.Cod_PostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Habilitada {
                get {
                    return ((bool)(this[this.tabletl_Empresas.HabilitadaColumn]));
                }
                set {
                    this[this.tabletl_Empresas.HabilitadaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Suma_Calificaciones {
                get {
                    return ((decimal)(this[this.tabletl_Empresas.Suma_CalificacionesColumn]));
                }
                set {
                    this[this.tabletl_Empresas.Suma_CalificacionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cantidad_Calificaciones {
                get {
                    return ((decimal)(this[this.tabletl_Empresas.Cantidad_CalificacionesColumn]));
                }
                set {
                    this[this.tabletl_Empresas.Cantidad_CalificacionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Comisiones_Pendientes {
                get {
                    return ((decimal)(this[this.tabletl_Empresas.Comisiones_PendientesColumn]));
                }
                set {
                    this[this.tabletl_Empresas.Comisiones_PendientesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailNull() {
                return this.IsNull(this.tabletl_Empresas.MailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailNull() {
                this[this.tabletl_Empresas.MailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDom_CalleNull() {
                return this.IsNull(this.tabletl_Empresas.Dom_CalleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDom_CalleNull() {
                this[this.tabletl_Empresas.Dom_CalleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNro_CalleNull() {
                return this.IsNull(this.tabletl_Empresas.Nro_CalleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNro_CalleNull() {
                this[this.tabletl_Empresas.Nro_CalleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPisoNull() {
                return this.IsNull(this.tabletl_Empresas.PisoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPisoNull() {
                this[this.tabletl_Empresas.PisoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptoNull() {
                return this.IsNull(this.tabletl_Empresas.DeptoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptoNull() {
                this[this.tabletl_Empresas.DeptoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCod_PostalNull() {
                return this.IsNull(this.tabletl_Empresas.Cod_PostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCod_PostalNull() {
                this[this.tabletl_Empresas.Cod_PostalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_FacturasRow : global::System.Data.DataRow {
            
            private tl_FacturasDataTable tabletl_Facturas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_FacturasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Facturas = ((tl_FacturasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Nro {
                get {
                    return ((decimal)(this[this.tabletl_Facturas.NroColumn]));
                }
                set {
                    this[this.tabletl_Facturas.NroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tabletl_Facturas.FechaColumn]));
                }
                set {
                    this[this.tabletl_Facturas.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pago_Descripcion {
                get {
                    try {
                        return ((string)(this[this.tabletl_Facturas.Pago_DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pago_Descripcion\' in table \'tl_Facturas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Facturas.Pago_DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPago_DescripcionNull() {
                return this.IsNull(this.tabletl_Facturas.Pago_DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPago_DescripcionNull() {
                this[this.tabletl_Facturas.Pago_DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Facturas_ItemsRow[] Gettl_Facturas_ItemsRows() {
                if ((this.Table.ChildRelations["fk_Facturas_Items_Factura"] == null)) {
                    return new tl_Facturas_ItemsRow[0];
                }
                else {
                    return ((tl_Facturas_ItemsRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Facturas_Items_Factura"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_Facturas_ItemsRow : global::System.Data.DataRow {
            
            private tl_Facturas_ItemsDataTable tabletl_Facturas_Items;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_Facturas_ItemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Facturas_Items = ((tl_Facturas_ItemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Facturas_Items.IDColumn]));
                }
                set {
                    this[this.tabletl_Facturas_Items.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Factura_Nro {
                get {
                    return ((decimal)(this[this.tabletl_Facturas_Items.Factura_NroColumn]));
                }
                set {
                    this[this.tabletl_Facturas_Items.Factura_NroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cantidad {
                get {
                    return ((decimal)(this[this.tabletl_Facturas_Items.CantidadColumn]));
                }
                set {
                    this[this.tabletl_Facturas_Items.CantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Monto {
                get {
                    return ((decimal)(this[this.tabletl_Facturas_Items.MontoColumn]));
                }
                set {
                    this[this.tabletl_Facturas_Items.MontoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Compra_ID {
                get {
                    try {
                        return ((decimal)(this[this.tabletl_Facturas_Items.Compra_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compra_ID\' in table \'tl_Facturas_Items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Facturas_Items.Compra_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Publicacion_Codigo {
                get {
                    return ((decimal)(this[this.tabletl_Facturas_Items.Publicacion_CodigoColumn]));
                }
                set {
                    this[this.tabletl_Facturas_Items.Publicacion_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ComprasRow tl_ComprasRow {
                get {
                    return ((tl_ComprasRow)(this.GetParentRow(this.Table.ParentRelations["fk_Facturas_Items_Compra"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Facturas_Items_Compra"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FacturasRow tl_FacturasRow {
                get {
                    return ((tl_FacturasRow)(this.GetParentRow(this.Table.ParentRelations["fk_Facturas_Items_Factura"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Facturas_Items_Factura"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow tl_PublicacionesRow {
                get {
                    return ((tl_PublicacionesRow)(this.GetParentRow(this.Table.ParentRelations["fk_Facturas_Items_Publicacion"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Facturas_Items_Publicacion"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompra_IDNull() {
                return this.IsNull(this.tabletl_Facturas_Items.Compra_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompra_IDNull() {
                this[this.tabletl_Facturas_Items.Compra_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_FuncionalidadesRow : global::System.Data.DataRow {
            
            private tl_FuncionalidadesDataTable tabletl_Funcionalidades;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_FuncionalidadesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Funcionalidades = ((tl_FuncionalidadesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Funcionalidades.IDColumn]));
                }
                set {
                    this[this.tabletl_Funcionalidades.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    return ((string)(this[this.tabletl_Funcionalidades.NombreColumn]));
                }
                set {
                    this[this.tabletl_Funcionalidades.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Roles_FuncionalidadesRow[] Gettl_Roles_FuncionalidadesRows() {
                if ((this.Table.ChildRelations["fk_Roles_Funcionalidades_Funcionalidad"] == null)) {
                    return new tl_Roles_FuncionalidadesRow[0];
                }
                else {
                    return ((tl_Roles_FuncionalidadesRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Roles_Funcionalidades_Funcionalidad"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_OfertasRow : global::System.Data.DataRow {
            
            private tl_OfertasDataTable tabletl_Ofertas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_OfertasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Ofertas = ((tl_OfertasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Ofertas.IDColumn]));
                }
                set {
                    this[this.tabletl_Ofertas.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Publicacion_Codigo {
                get {
                    return ((decimal)(this[this.tabletl_Ofertas.Publicacion_CodigoColumn]));
                }
                set {
                    this[this.tabletl_Ofertas.Publicacion_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tabletl_Ofertas.FechaColumn]));
                }
                set {
                    this[this.tabletl_Ofertas.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Monto {
                get {
                    return ((decimal)(this[this.tabletl_Ofertas.MontoColumn]));
                }
                set {
                    this[this.tabletl_Ofertas.MontoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ganadora {
                get {
                    return ((bool)(this[this.tabletl_Ofertas.GanadoraColumn]));
                }
                set {
                    this[this.tabletl_Ofertas.GanadoraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Usuario_ID {
                get {
                    return ((decimal)(this[this.tabletl_Ofertas.Usuario_IDColumn]));
                }
                set {
                    this[this.tabletl_Ofertas.Usuario_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow tl_PublicacionesRow {
                get {
                    return ((tl_PublicacionesRow)(this.GetParentRow(this.Table.ParentRelations["fk_Ofertas_Publicacion"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Ofertas_Publicacion"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_UsuariosRow tl_UsuariosRow {
                get {
                    return ((tl_UsuariosRow)(this.GetParentRow(this.Table.ParentRelations["fk_Ofertas_Usuario"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Ofertas_Usuario"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_PendientesRow : global::System.Data.DataRow {
            
            private tl_PendientesDataTable tabletl_Pendientes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_PendientesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Pendientes = ((tl_PendientesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Pendientes.IDColumn]));
                }
                set {
                    this[this.tabletl_Pendientes.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tabletl_Pendientes.FechaColumn]));
                }
                set {
                    this[this.tabletl_Pendientes.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Monto {
                get {
                    return ((decimal)(this[this.tabletl_Pendientes.MontoColumn]));
                }
                set {
                    this[this.tabletl_Pendientes.MontoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Publicacion_Codigo {
                get {
                    return ((decimal)(this[this.tabletl_Pendientes.Publicacion_CodigoColumn]));
                }
                set {
                    this[this.tabletl_Pendientes.Publicacion_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Compra_ID {
                get {
                    try {
                        return ((decimal)(this[this.tabletl_Pendientes.Compra_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Compra_ID\' in table \'tl_Pendientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Pendientes.Compra_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ComprasRow tl_ComprasRow {
                get {
                    return ((tl_ComprasRow)(this.GetParentRow(this.Table.ParentRelations["fk_Pendientes_Compra"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Pendientes_Compra"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow tl_PublicacionesRow {
                get {
                    return ((tl_PublicacionesRow)(this.GetParentRow(this.Table.ParentRelations["fk_Pendientes_Publicacion"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Pendientes_Publicacion"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompra_IDNull() {
                return this.IsNull(this.tabletl_Pendientes.Compra_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompra_IDNull() {
                this[this.tabletl_Pendientes.Compra_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_PreguntasRow : global::System.Data.DataRow {
            
            private tl_PreguntasDataTable tabletl_Preguntas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_PreguntasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Preguntas = ((tl_PreguntasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Preguntas.IDColumn]));
                }
                set {
                    this[this.tabletl_Preguntas.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Publicacion_Codigo {
                get {
                    return ((decimal)(this[this.tabletl_Preguntas.Publicacion_CodigoColumn]));
                }
                set {
                    this[this.tabletl_Preguntas.Publicacion_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pregunta {
                get {
                    return ((string)(this[this.tabletl_Preguntas.PreguntaColumn]));
                }
                set {
                    this[this.tabletl_Preguntas.PreguntaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha_Respuesta {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletl_Preguntas.Fecha_RespuestaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fecha_Respuesta\' in table \'tl_Preguntas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Preguntas.Fecha_RespuestaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Respuesta {
                get {
                    try {
                        return ((string)(this[this.tabletl_Preguntas.RespuestaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Respuesta\' in table \'tl_Preguntas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_Preguntas.RespuestaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Usuario_ID {
                get {
                    return ((decimal)(this[this.tabletl_Preguntas.Usuario_IDColumn]));
                }
                set {
                    this[this.tabletl_Preguntas.Usuario_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow tl_PublicacionesRow {
                get {
                    return ((tl_PublicacionesRow)(this.GetParentRow(this.Table.ParentRelations["fk_Preguntas_Publicacion"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Preguntas_Publicacion"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFecha_RespuestaNull() {
                return this.IsNull(this.tabletl_Preguntas.Fecha_RespuestaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFecha_RespuestaNull() {
                this[this.tabletl_Preguntas.Fecha_RespuestaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRespuestaNull() {
                return this.IsNull(this.tabletl_Preguntas.RespuestaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRespuestaNull() {
                this[this.tabletl_Preguntas.RespuestaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_PublicacionesRow : global::System.Data.DataRow {
            
            private tl_PublicacionesDataTable tabletl_Publicaciones;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_PublicacionesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Publicaciones = ((tl_PublicacionesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Codigo {
                get {
                    return ((decimal)(this[this.tabletl_Publicaciones.CodigoColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones.CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tabletl_Publicaciones.DescripcionColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tabletl_Publicaciones.FechaColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Stock {
                get {
                    return ((decimal)(this[this.tabletl_Publicaciones.StockColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones.StockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha_Vencimiento {
                get {
                    return ((global::System.DateTime)(this[this.tabletl_Publicaciones.Fecha_VencimientoColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones.Fecha_VencimientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Precio {
                get {
                    return ((decimal)(this[this.tabletl_Publicaciones.PrecioColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones.PrecioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Visibilidad_Codigo {
                get {
                    return ((decimal)(this[this.tabletl_Publicaciones.Visibilidad_CodigoColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones.Visibilidad_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Permite_Preguntas {
                get {
                    return ((bool)(this[this.tabletl_Publicaciones.Permite_PreguntasColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones.Permite_PreguntasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Usuario_ID {
                get {
                    return ((decimal)(this[this.tabletl_Publicaciones.Usuario_IDColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones.Usuario_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Tipo_ID {
                get {
                    return ((decimal)(this[this.tabletl_Publicaciones.Tipo_IDColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones.Tipo_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Estado_ID {
                get {
                    return ((decimal)(this[this.tabletl_Publicaciones.Estado_IDColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones.Estado_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_VisibilidadesRow tl_VisibilidadesRow {
                get {
                    return ((tl_VisibilidadesRow)(this.GetParentRow(this.Table.ParentRelations["fk_Publicaciones_Visibilidad"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Publicaciones_Visibilidad"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_UsuariosRow tl_UsuariosRow {
                get {
                    return ((tl_UsuariosRow)(this.GetParentRow(this.Table.ParentRelations["fk_Publicaciones_Usuario"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Publicaciones_Usuario"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_EstadosRow tl_Publicacion_EstadosRow {
                get {
                    return ((tl_Publicacion_EstadosRow)(this.GetParentRow(this.Table.ParentRelations["fk_Publicaciones_Estado"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Publicaciones_Estado"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_TiposRow tl_Publicacion_TiposRow {
                get {
                    return ((tl_Publicacion_TiposRow)(this.GetParentRow(this.Table.ParentRelations["fk_Publicaciones_Tipo"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Publicaciones_Tipo"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ComprasRow[] Gettl_ComprasRows() {
                if ((this.Table.ChildRelations["fk_Compras_Publicacion"] == null)) {
                    return new tl_ComprasRow[0];
                }
                else {
                    return ((tl_ComprasRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Compras_Publicacion"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_OfertasRow[] Gettl_OfertasRows() {
                if ((this.Table.ChildRelations["fk_Ofertas_Publicacion"] == null)) {
                    return new tl_OfertasRow[0];
                }
                else {
                    return ((tl_OfertasRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Ofertas_Publicacion"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PendientesRow[] Gettl_PendientesRows() {
                if ((this.Table.ChildRelations["fk_Pendientes_Publicacion"] == null)) {
                    return new tl_PendientesRow[0];
                }
                else {
                    return ((tl_PendientesRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Pendientes_Publicacion"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PreguntasRow[] Gettl_PreguntasRows() {
                if ((this.Table.ChildRelations["fk_Preguntas_Publicacion"] == null)) {
                    return new tl_PreguntasRow[0];
                }
                else {
                    return ((tl_PreguntasRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Preguntas_Publicacion"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicaciones_RubrosRow[] Gettl_Publicaciones_RubrosRows() {
                if ((this.Table.ChildRelations["fk_Publicaciones_Rubros_Publicacion"] == null)) {
                    return new tl_Publicaciones_RubrosRow[0];
                }
                else {
                    return ((tl_Publicaciones_RubrosRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Publicaciones_Rubros_Publicacion"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialOfertasRow[] GetHistorialOfertasRows() {
                if ((this.Table.ChildRelations["fk_Ofertas_Publicacion1"] == null)) {
                    return new HistorialOfertasRow[0];
                }
                else {
                    return ((HistorialOfertasRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Ofertas_Publicacion1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialComprasRow[] GetHistorialComprasRows() {
                if ((this.Table.ChildRelations["fk_Compras_Publicacion1"] == null)) {
                    return new HistorialComprasRow[0];
                }
                else {
                    return ((HistorialComprasRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Compras_Publicacion1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Facturas_ItemsRow[] Gettl_Facturas_ItemsRows() {
                if ((this.Table.ChildRelations["fk_Facturas_Items_Publicacion"] == null)) {
                    return new tl_Facturas_ItemsRow[0];
                }
                else {
                    return ((tl_Facturas_ItemsRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Facturas_Items_Publicacion"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_Publicaciones_RubrosRow : global::System.Data.DataRow {
            
            private tl_Publicaciones_RubrosDataTable tabletl_Publicaciones_Rubros;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_Publicaciones_RubrosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Publicaciones_Rubros = ((tl_Publicaciones_RubrosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Publicacion_Codigo {
                get {
                    return ((decimal)(this[this.tabletl_Publicaciones_Rubros.Publicacion_CodigoColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones_Rubros.Publicacion_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rubro_ID {
                get {
                    return ((decimal)(this[this.tabletl_Publicaciones_Rubros.Rubro_IDColumn]));
                }
                set {
                    this[this.tabletl_Publicaciones_Rubros.Rubro_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow tl_PublicacionesRow {
                get {
                    return ((tl_PublicacionesRow)(this.GetParentRow(this.Table.ParentRelations["fk_Publicaciones_Rubros_Publicacion"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Publicaciones_Rubros_Publicacion"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RubrosRow tl_RubrosRow {
                get {
                    return ((tl_RubrosRow)(this.GetParentRow(this.Table.ParentRelations["fk_Publicaciones_Rubros_Rubro"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Publicaciones_Rubros_Rubro"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_RolesRow : global::System.Data.DataRow {
            
            private tl_RolesDataTable tabletl_Roles;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_RolesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Roles = ((tl_RolesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Roles.IDColumn]));
                }
                set {
                    this[this.tabletl_Roles.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    return ((string)(this[this.tabletl_Roles.NombreColumn]));
                }
                set {
                    this[this.tabletl_Roles.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Habilitado {
                get {
                    return ((bool)(this[this.tabletl_Roles.HabilitadoColumn]));
                }
                set {
                    this[this.tabletl_Roles.HabilitadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Roles_FuncionalidadesRow[] Gettl_Roles_FuncionalidadesRows() {
                if ((this.Table.ChildRelations["fk_Roles_Funcionalidades_Rol"] == null)) {
                    return new tl_Roles_FuncionalidadesRow[0];
                }
                else {
                    return ((tl_Roles_FuncionalidadesRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Roles_Funcionalidades_Rol"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Usuarios_RolesRow[] Gettl_Usuarios_RolesRows() {
                if ((this.Table.ChildRelations["fk_Usuarios_Roles_Rol"] == null)) {
                    return new tl_Usuarios_RolesRow[0];
                }
                else {
                    return ((tl_Usuarios_RolesRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Usuarios_Roles_Rol"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_Roles_FuncionalidadesRow : global::System.Data.DataRow {
            
            private tl_Roles_FuncionalidadesDataTable tabletl_Roles_Funcionalidades;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_Roles_FuncionalidadesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Roles_Funcionalidades = ((tl_Roles_FuncionalidadesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rol_ID {
                get {
                    return ((decimal)(this[this.tabletl_Roles_Funcionalidades.Rol_IDColumn]));
                }
                set {
                    this[this.tabletl_Roles_Funcionalidades.Rol_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Funcionalidad_ID {
                get {
                    return ((decimal)(this[this.tabletl_Roles_Funcionalidades.Funcionalidad_IDColumn]));
                }
                set {
                    this[this.tabletl_Roles_Funcionalidades.Funcionalidad_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FuncionalidadesRow tl_FuncionalidadesRow {
                get {
                    return ((tl_FuncionalidadesRow)(this.GetParentRow(this.Table.ParentRelations["fk_Roles_Funcionalidades_Funcionalidad"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Roles_Funcionalidades_Funcionalidad"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RolesRow tl_RolesRow {
                get {
                    return ((tl_RolesRow)(this.GetParentRow(this.Table.ParentRelations["fk_Roles_Funcionalidades_Rol"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Roles_Funcionalidades_Rol"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_RubrosRow : global::System.Data.DataRow {
            
            private tl_RubrosDataTable tabletl_Rubros;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_RubrosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Rubros = ((tl_RubrosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Rubros.IDColumn]));
                }
                set {
                    this[this.tabletl_Rubros.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tabletl_Rubros.DescripcionColumn]));
                }
                set {
                    this[this.tabletl_Rubros.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Habilitado {
                get {
                    return ((bool)(this[this.tabletl_Rubros.HabilitadoColumn]));
                }
                set {
                    this[this.tabletl_Rubros.HabilitadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicaciones_RubrosRow[] Gettl_Publicaciones_RubrosRows() {
                if ((this.Table.ChildRelations["fk_Publicaciones_Rubros_Rubro"] == null)) {
                    return new tl_Publicaciones_RubrosRow[0];
                }
                else {
                    return ((tl_Publicaciones_RubrosRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Publicaciones_Rubros_Rubro"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_UsuariosRow : global::System.Data.DataRow {
            
            private tl_UsuariosDataTable tabletl_Usuarios;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_UsuariosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Usuarios = ((tl_UsuariosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Usuarios.IDColumn]));
                }
                set {
                    this[this.tabletl_Usuarios.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Username {
                get {
                    return ((string)(this[this.tabletl_Usuarios.UsernameColumn]));
                }
                set {
                    this[this.tabletl_Usuarios.UsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Password {
                get {
                    return ((string)(this[this.tabletl_Usuarios.PasswordColumn]));
                }
                set {
                    this[this.tabletl_Usuarios.PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Logins_Fallidos {
                get {
                    return ((byte)(this[this.tabletl_Usuarios.Logins_FallidosColumn]));
                }
                set {
                    this[this.tabletl_Usuarios.Logins_FallidosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Habilitado {
                get {
                    return ((bool)(this[this.tabletl_Usuarios.HabilitadoColumn]));
                }
                set {
                    this[this.tabletl_Usuarios.HabilitadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Activo {
                get {
                    return ((bool)(this[this.tabletl_Usuarios.ActivoColumn]));
                }
                set {
                    this[this.tabletl_Usuarios.ActivoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Change_Password {
                get {
                    return ((bool)(this[this.tabletl_Usuarios.Change_PasswordColumn]));
                }
                set {
                    this[this.tabletl_Usuarios.Change_PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Calificaciones_Pendientes {
                get {
                    return ((int)(this[this.tabletl_Usuarios.Calificaciones_PendientesColumn]));
                }
                set {
                    this[this.tabletl_Usuarios.Calificaciones_PendientesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Usuarios_RolesRow[] Gettl_Usuarios_RolesRows() {
                if ((this.Table.ChildRelations["fk_Usuarios_Roles_Usuario"] == null)) {
                    return new tl_Usuarios_RolesRow[0];
                }
                else {
                    return ((tl_Usuarios_RolesRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Usuarios_Roles_Usuario"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow[] Gettl_PublicacionesRows() {
                if ((this.Table.ChildRelations["fk_Publicaciones_Usuario"] == null)) {
                    return new tl_PublicacionesRow[0];
                }
                else {
                    return ((tl_PublicacionesRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Publicaciones_Usuario"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ComprasRow[] Gettl_ComprasRows() {
                if ((this.Table.ChildRelations["fk_Compras_Usuario"] == null)) {
                    return new tl_ComprasRow[0];
                }
                else {
                    return ((tl_ComprasRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Compras_Usuario"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_OfertasRow[] Gettl_OfertasRows() {
                if ((this.Table.ChildRelations["fk_Ofertas_Usuario"] == null)) {
                    return new tl_OfertasRow[0];
                }
                else {
                    return ((tl_OfertasRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Ofertas_Usuario"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_Usuarios_RolesRow : global::System.Data.DataRow {
            
            private tl_Usuarios_RolesDataTable tabletl_Usuarios_Roles;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_Usuarios_RolesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Usuarios_Roles = ((tl_Usuarios_RolesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Usuario_ID {
                get {
                    return ((decimal)(this[this.tabletl_Usuarios_Roles.Usuario_IDColumn]));
                }
                set {
                    this[this.tabletl_Usuarios_Roles.Usuario_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rol_ID {
                get {
                    return ((decimal)(this[this.tabletl_Usuarios_Roles.Rol_IDColumn]));
                }
                set {
                    this[this.tabletl_Usuarios_Roles.Rol_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Habilitado {
                get {
                    return ((bool)(this[this.tabletl_Usuarios_Roles.HabilitadoColumn]));
                }
                set {
                    this[this.tabletl_Usuarios_Roles.HabilitadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RolesRow tl_RolesRow {
                get {
                    return ((tl_RolesRow)(this.GetParentRow(this.Table.ParentRelations["fk_Usuarios_Roles_Rol"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Usuarios_Roles_Rol"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_UsuariosRow tl_UsuariosRow {
                get {
                    return ((tl_UsuariosRow)(this.GetParentRow(this.Table.ParentRelations["fk_Usuarios_Roles_Usuario"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Usuarios_Roles_Usuario"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_VisibilidadesRow : global::System.Data.DataRow {
            
            private tl_VisibilidadesDataTable tabletl_Visibilidades;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_VisibilidadesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Visibilidades = ((tl_VisibilidadesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Codigo {
                get {
                    return ((decimal)(this[this.tabletl_Visibilidades.CodigoColumn]));
                }
                set {
                    this[this.tabletl_Visibilidades.CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tabletl_Visibilidades.DescripcionColumn]));
                }
                set {
                    this[this.tabletl_Visibilidades.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Precio {
                get {
                    return ((decimal)(this[this.tabletl_Visibilidades.PrecioColumn]));
                }
                set {
                    this[this.tabletl_Visibilidades.PrecioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Porcentaje {
                get {
                    return ((decimal)(this[this.tabletl_Visibilidades.PorcentajeColumn]));
                }
                set {
                    this[this.tabletl_Visibilidades.PorcentajeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Duracion {
                get {
                    return ((int)(this[this.tabletl_Visibilidades.DuracionColumn]));
                }
                set {
                    this[this.tabletl_Visibilidades.DuracionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow[] Gettl_PublicacionesRows() {
                if ((this.Table.ChildRelations["fk_Publicaciones_Visibilidad"] == null)) {
                    return new tl_PublicacionesRow[0];
                }
                else {
                    return ((tl_PublicacionesRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Publicaciones_Visibilidad"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sp_VendedoresConMasStockRow : global::System.Data.DataRow {
            
            private sp_VendedoresConMasStockDataTable tablesp_VendedoresConMasStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sp_VendedoresConMasStockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesp_VendedoresConMasStock = ((sp_VendedoresConMasStockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Codigo_de_usuario {
                get {
                    return ((decimal)(this[this.tablesp_VendedoresConMasStock.Codigo_de_usuarioColumn]));
                }
                set {
                    this[this.tablesp_VendedoresConMasStock.Codigo_de_usuarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Productos_sin_vender {
                get {
                    try {
                        return ((decimal)(this[this.tablesp_VendedoresConMasStock.Productos_sin_venderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Productos sin vender\' in table \'sp_VendedoresConMasStock\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablesp_VendedoresConMasStock.Productos_sin_venderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductos_sin_venderNull() {
                return this.IsNull(this.tablesp_VendedoresConMasStock.Productos_sin_venderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductos_sin_venderNull() {
                this[this.tablesp_VendedoresConMasStock.Productos_sin_venderColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class clientesMasPublicacionesSinCalificarRow : global::System.Data.DataRow {
            
            private clientesMasPublicacionesSinCalificarDataTable tableclientesMasPublicacionesSinCalificar;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal clientesMasPublicacionesSinCalificarRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableclientesMasPublicacionesSinCalificar = ((clientesMasPublicacionesSinCalificarDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Username {
                get {
                    return ((string)(this[this.tableclientesMasPublicacionesSinCalificar.UsernameColumn]));
                }
                set {
                    this[this.tableclientesMasPublicacionesSinCalificar.UsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Usuario_ID {
                get {
                    return ((decimal)(this[this.tableclientesMasPublicacionesSinCalificar.Usuario_IDColumn]));
                }
                set {
                    this[this.tableclientesMasPublicacionesSinCalificar.Usuario_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Sin_Calificar {
                get {
                    try {
                        return ((int)(this[this.tableclientesMasPublicacionesSinCalificar.Sin_CalificarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sin Calificar\' in table \'clientesMasPublicacionesSinCalific" +
                                "ar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableclientesMasPublicacionesSinCalificar.Sin_CalificarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSin_CalificarNull() {
                return this.IsNull(this.tableclientesMasPublicacionesSinCalificar.Sin_CalificarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSin_CalificarNull() {
                this[this.tableclientesMasPublicacionesSinCalificar.Sin_CalificarColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vendedoresMayorReputacionRow : global::System.Data.DataRow {
            
            private vendedoresMayorReputacionDataTable tablevendedoresMayorReputacion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendedoresMayorReputacionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevendedoresMayorReputacion = ((vendedoresMayorReputacionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Username {
                get {
                    return ((string)(this[this.tablevendedoresMayorReputacion.UsernameColumn]));
                }
                set {
                    this[this.tablevendedoresMayorReputacion.UsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Reputacion {
                get {
                    try {
                        return ((decimal)(this[this.tablevendedoresMayorReputacion.ReputacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reputacion\' in table \'vendedoresMayorReputacion\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablevendedoresMayorReputacion.ReputacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Usuario_ID {
                get {
                    return ((decimal)(this[this.tablevendedoresMayorReputacion.Usuario_IDColumn]));
                }
                set {
                    this[this.tablevendedoresMayorReputacion.Usuario_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReputacionNull() {
                return this.IsNull(this.tablevendedoresMayorReputacion.ReputacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReputacionNull() {
                this[this.tablevendedoresMayorReputacion.ReputacionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vendedoresMayorFacturacionRow : global::System.Data.DataRow {
            
            private vendedoresMayorFacturacionDataTable tablevendedoresMayorFacturacion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendedoresMayorFacturacionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevendedoresMayorFacturacion = ((vendedoresMayorFacturacionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tablevendedoresMayorFacturacion.IDColumn]));
                }
                set {
                    this[this.tablevendedoresMayorFacturacion.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Username {
                get {
                    return ((string)(this[this.tablevendedoresMayorFacturacion.UsernameColumn]));
                }
                set {
                    this[this.tablevendedoresMayorFacturacion.UsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MontoTotal {
                get {
                    try {
                        return ((decimal)(this[this.tablevendedoresMayorFacturacion.MontoTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MontoTotal\' in table \'vendedoresMayorFacturacion\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablevendedoresMayorFacturacion.MontoTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMontoTotalNull() {
                return this.IsNull(this.tablevendedoresMayorFacturacion.MontoTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMontoTotalNull() {
                this[this.tablevendedoresMayorFacturacion.MontoTotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_ClientesyEmpresasRow : global::System.Data.DataRow {
            
            private tl_ClientesyEmpresasDataTable tabletl_ClientesyEmpresas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_ClientesyEmpresasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_ClientesyEmpresas = ((tl_ClientesyEmpresasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    try {
                        return ((decimal)(this[this.tabletl_ClientesyEmpresas.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'tl_ClientesyEmpresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_ClientesyEmpresas.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tabletl_ClientesyEmpresas.NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre\' in table \'tl_ClientesyEmpresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_ClientesyEmpresas.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Apellido {
                get {
                    try {
                        return ((string)(this[this.tabletl_ClientesyEmpresas.ApellidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Apellido\' in table \'tl_ClientesyEmpresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_ClientesyEmpresas.ApellidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mail {
                get {
                    try {
                        return ((string)(this[this.tabletl_ClientesyEmpresas.MailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mail\' in table \'tl_ClientesyEmpresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_ClientesyEmpresas.MailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dom_Calle {
                get {
                    try {
                        return ((string)(this[this.tabletl_ClientesyEmpresas.Dom_CalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dom_Calle\' in table \'tl_ClientesyEmpresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_ClientesyEmpresas.Dom_CalleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Nro_Calle {
                get {
                    try {
                        return ((decimal)(this[this.tabletl_ClientesyEmpresas.Nro_CalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nro_Calle\' in table \'tl_ClientesyEmpresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_ClientesyEmpresas.Nro_CalleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Piso {
                get {
                    try {
                        return ((decimal)(this[this.tabletl_ClientesyEmpresas.PisoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Piso\' in table \'tl_ClientesyEmpresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_ClientesyEmpresas.PisoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Depto {
                get {
                    try {
                        return ((string)(this[this.tabletl_ClientesyEmpresas.DeptoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depto\' in table \'tl_ClientesyEmpresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_ClientesyEmpresas.DeptoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cod_Postal {
                get {
                    try {
                        return ((string)(this[this.tabletl_ClientesyEmpresas.Cod_PostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cod_Postal\' in table \'tl_ClientesyEmpresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_ClientesyEmpresas.Cod_PostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Telefono {
                get {
                    try {
                        return ((decimal)(this[this.tabletl_ClientesyEmpresas.TelefonoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telefono\' in table \'tl_ClientesyEmpresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletl_ClientesyEmpresas.TelefonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tabletl_ClientesyEmpresas.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tabletl_ClientesyEmpresas.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.tabletl_ClientesyEmpresas.NombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.tabletl_ClientesyEmpresas.NombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApellidoNull() {
                return this.IsNull(this.tabletl_ClientesyEmpresas.ApellidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApellidoNull() {
                this[this.tabletl_ClientesyEmpresas.ApellidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailNull() {
                return this.IsNull(this.tabletl_ClientesyEmpresas.MailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailNull() {
                this[this.tabletl_ClientesyEmpresas.MailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDom_CalleNull() {
                return this.IsNull(this.tabletl_ClientesyEmpresas.Dom_CalleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDom_CalleNull() {
                this[this.tabletl_ClientesyEmpresas.Dom_CalleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNro_CalleNull() {
                return this.IsNull(this.tabletl_ClientesyEmpresas.Nro_CalleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNro_CalleNull() {
                this[this.tabletl_ClientesyEmpresas.Nro_CalleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPisoNull() {
                return this.IsNull(this.tabletl_ClientesyEmpresas.PisoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPisoNull() {
                this[this.tabletl_ClientesyEmpresas.PisoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptoNull() {
                return this.IsNull(this.tabletl_ClientesyEmpresas.DeptoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptoNull() {
                this[this.tabletl_ClientesyEmpresas.DeptoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCod_PostalNull() {
                return this.IsNull(this.tabletl_ClientesyEmpresas.Cod_PostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCod_PostalNull() {
                this[this.tabletl_ClientesyEmpresas.Cod_PostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelefonoNull() {
                return this.IsNull(this.tabletl_ClientesyEmpresas.TelefonoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelefonoNull() {
                this[this.tabletl_ClientesyEmpresas.TelefonoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HistorialComprasRow : global::System.Data.DataRow {
            
            private HistorialComprasDataTable tableHistorialCompras;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HistorialComprasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHistorialCompras = ((HistorialComprasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Publicacion_Codigo {
                get {
                    return ((decimal)(this[this.tableHistorialCompras.Publicacion_CodigoColumn]));
                }
                set {
                    this[this.tableHistorialCompras.Publicacion_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tableHistorialCompras.FechaColumn]));
                }
                set {
                    this[this.tableHistorialCompras.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cantidad {
                get {
                    return ((decimal)(this[this.tableHistorialCompras.CantidadColumn]));
                }
                set {
                    this[this.tableHistorialCompras.CantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow tl_PublicacionesRow {
                get {
                    return ((tl_PublicacionesRow)(this.GetParentRow(this.Table.ParentRelations["fk_Compras_Publicacion1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Compras_Publicacion1"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HistorialCalificacionesOtorgadasRow : global::System.Data.DataRow {
            
            private HistorialCalificacionesOtorgadasDataTable tableHistorialCalificacionesOtorgadas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HistorialCalificacionesOtorgadasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHistorialCalificacionesOtorgadas = ((HistorialCalificacionesOtorgadasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Codigo {
                get {
                    return ((decimal)(this[this.tableHistorialCalificacionesOtorgadas.CodigoColumn]));
                }
                set {
                    this[this.tableHistorialCalificacionesOtorgadas.CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cantidad_Estrellas {
                get {
                    return ((decimal)(this[this.tableHistorialCalificacionesOtorgadas.Cantidad_EstrellasColumn]));
                }
                set {
                    this[this.tableHistorialCalificacionesOtorgadas.Cantidad_EstrellasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableHistorialCalificacionesOtorgadas.DescripcionColumn]));
                }
                set {
                    this[this.tableHistorialCalificacionesOtorgadas.DescripcionColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HistorialOfertasRow : global::System.Data.DataRow {
            
            private HistorialOfertasDataTable tableHistorialOfertas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HistorialOfertasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHistorialOfertas = ((HistorialOfertasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Publicacion_Codigo {
                get {
                    return ((decimal)(this[this.tableHistorialOfertas.Publicacion_CodigoColumn]));
                }
                set {
                    this[this.tableHistorialOfertas.Publicacion_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tableHistorialOfertas.FechaColumn]));
                }
                set {
                    this[this.tableHistorialOfertas.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Monto {
                get {
                    return ((decimal)(this[this.tableHistorialOfertas.MontoColumn]));
                }
                set {
                    this[this.tableHistorialOfertas.MontoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ganadora {
                get {
                    return ((bool)(this[this.tableHistorialOfertas.GanadoraColumn]));
                }
                set {
                    this[this.tableHistorialOfertas.GanadoraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow tl_PublicacionesRow {
                get {
                    return ((tl_PublicacionesRow)(this.GetParentRow(this.Table.ParentRelations["fk_Ofertas_Publicacion1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Ofertas_Publicacion1"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HistorialCalificacionesRecibidasRow : global::System.Data.DataRow {
            
            private HistorialCalificacionesRecibidasDataTable tableHistorialCalificacionesRecibidas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HistorialCalificacionesRecibidasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHistorialCalificacionesRecibidas = ((HistorialCalificacionesRecibidasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Codigo {
                get {
                    return ((decimal)(this[this.tableHistorialCalificacionesRecibidas.CodigoColumn]));
                }
                set {
                    this[this.tableHistorialCalificacionesRecibidas.CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cantidad_Estrellas {
                get {
                    return ((decimal)(this[this.tableHistorialCalificacionesRecibidas.Cantidad_EstrellasColumn]));
                }
                set {
                    this[this.tableHistorialCalificacionesRecibidas.Cantidad_EstrellasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableHistorialCalificacionesRecibidas.DescripcionColumn]));
                }
                set {
                    this[this.tableHistorialCalificacionesRecibidas.DescripcionColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_CalificacionesRow : global::System.Data.DataRow {
            
            private tl_CalificacionesDataTable tabletl_Calificaciones;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_CalificacionesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Calificaciones = ((tl_CalificacionesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Codigo {
                get {
                    return ((decimal)(this[this.tabletl_Calificaciones.CodigoColumn]));
                }
                set {
                    this[this.tabletl_Calificaciones.CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Compra_ID {
                get {
                    return ((decimal)(this[this.tabletl_Calificaciones.Compra_IDColumn]));
                }
                set {
                    this[this.tabletl_Calificaciones.Compra_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cantidad_Estrellas {
                get {
                    return ((decimal)(this[this.tabletl_Calificaciones.Cantidad_EstrellasColumn]));
                }
                set {
                    this[this.tabletl_Calificaciones.Cantidad_EstrellasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tabletl_Calificaciones.DescripcionColumn]));
                }
                set {
                    this[this.tabletl_Calificaciones.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ComprasRow tl_ComprasRow {
                get {
                    return ((tl_ComprasRow)(this.GetParentRow(this.Table.ParentRelations["fk_Calificaciones_Compra"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_Calificaciones_Compra"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_Publicacion_EstadosRow : global::System.Data.DataRow {
            
            private tl_Publicacion_EstadosDataTable tabletl_Publicacion_Estados;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_Publicacion_EstadosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Publicacion_Estados = ((tl_Publicacion_EstadosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Publicacion_Estados.IDColumn]));
                }
                set {
                    this[this.tabletl_Publicacion_Estados.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Estado {
                get {
                    return ((string)(this[this.tabletl_Publicacion_Estados.EstadoColumn]));
                }
                set {
                    this[this.tabletl_Publicacion_Estados.EstadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Habilitado {
                get {
                    return ((bool)(this[this.tabletl_Publicacion_Estados.HabilitadoColumn]));
                }
                set {
                    this[this.tabletl_Publicacion_Estados.HabilitadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow[] Gettl_PublicacionesRows() {
                if ((this.Table.ChildRelations["fk_Publicaciones_Estado"] == null)) {
                    return new tl_PublicacionesRow[0];
                }
                else {
                    return ((tl_PublicacionesRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Publicaciones_Estado"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tl_Publicacion_TiposRow : global::System.Data.DataRow {
            
            private tl_Publicacion_TiposDataTable tabletl_Publicacion_Tipos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tl_Publicacion_TiposRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletl_Publicacion_Tipos = ((tl_Publicacion_TiposDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tabletl_Publicacion_Tipos.IDColumn]));
                }
                set {
                    this[this.tabletl_Publicacion_Tipos.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    return ((string)(this[this.tabletl_Publicacion_Tipos.TipoColumn]));
                }
                set {
                    this[this.tabletl_Publicacion_Tipos.TipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Habilitado {
                get {
                    return ((bool)(this[this.tabletl_Publicacion_Tipos.HabilitadoColumn]));
                }
                set {
                    this[this.tabletl_Publicacion_Tipos.HabilitadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow[] Gettl_PublicacionesRows() {
                if ((this.Table.ChildRelations["fk_Publicaciones_Tipo"] == null)) {
                    return new tl_PublicacionesRow[0];
                }
                else {
                    return ((tl_PublicacionesRow[])(base.GetChildRows(this.Table.ChildRelations["fk_Publicaciones_Tipo"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PublicacionesRow : global::System.Data.DataRow {
            
            private PublicacionesDataTable tablePublicaciones;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PublicacionesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePublicaciones = ((PublicacionesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Codigo {
                get {
                    return ((decimal)(this[this.tablePublicaciones.CodigoColumn]));
                }
                set {
                    this[this.tablePublicaciones.CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Usuario_ID {
                get {
                    return ((decimal)(this[this.tablePublicaciones.Usuario_IDColumn]));
                }
                set {
                    this[this.tablePublicaciones.Usuario_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tablePublicaciones.DescripcionColumn]));
                }
                set {
                    this[this.tablePublicaciones.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tablePublicaciones.FechaColumn]));
                }
                set {
                    this[this.tablePublicaciones.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Stock {
                get {
                    return ((decimal)(this[this.tablePublicaciones.StockColumn]));
                }
                set {
                    this[this.tablePublicaciones.StockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha_Vencimiento {
                get {
                    return ((global::System.DateTime)(this[this.tablePublicaciones.Fecha_VencimientoColumn]));
                }
                set {
                    this[this.tablePublicaciones.Fecha_VencimientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Precio {
                get {
                    return ((decimal)(this[this.tablePublicaciones.PrecioColumn]));
                }
                set {
                    this[this.tablePublicaciones.PrecioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    return ((string)(this[this.tablePublicaciones.TipoColumn]));
                }
                set {
                    this[this.tablePublicaciones.TipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Visibilidad_Codigo {
                get {
                    return ((decimal)(this[this.tablePublicaciones.Visibilidad_CodigoColumn]));
                }
                set {
                    this[this.tablePublicaciones.Visibilidad_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Visibilidad_Descripcion {
                get {
                    return ((string)(this[this.tablePublicaciones.Visibilidad_DescripcionColumn]));
                }
                set {
                    this[this.tablePublicaciones.Visibilidad_DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Estado {
                get {
                    return ((string)(this[this.tablePublicaciones.EstadoColumn]));
                }
                set {
                    this[this.tablePublicaciones.EstadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Permite_Preguntas {
                get {
                    return ((bool)(this[this.tablePublicaciones.Permite_PreguntasColumn]));
                }
                set {
                    this[this.tablePublicaciones.Permite_PreguntasColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_ClientesRowChangeEvent : global::System.EventArgs {
            
            private tl_ClientesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesRowChangeEvent(tl_ClientesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_ComprasRowChangeEvent : global::System.EventArgs {
            
            private tl_ComprasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ComprasRowChangeEvent(tl_ComprasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ComprasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_EmpresasRowChangeEvent : global::System.EventArgs {
            
            private tl_EmpresasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_EmpresasRowChangeEvent(tl_EmpresasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_EmpresasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_FacturasRowChangeEvent : global::System.EventArgs {
            
            private tl_FacturasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FacturasRowChangeEvent(tl_FacturasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FacturasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_Facturas_ItemsRowChangeEvent : global::System.EventArgs {
            
            private tl_Facturas_ItemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Facturas_ItemsRowChangeEvent(tl_Facturas_ItemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Facturas_ItemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_FuncionalidadesRowChangeEvent : global::System.EventArgs {
            
            private tl_FuncionalidadesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FuncionalidadesRowChangeEvent(tl_FuncionalidadesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_FuncionalidadesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_OfertasRowChangeEvent : global::System.EventArgs {
            
            private tl_OfertasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_OfertasRowChangeEvent(tl_OfertasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_OfertasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_PendientesRowChangeEvent : global::System.EventArgs {
            
            private tl_PendientesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PendientesRowChangeEvent(tl_PendientesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PendientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_PreguntasRowChangeEvent : global::System.EventArgs {
            
            private tl_PreguntasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PreguntasRowChangeEvent(tl_PreguntasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PreguntasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_PublicacionesRowChangeEvent : global::System.EventArgs {
            
            private tl_PublicacionesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRowChangeEvent(tl_PublicacionesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_PublicacionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_Publicaciones_RubrosRowChangeEvent : global::System.EventArgs {
            
            private tl_Publicaciones_RubrosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicaciones_RubrosRowChangeEvent(tl_Publicaciones_RubrosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicaciones_RubrosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_RolesRowChangeEvent : global::System.EventArgs {
            
            private tl_RolesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RolesRowChangeEvent(tl_RolesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RolesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_Roles_FuncionalidadesRowChangeEvent : global::System.EventArgs {
            
            private tl_Roles_FuncionalidadesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Roles_FuncionalidadesRowChangeEvent(tl_Roles_FuncionalidadesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Roles_FuncionalidadesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_RubrosRowChangeEvent : global::System.EventArgs {
            
            private tl_RubrosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RubrosRowChangeEvent(tl_RubrosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_RubrosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_UsuariosRowChangeEvent : global::System.EventArgs {
            
            private tl_UsuariosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_UsuariosRowChangeEvent(tl_UsuariosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_UsuariosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_Usuarios_RolesRowChangeEvent : global::System.EventArgs {
            
            private tl_Usuarios_RolesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Usuarios_RolesRowChangeEvent(tl_Usuarios_RolesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Usuarios_RolesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_VisibilidadesRowChangeEvent : global::System.EventArgs {
            
            private tl_VisibilidadesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_VisibilidadesRowChangeEvent(tl_VisibilidadesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_VisibilidadesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sp_VendedoresConMasStockRowChangeEvent : global::System.EventArgs {
            
            private sp_VendedoresConMasStockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_VendedoresConMasStockRowChangeEvent(sp_VendedoresConMasStockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sp_VendedoresConMasStockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class clientesMasPublicacionesSinCalificarRowChangeEvent : global::System.EventArgs {
            
            private clientesMasPublicacionesSinCalificarRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public clientesMasPublicacionesSinCalificarRowChangeEvent(clientesMasPublicacionesSinCalificarRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public clientesMasPublicacionesSinCalificarRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vendedoresMayorReputacionRowChangeEvent : global::System.EventArgs {
            
            private vendedoresMayorReputacionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorReputacionRowChangeEvent(vendedoresMayorReputacionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorReputacionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vendedoresMayorFacturacionRowChangeEvent : global::System.EventArgs {
            
            private vendedoresMayorFacturacionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorFacturacionRowChangeEvent(vendedoresMayorFacturacionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendedoresMayorFacturacionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_ClientesyEmpresasRowChangeEvent : global::System.EventArgs {
            
            private tl_ClientesyEmpresasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesyEmpresasRowChangeEvent(tl_ClientesyEmpresasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_ClientesyEmpresasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HistorialComprasRowChangeEvent : global::System.EventArgs {
            
            private HistorialComprasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialComprasRowChangeEvent(HistorialComprasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialComprasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HistorialCalificacionesOtorgadasRowChangeEvent : global::System.EventArgs {
            
            private HistorialCalificacionesOtorgadasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesOtorgadasRowChangeEvent(HistorialCalificacionesOtorgadasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesOtorgadasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HistorialOfertasRowChangeEvent : global::System.EventArgs {
            
            private HistorialOfertasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialOfertasRowChangeEvent(HistorialOfertasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialOfertasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HistorialCalificacionesRecibidasRowChangeEvent : global::System.EventArgs {
            
            private HistorialCalificacionesRecibidasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesRecibidasRowChangeEvent(HistorialCalificacionesRecibidasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HistorialCalificacionesRecibidasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_CalificacionesRowChangeEvent : global::System.EventArgs {
            
            private tl_CalificacionesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_CalificacionesRowChangeEvent(tl_CalificacionesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_CalificacionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_Publicacion_EstadosRowChangeEvent : global::System.EventArgs {
            
            private tl_Publicacion_EstadosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_EstadosRowChangeEvent(tl_Publicacion_EstadosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_EstadosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tl_Publicacion_TiposRowChangeEvent : global::System.EventArgs {
            
            private tl_Publicacion_TiposRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_TiposRowChangeEvent(tl_Publicacion_TiposRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tl_Publicacion_TiposRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PublicacionesRowChangeEvent : global::System.EventArgs {
            
            private PublicacionesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PublicacionesRowChangeEvent(PublicacionesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PublicacionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FrbaCommerce.GD1C2014DataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_ClientesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_ClientesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Clientes";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Tipo_Documento", "Tipo_Documento");
            tableMapping.ColumnMappings.Add("Nro_Documento", "Nro_Documento");
            tableMapping.ColumnMappings.Add("Apellido", "Apellido");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("Fecha_Nac", "Fecha_Nac");
            tableMapping.ColumnMappings.Add("Mail", "Mail");
            tableMapping.ColumnMappings.Add("Dom_Calle", "Dom_Calle");
            tableMapping.ColumnMappings.Add("Nro_Calle", "Nro_Calle");
            tableMapping.ColumnMappings.Add("Piso", "Piso");
            tableMapping.ColumnMappings.Add("Depto", "Depto");
            tableMapping.ColumnMappings.Add("Cod_Postal", "Cod_Postal");
            tableMapping.ColumnMappings.Add("Telefono", "Telefono");
            tableMapping.ColumnMappings.Add("Habilitado", "Habilitado");
            tableMapping.ColumnMappings.Add("CUIL", "CUIL");
            tableMapping.ColumnMappings.Add("Suma_Calificaciones", "Suma_Calificaciones");
            tableMapping.ColumnMappings.Add("Cantidad_Calificaciones", "Cantidad_Calificaciones");
            tableMapping.ColumnMappings.Add("Comisiones_Pendientes", "Comisiones_Pendientes");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LOL].[tl_Clientes] WHERE (([ID] = @Original_ID) AND ([Tipo_Documento] = @Original_Tipo_Documento) AND ([Nro_Documento] = @Original_Nro_Documento) AND ([Apellido] = @Original_Apellido) AND ([Nombre] = @Original_Nombre) AND ([CUIL] = @Original_CUIL) AND ((@IsNull_Fecha_Nac = 1 AND [Fecha_Nac] IS NULL) OR ([Fecha_Nac] = @Original_Fecha_Nac)) AND ((@IsNull_Mail = 1 AND [Mail] IS NULL) OR ([Mail] = @Original_Mail)) AND ((@IsNull_Dom_Calle = 1 AND [Dom_Calle] IS NULL) OR ([Dom_Calle] = @Original_Dom_Calle)) AND ((@IsNull_Nro_Calle = 1 AND [Nro_Calle] IS NULL) OR ([Nro_Calle] = @Original_Nro_Calle)) AND ((@IsNull_Piso = 1 AND [Piso] IS NULL) OR ([Piso] = @Original_Piso)) AND ((@IsNull_Depto = 1 AND [Depto] IS NULL) OR ([Depto] = @Original_Depto)) AND ((@IsNull_Cod_Postal = 1 AND [Cod_Postal] IS NULL) OR ([Cod_Postal] = @Original_Cod_Postal)) AND ((@IsNull_Telefono = 1 AND [Telefono] IS NULL) OR ([Telefono] = @Original_Telefono)) AND ([Suma_Calificaciones] = @Original_Suma_Calificaciones) AND ([Cantidad_Calificaciones] = @Original_Cantidad_Calificaciones) AND ([Habilitado] = @Original_Habilitado) AND ([Comisiones_Pendientes] = @Original_Comisiones_Pendientes))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tipo_Documento", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo_Documento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nro_Documento", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro_Documento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Apellido", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Apellido", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUIL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fecha_Nac", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Nac", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_Nac", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Nac", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dom_Calle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dom_Calle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dom_Calle", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dom_Calle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nro_Calle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nro_Calle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nro_Calle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro_Calle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Piso", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Piso", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Piso", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Piso", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Depto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Depto", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cod_Postal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Postal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_Postal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Postal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Telefono", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telefono", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Telefono", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Telefono", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Suma_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Suma_Calificaciones", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cantidad_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad_Calificaciones", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comisiones_Pendientes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Comisiones_Pendientes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LOL].[tl_Clientes] ([ID], [Tipo_Documento], [Nro_Documento], [Apellido], [Nombre], [CUIL], [Fecha_Nac], [Mail], [Dom_Calle], [Nro_Calle], [Piso], [Depto], [Cod_Postal], [Telefono], [Suma_Calificaciones], [Cantidad_Calificaciones], [Habilitado], [Comisiones_Pendientes]) VALUES (@ID, @Tipo_Documento, @Nro_Documento, @Apellido, @Nombre, @CUIL, @Fecha_Nac, @Mail, @Dom_Calle, @Nro_Calle, @Piso, @Depto, @Cod_Postal, @Telefono, @Suma_Calificaciones, @Cantidad_Calificaciones, @Habilitado, @Comisiones_Pendientes);
SELECT ID, Tipo_Documento, Nro_Documento, Apellido, Nombre, CUIL, Fecha_Nac, Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, Telefono, Suma_Calificaciones, Cantidad_Calificaciones, Habilitado, Comisiones_Pendientes FROM LOL.tl_Clientes WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo_Documento", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo_Documento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nro_Documento", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro_Documento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Apellido", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Apellido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUIL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Nac", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Nac", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dom_Calle", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dom_Calle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nro_Calle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro_Calle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Piso", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Piso", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Depto", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_Postal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Postal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telefono", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Telefono", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Suma_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Suma_Calificaciones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cantidad_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad_Calificaciones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comisiones_Pendientes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Comisiones_Pendientes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [LOL].[tl_Clientes] SET [ID] = @ID, [Tipo_Documento] = @Tipo_Documento, [N" +
                "ro_Documento] = @Nro_Documento, [Apellido] = @Apellido, [Nombre] = @Nombre, [CUI" +
                "L] = @CUIL, [Fecha_Nac] = @Fecha_Nac, [Mail] = @Mail, [Dom_Calle] = @Dom_Calle, " +
                "[Nro_Calle] = @Nro_Calle, [Piso] = @Piso, [Depto] = @Depto, [Cod_Postal] = @Cod_" +
                "Postal, [Telefono] = @Telefono, [Suma_Calificaciones] = @Suma_Calificaciones, [C" +
                "antidad_Calificaciones] = @Cantidad_Calificaciones, [Habilitado] = @Habilitado, " +
                "[Comisiones_Pendientes] = @Comisiones_Pendientes WHERE (([ID] = @Original_ID) AN" +
                "D ([Tipo_Documento] = @Original_Tipo_Documento) AND ([Nro_Documento] = @Original" +
                "_Nro_Documento) AND ([Apellido] = @Original_Apellido) AND ([Nombre] = @Original_" +
                "Nombre) AND ([CUIL] = @Original_CUIL) AND ((@IsNull_Fecha_Nac = 1 AND [Fecha_Nac" +
                "] IS NULL) OR ([Fecha_Nac] = @Original_Fecha_Nac)) AND ((@IsNull_Mail = 1 AND [M" +
                "ail] IS NULL) OR ([Mail] = @Original_Mail)) AND ((@IsNull_Dom_Calle = 1 AND [Dom" +
                "_Calle] IS NULL) OR ([Dom_Calle] = @Original_Dom_Calle)) AND ((@IsNull_Nro_Calle" +
                " = 1 AND [Nro_Calle] IS NULL) OR ([Nro_Calle] = @Original_Nro_Calle)) AND ((@IsN" +
                "ull_Piso = 1 AND [Piso] IS NULL) OR ([Piso] = @Original_Piso)) AND ((@IsNull_Dep" +
                "to = 1 AND [Depto] IS NULL) OR ([Depto] = @Original_Depto)) AND ((@IsNull_Cod_Po" +
                "stal = 1 AND [Cod_Postal] IS NULL) OR ([Cod_Postal] = @Original_Cod_Postal)) AND" +
                " ((@IsNull_Telefono = 1 AND [Telefono] IS NULL) OR ([Telefono] = @Original_Telef" +
                "ono)) AND ([Suma_Calificaciones] = @Original_Suma_Calificaciones) AND ([Cantidad" +
                "_Calificaciones] = @Original_Cantidad_Calificaciones) AND ([Habilitado] = @Origi" +
                "nal_Habilitado) AND ([Comisiones_Pendientes] = @Original_Comisiones_Pendientes))" +
                ";\r\nSELECT ID, Tipo_Documento, Nro_Documento, Apellido, Nombre, CUIL, Fecha_Nac, " +
                "Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, Telefono, Suma_Calificacion" +
                "es, Cantidad_Calificaciones, Habilitado, Comisiones_Pendientes FROM LOL.tl_Clien" +
                "tes WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo_Documento", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo_Documento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nro_Documento", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro_Documento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Apellido", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Apellido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUIL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Nac", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Nac", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dom_Calle", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dom_Calle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nro_Calle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro_Calle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Piso", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Piso", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Depto", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_Postal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Postal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telefono", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Telefono", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Suma_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Suma_Calificaciones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cantidad_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad_Calificaciones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comisiones_Pendientes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Comisiones_Pendientes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tipo_Documento", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo_Documento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nro_Documento", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro_Documento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Apellido", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Apellido", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUIL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fecha_Nac", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Nac", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_Nac", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Nac", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dom_Calle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dom_Calle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dom_Calle", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dom_Calle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nro_Calle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nro_Calle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nro_Calle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro_Calle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Piso", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Piso", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Piso", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Piso", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Depto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Depto", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cod_Postal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Postal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_Postal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Postal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Telefono", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telefono", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Telefono", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Telefono", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Suma_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Suma_Calificaciones", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cantidad_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad_Calificaciones", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comisiones_Pendientes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Comisiones_Pendientes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[6];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     ID, Tipo_Documento, Nro_Documento, Apellido, Nombre, CUIL, Fecha_Nac, Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, Telefono, 
                      Suma_Calificaciones, Cantidad_Calificaciones, Habilitado, Comisiones_Pendientes
FROM         LOL.tl_Clientes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT COUNT(*) FROM LOL.tl_Clientes where ID=@ID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE [LOL].[tl_Clientes] SET [Habilitado] = 0 WHERE ([ID] = @ID);\r\n\r\nUPDATE [LO" +
                "L].[tl_Usuarios_Roles] SET [Habilitado] = 0 WHERE (([Usuario_ID] = @ID) AND ([Ro" +
                "l_ID] = 2))";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT     ID, Tipo_Documento, Nro_Documento, Apellido, Nombre, CUIL, Fecha_Nac, Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, Telefono, 
                      Suma_Calificaciones, Cantidad_Calificaciones, Habilitado, Comisiones_Pendientes
FROM         LOL.tl_Clientes
WHERE     (ID = @Cliente_ID)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cliente_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT     ID, Tipo_Documento, Nro_Documento, Apellido, Nombre, CUIL, Fecha_Nac, Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, Telefono, 
                      Suma_Calificaciones, Cantidad_Calificaciones, Habilitado, Comisiones_Pendientes
FROM         LOL.tl_Clientes
WHERE     (Nombre LIKE '%' + @Nombre + '%')";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "LOL.sp_GuardarCliente";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isNew", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserPassword", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoDocumento", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nro_Documento", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUIL", global::System.Data.SqlDbType.NVarChar, 15, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Apellido", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaNacimiento", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mail", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DomCalle", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NroCalle", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Piso", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Depto", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodPostal", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telefono", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_ClientesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_ClientesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_ClientesDataTable dataTable = new GD1C2014DataSet.tl_ClientesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_ClientesDataTable getByID(decimal Cliente_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(Cliente_ID));
            GD1C2014DataSet.tl_ClientesDataTable dataTable = new GD1C2014DataSet.tl_ClientesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_ClientesDataTable getClientes(string Nombre) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Nombre));
            }
            GD1C2014DataSet.tl_ClientesDataTable dataTable = new GD1C2014DataSet.tl_ClientesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_ClientesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Clientes");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_ID, 
                    string Original_Tipo_Documento, 
                    decimal Original_Nro_Documento, 
                    string Original_Apellido, 
                    string Original_Nombre, 
                    string Original_CUIL, 
                    global::System.Nullable<global::System.DateTime> Original_Fecha_Nac, 
                    string Original_Mail, 
                    string Original_Dom_Calle, 
                    global::System.Nullable<decimal> Original_Nro_Calle, 
                    global::System.Nullable<decimal> Original_Piso, 
                    string Original_Depto, 
                    string Original_Cod_Postal, 
                    global::System.Nullable<decimal> Original_Telefono, 
                    decimal Original_Suma_Calificaciones, 
                    decimal Original_Cantidad_Calificaciones, 
                    bool Original_Habilitado, 
                    decimal Original_Comisiones_Pendientes) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_Tipo_Documento == null)) {
                throw new global::System.ArgumentNullException("Original_Tipo_Documento");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Tipo_Documento));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Nro_Documento));
            if ((Original_Apellido == null)) {
                throw new global::System.ArgumentNullException("Original_Apellido");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Apellido));
            }
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Nombre));
            }
            if ((Original_CUIL == null)) {
                throw new global::System.ArgumentNullException("Original_CUIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CUIL));
            }
            if ((Original_Fecha_Nac.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Fecha_Nac.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Mail == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Mail));
            }
            if ((Original_Dom_Calle == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Dom_Calle));
            }
            if ((Original_Nro_Calle.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_Nro_Calle.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Piso.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_Piso.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Depto == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Depto));
            }
            if ((Original_Cod_Postal == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Cod_Postal));
            }
            if ((Original_Telefono.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_Telefono.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_Suma_Calificaciones));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_Cantidad_Calificaciones));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_Habilitado));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_Comisiones_Pendientes));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal ID, 
                    string Tipo_Documento, 
                    decimal Nro_Documento, 
                    string Apellido, 
                    string Nombre, 
                    string CUIL, 
                    global::System.Nullable<global::System.DateTime> Fecha_Nac, 
                    string Mail, 
                    string Dom_Calle, 
                    global::System.Nullable<decimal> Nro_Calle, 
                    global::System.Nullable<decimal> Piso, 
                    string Depto, 
                    string Cod_Postal, 
                    global::System.Nullable<decimal> Telefono, 
                    decimal Suma_Calificaciones, 
                    decimal Cantidad_Calificaciones, 
                    bool Habilitado, 
                    decimal Comisiones_Pendientes) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID));
            if ((Tipo_Documento == null)) {
                throw new global::System.ArgumentNullException("Tipo_Documento");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Tipo_Documento));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Nro_Documento));
            if ((Apellido == null)) {
                throw new global::System.ArgumentNullException("Apellido");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Apellido));
            }
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Nombre));
            }
            if ((CUIL == null)) {
                throw new global::System.ArgumentNullException("CUIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CUIL));
            }
            if ((Fecha_Nac.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Fecha_Nac.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Mail == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Mail));
            }
            if ((Dom_Calle == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Dom_Calle));
            }
            if ((Nro_Calle.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(Nro_Calle.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Piso.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(Piso.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Depto == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Depto));
            }
            if ((Cod_Postal == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Cod_Postal));
            }
            if ((Telefono.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(Telefono.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(Suma_Calificaciones));
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(Cantidad_Calificaciones));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(Habilitado));
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(Comisiones_Pendientes));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ID, 
                    string Tipo_Documento, 
                    decimal Nro_Documento, 
                    string Apellido, 
                    string Nombre, 
                    string CUIL, 
                    global::System.Nullable<global::System.DateTime> Fecha_Nac, 
                    string Mail, 
                    string Dom_Calle, 
                    global::System.Nullable<decimal> Nro_Calle, 
                    global::System.Nullable<decimal> Piso, 
                    string Depto, 
                    string Cod_Postal, 
                    global::System.Nullable<decimal> Telefono, 
                    decimal Suma_Calificaciones, 
                    decimal Cantidad_Calificaciones, 
                    bool Habilitado, 
                    decimal Comisiones_Pendientes, 
                    decimal Original_ID, 
                    string Original_Tipo_Documento, 
                    decimal Original_Nro_Documento, 
                    string Original_Apellido, 
                    string Original_Nombre, 
                    string Original_CUIL, 
                    global::System.Nullable<global::System.DateTime> Original_Fecha_Nac, 
                    string Original_Mail, 
                    string Original_Dom_Calle, 
                    global::System.Nullable<decimal> Original_Nro_Calle, 
                    global::System.Nullable<decimal> Original_Piso, 
                    string Original_Depto, 
                    string Original_Cod_Postal, 
                    global::System.Nullable<decimal> Original_Telefono, 
                    decimal Original_Suma_Calificaciones, 
                    decimal Original_Cantidad_Calificaciones, 
                    bool Original_Habilitado, 
                    decimal Original_Comisiones_Pendientes) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID));
            if ((Tipo_Documento == null)) {
                throw new global::System.ArgumentNullException("Tipo_Documento");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Tipo_Documento));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Nro_Documento));
            if ((Apellido == null)) {
                throw new global::System.ArgumentNullException("Apellido");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Apellido));
            }
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Nombre));
            }
            if ((CUIL == null)) {
                throw new global::System.ArgumentNullException("CUIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CUIL));
            }
            if ((Fecha_Nac.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Fecha_Nac.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Mail == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Mail));
            }
            if ((Dom_Calle == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Dom_Calle));
            }
            if ((Nro_Calle.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Nro_Calle.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Piso.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Piso.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Depto == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Depto));
            }
            if ((Cod_Postal == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Cod_Postal));
            }
            if ((Telefono.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Telefono.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Suma_Calificaciones));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Cantidad_Calificaciones));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Habilitado));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Comisiones_Pendientes));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_ID));
            if ((Original_Tipo_Documento == null)) {
                throw new global::System.ArgumentNullException("Original_Tipo_Documento");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Tipo_Documento));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_Nro_Documento));
            if ((Original_Apellido == null)) {
                throw new global::System.ArgumentNullException("Original_Apellido");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Apellido));
            }
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Nombre));
            }
            if ((Original_CUIL == null)) {
                throw new global::System.ArgumentNullException("Original_CUIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_CUIL));
            }
            if ((Original_Fecha_Nac.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Original_Fecha_Nac.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Mail == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Mail));
            }
            if ((Original_Dom_Calle == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Dom_Calle));
            }
            if ((Original_Nro_Calle.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_Nro_Calle.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Piso.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_Piso.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_Depto == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_Depto));
            }
            if ((Original_Cod_Postal == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Cod_Postal));
            }
            if ((Original_Telefono.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(Original_Telefono.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_Suma_Calificaciones));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_Cantidad_Calificaciones));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(Original_Habilitado));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Original_Comisiones_Pendientes));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Tipo_Documento, 
                    decimal Nro_Documento, 
                    string Apellido, 
                    string Nombre, 
                    string CUIL, 
                    global::System.Nullable<global::System.DateTime> Fecha_Nac, 
                    string Mail, 
                    string Dom_Calle, 
                    global::System.Nullable<decimal> Nro_Calle, 
                    global::System.Nullable<decimal> Piso, 
                    string Depto, 
                    string Cod_Postal, 
                    global::System.Nullable<decimal> Telefono, 
                    decimal Suma_Calificaciones, 
                    decimal Cantidad_Calificaciones, 
                    bool Habilitado, 
                    decimal Comisiones_Pendientes, 
                    decimal Original_ID, 
                    string Original_Tipo_Documento, 
                    decimal Original_Nro_Documento, 
                    string Original_Apellido, 
                    string Original_Nombre, 
                    string Original_CUIL, 
                    global::System.Nullable<global::System.DateTime> Original_Fecha_Nac, 
                    string Original_Mail, 
                    string Original_Dom_Calle, 
                    global::System.Nullable<decimal> Original_Nro_Calle, 
                    global::System.Nullable<decimal> Original_Piso, 
                    string Original_Depto, 
                    string Original_Cod_Postal, 
                    global::System.Nullable<decimal> Original_Telefono, 
                    decimal Original_Suma_Calificaciones, 
                    decimal Original_Cantidad_Calificaciones, 
                    bool Original_Habilitado, 
                    decimal Original_Comisiones_Pendientes) {
            return this.Update(Original_ID, Tipo_Documento, Nro_Documento, Apellido, Nombre, CUIL, Fecha_Nac, Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, Telefono, Suma_Calificaciones, Cantidad_Calificaciones, Habilitado, Comisiones_Pendientes, Original_ID, Original_Tipo_Documento, Original_Nro_Documento, Original_Apellido, Original_Nombre, Original_CUIL, Original_Fecha_Nac, Original_Mail, Original_Dom_Calle, Original_Nro_Calle, Original_Piso, Original_Depto, Original_Cod_Postal, Original_Telefono, Original_Suma_Calificaciones, Original_Cantidad_Calificaciones, Original_Habilitado, Original_Comisiones_Pendientes);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object CountPorID(decimal ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int deshabilitar(decimal ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_GuardarCliente(
                    global::System.Nullable<bool> isNew, 
                    string UserPassword, 
                    global::System.Nullable<int> ID, 
                    string TipoDocumento, 
                    global::System.Nullable<int> Nro_Documento, 
                    string CUIL, 
                    string Apellido, 
                    string Nombre, 
                    global::System.Nullable<global::System.DateTime> FechaNacimiento, 
                    string Mail, 
                    string DomCalle, 
                    global::System.Nullable<int> NroCalle, 
                    global::System.Nullable<int> Piso, 
                    string Depto, 
                    string CodPostal, 
                    global::System.Nullable<int> Telefono, 
                    global::System.Nullable<bool> Habilitado) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            if ((isNew.HasValue == true)) {
                command.Parameters[1].Value = ((bool)(isNew.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((UserPassword == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(UserPassword));
            }
            if ((ID.HasValue == true)) {
                command.Parameters[3].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((TipoDocumento == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(TipoDocumento));
            }
            if ((Nro_Documento.HasValue == true)) {
                command.Parameters[5].Value = ((int)(Nro_Documento.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((CUIL == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(CUIL));
            }
            if ((Apellido == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Apellido));
            }
            if ((Nombre == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Nombre));
            }
            if ((FechaNacimiento.HasValue == true)) {
                command.Parameters[9].Value = ((System.DateTime)(FechaNacimiento.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Mail == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Mail));
            }
            if ((DomCalle == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(DomCalle));
            }
            if ((NroCalle.HasValue == true)) {
                command.Parameters[12].Value = ((int)(NroCalle.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Piso.HasValue == true)) {
                command.Parameters[13].Value = ((int)(Piso.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Depto == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(Depto));
            }
            if ((CodPostal == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(CodPostal));
            }
            if ((Telefono.HasValue == true)) {
                command.Parameters[16].Value = ((int)(Telefono.Value));
            }
            else {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Habilitado.HasValue == true)) {
                command.Parameters[17].Value = ((bool)(Habilitado.Value));
            }
            else {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_ComprasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_ComprasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Compras";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Publicacion_Codigo", "Publicacion_Codigo");
            tableMapping.ColumnMappings.Add("Cantidad", "Cantidad");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            tableMapping.ColumnMappings.Add("Comision_Pagada", "Comision_Pagada");
            tableMapping.ColumnMappings.Add("Usuario_ID", "Usuario_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LOL].[tl_Compras] WHERE (([ID] = @Original_ID) AND ([Publicacion_Codigo] = @Original_Publicacion_Codigo) AND ([Usuario_ID] = @Original_Usuario_ID) AND ([Cantidad] = @Original_Cantidad) AND ([Fecha] = @Original_Fecha) AND ([Comision_Pagada] = @Original_Comision_Pagada))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cantidad", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comision_Pagada", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comision_Pagada", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LOL].[tl_Compras] ([Publicacion_Codigo], [Usuario_ID], [Cantidad], [Fecha], [Comision_Pagada]) VALUES (@Publicacion_Codigo, @Usuario_ID, @Cantidad, @Fecha, @Comision_Pagada);
SELECT ID, Publicacion_Codigo, Usuario_ID, Cantidad, Fecha, Comision_Pagada FROM LOL.tl_Compras WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cantidad", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comision_Pagada", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comision_Pagada", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Compras] SET [Publicacion_Codigo] = @Publicacion_Codigo, [Usuario_ID] = @Usuario_ID, [Cantidad] = @Cantidad, [Fecha] = @Fecha, [Comision_Pagada] = @Comision_Pagada WHERE (([ID] = @Original_ID) AND ([Publicacion_Codigo] = @Original_Publicacion_Codigo) AND ([Usuario_ID] = @Original_Usuario_ID) AND ([Cantidad] = @Original_Cantidad) AND ([Fecha] = @Original_Fecha) AND ([Comision_Pagada] = @Original_Comision_Pagada));
SELECT ID, Publicacion_Codigo, Usuario_ID, Cantidad, Fecha, Comision_Pagada FROM LOL.tl_Compras WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cantidad", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comision_Pagada", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comision_Pagada", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cantidad", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comision_Pagada", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comision_Pagada", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ID, Publicacion_Codigo, Usuario_ID, Cantidad, Fecha, Comision_Pagada\r\n" +
                "FROM         LOL.tl_Compras";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     ID, Publicacion_Codigo, Usuario_ID, Cantidad, Fecha, Comision_Pagada
FROM         LOL.tl_Compras
WHERE     (ID NOT IN
                          (SELECT     Compra_ID
                            FROM          LOL.tl_Calificaciones)) AND (Usuario_ID = @UsuarioID)
ORDER BY Fecha,Publicacion_Codigo";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UsuarioID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "LOL.sp_CalificarVendedor";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompraID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CantidadEstrellas", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 3, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "LOL.sp_crearCompra";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cantidad", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaPendiente", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@montoVisibilidad", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_ComprasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_ComprasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_ComprasDataTable dataTable = new GD1C2014DataSet.tl_ComprasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_ComprasDataTable GetPendientesCalificarByID(decimal UsuarioID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(UsuarioID));
            GD1C2014DataSet.tl_ComprasDataTable dataTable = new GD1C2014DataSet.tl_ComprasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_ComprasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Compras");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, decimal Original_Publicacion_Codigo, decimal Original_Usuario_ID, decimal Original_Cantidad, System.DateTime Original_Fecha, bool Original_Comision_Pagada) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_Publicacion_Codigo));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Usuario_ID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Cantidad));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Fecha));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_Comision_Pagada));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal Publicacion_Codigo, decimal Usuario_ID, decimal Cantidad, System.DateTime Fecha, bool Comision_Pagada) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Publicacion_Codigo));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Usuario_ID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Cantidad));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Fecha));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Comision_Pagada));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Publicacion_Codigo, decimal Usuario_ID, decimal Cantidad, System.DateTime Fecha, bool Comision_Pagada, decimal Original_ID, decimal Original_Publicacion_Codigo, decimal Original_Usuario_ID, decimal Original_Cantidad, System.DateTime Original_Fecha, bool Original_Comision_Pagada, decimal ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(Publicacion_Codigo));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Usuario_ID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Cantidad));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Fecha));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Comision_Pagada));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_Publicacion_Codigo));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_Usuario_ID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_Cantidad));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_Fecha));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_Comision_Pagada));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Publicacion_Codigo, decimal Usuario_ID, decimal Cantidad, System.DateTime Fecha, bool Comision_Pagada, decimal Original_ID, decimal Original_Publicacion_Codigo, decimal Original_Usuario_ID, decimal Original_Cantidad, System.DateTime Original_Fecha, bool Original_Comision_Pagada) {
            return this.Update(Publicacion_Codigo, Usuario_ID, Cantidad, Fecha, Comision_Pagada, Original_ID, Original_Publicacion_Codigo, Original_Usuario_ID, Original_Cantidad, Original_Fecha, Original_Comision_Pagada, Original_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_CalificarVendedor(global::System.Nullable<int> CompraID, global::System.Nullable<byte> CantidadEstrellas, string Descripcion) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((CompraID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(CompraID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CantidadEstrellas.HasValue == true)) {
                command.Parameters[2].Value = ((byte)(CantidadEstrellas.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Descripcion == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_crearCompra(global::System.Nullable<int> Publicacion_Codigo, global::System.Nullable<int> Usuario_ID, global::System.Nullable<global::System.DateTime> fecha, global::System.Nullable<int> Cantidad, global::System.Nullable<global::System.DateTime> fechaPendiente, global::System.Nullable<decimal> montoVisibilidad) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((Publicacion_Codigo.HasValue == true)) {
                command.Parameters[1].Value = ((int)(Publicacion_Codigo.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Usuario_ID.HasValue == true)) {
                command.Parameters[2].Value = ((int)(Usuario_ID.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((fecha.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(fecha.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Cantidad.HasValue == true)) {
                command.Parameters[4].Value = ((int)(Cantidad.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((fechaPendiente.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(fechaPendiente.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((montoVisibilidad.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(montoVisibilidad.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_EmpresasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_EmpresasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Empresas";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Razon_Social", "Razon_Social");
            tableMapping.ColumnMappings.Add("CUIT", "CUIT");
            tableMapping.ColumnMappings.Add("Fecha_Creacion", "Fecha_Creacion");
            tableMapping.ColumnMappings.Add("Mail", "Mail");
            tableMapping.ColumnMappings.Add("Dom_Calle", "Dom_Calle");
            tableMapping.ColumnMappings.Add("Nro_Calle", "Nro_Calle");
            tableMapping.ColumnMappings.Add("Piso", "Piso");
            tableMapping.ColumnMappings.Add("Depto", "Depto");
            tableMapping.ColumnMappings.Add("Cod_Postal", "Cod_Postal");
            tableMapping.ColumnMappings.Add("Habilitada", "Habilitada");
            tableMapping.ColumnMappings.Add("Suma_Calificaciones", "Suma_Calificaciones");
            tableMapping.ColumnMappings.Add("Cantidad_Calificaciones", "Cantidad_Calificaciones");
            tableMapping.ColumnMappings.Add("Comisiones_Pendientes", "Comisiones_Pendientes");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LOL].[tl_Empresas] WHERE (([ID] = @Original_ID) AND ([Razon_Social] = @Original_Razon_Social) AND ([CUIT] = @Original_CUIT) AND ([Fecha_Creacion] = @Original_Fecha_Creacion) AND ((@IsNull_Mail = 1 AND [Mail] IS NULL) OR ([Mail] = @Original_Mail)) AND ((@IsNull_Dom_Calle = 1 AND [Dom_Calle] IS NULL) OR ([Dom_Calle] = @Original_Dom_Calle)) AND ((@IsNull_Nro_Calle = 1 AND [Nro_Calle] IS NULL) OR ([Nro_Calle] = @Original_Nro_Calle)) AND ((@IsNull_Piso = 1 AND [Piso] IS NULL) OR ([Piso] = @Original_Piso)) AND ((@IsNull_Depto = 1 AND [Depto] IS NULL) OR ([Depto] = @Original_Depto)) AND ((@IsNull_Cod_Postal = 1 AND [Cod_Postal] IS NULL) OR ([Cod_Postal] = @Original_Cod_Postal)) AND ([Suma_Calificaciones] = @Original_Suma_Calificaciones) AND ([Cantidad_Calificaciones] = @Original_Cantidad_Calificaciones) AND ([Habilitada] = @Original_Habilitada) AND ([Comisiones_Pendientes] = @Original_Comisiones_Pendientes))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Razon_Social", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Razon_Social", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUIT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUIT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_Creacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Creacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dom_Calle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dom_Calle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dom_Calle", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dom_Calle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nro_Calle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nro_Calle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nro_Calle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro_Calle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Piso", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Piso", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Piso", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Piso", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Depto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Depto", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cod_Postal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Postal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_Postal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Postal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Suma_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Suma_Calificaciones", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cantidad_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad_Calificaciones", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitada", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitada", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comisiones_Pendientes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Comisiones_Pendientes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LOL].[tl_Empresas] ([ID], [Razon_Social], [CUIT], [Fecha_Creacion], [Mail], [Dom_Calle], [Nro_Calle], [Piso], [Depto], [Cod_Postal], [Suma_Calificaciones], [Cantidad_Calificaciones], [Habilitada], [Comisiones_Pendientes]) VALUES (@ID, @Razon_Social, @CUIT, @Fecha_Creacion, @Mail, @Dom_Calle, @Nro_Calle, @Piso, @Depto, @Cod_Postal, @Suma_Calificaciones, @Cantidad_Calificaciones, @Habilitada, @Comisiones_Pendientes);
SELECT ID, Razon_Social, CUIT, Fecha_Creacion, Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, Suma_Calificaciones, Cantidad_Calificaciones, Habilitada, Comisiones_Pendientes FROM LOL.tl_Empresas WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Razon_Social", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Razon_Social", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUIT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Creacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Creacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dom_Calle", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dom_Calle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nro_Calle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro_Calle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Piso", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Piso", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Depto", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_Postal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Postal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Suma_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Suma_Calificaciones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cantidad_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad_Calificaciones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitada", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitada", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comisiones_Pendientes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Comisiones_Pendientes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [LOL].[tl_Empresas] SET [ID] = @ID, [Razon_Social] = @Razon_Social, [CUIT]" +
                " = @CUIT, [Fecha_Creacion] = @Fecha_Creacion, [Mail] = @Mail, [Dom_Calle] = @Dom" +
                "_Calle, [Nro_Calle] = @Nro_Calle, [Piso] = @Piso, [Depto] = @Depto, [Cod_Postal]" +
                " = @Cod_Postal, [Suma_Calificaciones] = @Suma_Calificaciones, [Cantidad_Califica" +
                "ciones] = @Cantidad_Calificaciones, [Habilitada] = @Habilitada, [Comisiones_Pend" +
                "ientes] = @Comisiones_Pendientes WHERE (([ID] = @Original_ID) AND ([Razon_Social" +
                "] = @Original_Razon_Social) AND ([CUIT] = @Original_CUIT) AND ([Fecha_Creacion] " +
                "= @Original_Fecha_Creacion) AND ((@IsNull_Mail = 1 AND [Mail] IS NULL) OR ([Mail" +
                "] = @Original_Mail)) AND ((@IsNull_Dom_Calle = 1 AND [Dom_Calle] IS NULL) OR ([D" +
                "om_Calle] = @Original_Dom_Calle)) AND ((@IsNull_Nro_Calle = 1 AND [Nro_Calle] IS" +
                " NULL) OR ([Nro_Calle] = @Original_Nro_Calle)) AND ((@IsNull_Piso = 1 AND [Piso]" +
                " IS NULL) OR ([Piso] = @Original_Piso)) AND ((@IsNull_Depto = 1 AND [Depto] IS N" +
                "ULL) OR ([Depto] = @Original_Depto)) AND ((@IsNull_Cod_Postal = 1 AND [Cod_Posta" +
                "l] IS NULL) OR ([Cod_Postal] = @Original_Cod_Postal)) AND ([Suma_Calificaciones]" +
                " = @Original_Suma_Calificaciones) AND ([Cantidad_Calificaciones] = @Original_Can" +
                "tidad_Calificaciones) AND ([Habilitada] = @Original_Habilitada) AND ([Comisiones" +
                "_Pendientes] = @Original_Comisiones_Pendientes));\r\nSELECT ID, Razon_Social, CUIT" +
                ", Fecha_Creacion, Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, Suma_Cali" +
                "ficaciones, Cantidad_Calificaciones, Habilitada, Comisiones_Pendientes FROM LOL." +
                "tl_Empresas WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Razon_Social", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Razon_Social", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUIT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Creacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Creacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dom_Calle", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dom_Calle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nro_Calle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro_Calle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Piso", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Piso", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Depto", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_Postal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Postal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Suma_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Suma_Calificaciones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cantidad_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad_Calificaciones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitada", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitada", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comisiones_Pendientes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Comisiones_Pendientes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Razon_Social", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Razon_Social", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUIT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUIT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_Creacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Creacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dom_Calle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dom_Calle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dom_Calle", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dom_Calle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nro_Calle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nro_Calle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nro_Calle", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro_Calle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Piso", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Piso", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Piso", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Piso", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Depto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Depto", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cod_Postal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Postal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_Postal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Postal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Suma_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Suma_Calificaciones", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cantidad_Calificaciones", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad_Calificaciones", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitada", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitada", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comisiones_Pendientes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Comisiones_Pendientes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ID, Razon_Social, CUIT, Fecha_Creacion, Mail, Dom_Calle, Nro_Calle, Pi" +
                "so, Depto, Cod_Postal, Suma_Calificaciones, Cantidad_Calificaciones, \r\n         " +
                "             Habilitada, Comisiones_Pendientes\r\nFROM         LOL.tl_Empresas";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE [LOL].[tl_Empresas] SET [Habilitada] = 0 WHERE ([ID] = @ID);\r\n\r\nUPDATE [LO" +
                "L].[tl_Usuarios_Roles] SET [Habilitado] = 0 WHERE (([Usuario_ID] = @ID) AND ([Ro" +
                "l_ID] = 3))";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     CUIT, Cantidad_Calificaciones, Cod_Postal, Comisiones_Pendientes, Depto, Dom_Calle, Fecha_Creacion, Habilitada, ID, Mail, Nro_Calle, Piso, 
                      Razon_Social, Suma_Calificaciones
FROM         LOL.tl_Empresas
WHERE     (ID = @Empresa_ID)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Empresa_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "LOL.sp_GuardarEmpresa";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isNew", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserPassword", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Razon_Social", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUIT", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaCreacion", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mail", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DomCalle", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NroCalle", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Piso", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Depto", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodPostal", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitada", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_EmpresasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_EmpresasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_EmpresasDataTable dataTable = new GD1C2014DataSet.tl_EmpresasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_EmpresasDataTable getByID(decimal Empresa_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(Empresa_ID));
            GD1C2014DataSet.tl_EmpresasDataTable dataTable = new GD1C2014DataSet.tl_EmpresasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_EmpresasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Empresas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, string Original_Razon_Social, string Original_CUIT, System.DateTime Original_Fecha_Creacion, string Original_Mail, string Original_Dom_Calle, global::System.Nullable<decimal> Original_Nro_Calle, global::System.Nullable<decimal> Original_Piso, string Original_Depto, string Original_Cod_Postal, decimal Original_Suma_Calificaciones, decimal Original_Cantidad_Calificaciones, bool Original_Habilitada, decimal Original_Comisiones_Pendientes) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_Razon_Social == null)) {
                throw new global::System.ArgumentNullException("Original_Razon_Social");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Razon_Social));
            }
            if ((Original_CUIT == null)) {
                throw new global::System.ArgumentNullException("Original_CUIT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CUIT));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Fecha_Creacion));
            if ((Original_Mail == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Mail));
            }
            if ((Original_Dom_Calle == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Dom_Calle));
            }
            if ((Original_Nro_Calle.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_Nro_Calle.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Piso.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_Piso.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Depto == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Depto));
            }
            if ((Original_Cod_Postal == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Cod_Postal));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_Suma_Calificaciones));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_Cantidad_Calificaciones));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_Habilitada));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_Comisiones_Pendientes));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID, string Razon_Social, string CUIT, System.DateTime Fecha_Creacion, string Mail, string Dom_Calle, global::System.Nullable<decimal> Nro_Calle, global::System.Nullable<decimal> Piso, string Depto, string Cod_Postal, decimal Suma_Calificaciones, decimal Cantidad_Calificaciones, bool Habilitada, decimal Comisiones_Pendientes) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID));
            if ((Razon_Social == null)) {
                throw new global::System.ArgumentNullException("Razon_Social");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Razon_Social));
            }
            if ((CUIT == null)) {
                throw new global::System.ArgumentNullException("CUIT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CUIT));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Fecha_Creacion));
            if ((Mail == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Mail));
            }
            if ((Dom_Calle == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Dom_Calle));
            }
            if ((Nro_Calle.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(Nro_Calle.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Piso.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(Piso.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Depto == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Depto));
            }
            if ((Cod_Postal == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Cod_Postal));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(Suma_Calificaciones));
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(Cantidad_Calificaciones));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(Habilitada));
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(Comisiones_Pendientes));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ID, 
                    string Razon_Social, 
                    string CUIT, 
                    System.DateTime Fecha_Creacion, 
                    string Mail, 
                    string Dom_Calle, 
                    global::System.Nullable<decimal> Nro_Calle, 
                    global::System.Nullable<decimal> Piso, 
                    string Depto, 
                    string Cod_Postal, 
                    decimal Suma_Calificaciones, 
                    decimal Cantidad_Calificaciones, 
                    bool Habilitada, 
                    decimal Comisiones_Pendientes, 
                    decimal Original_ID, 
                    string Original_Razon_Social, 
                    string Original_CUIT, 
                    System.DateTime Original_Fecha_Creacion, 
                    string Original_Mail, 
                    string Original_Dom_Calle, 
                    global::System.Nullable<decimal> Original_Nro_Calle, 
                    global::System.Nullable<decimal> Original_Piso, 
                    string Original_Depto, 
                    string Original_Cod_Postal, 
                    decimal Original_Suma_Calificaciones, 
                    decimal Original_Cantidad_Calificaciones, 
                    bool Original_Habilitada, 
                    decimal Original_Comisiones_Pendientes) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID));
            if ((Razon_Social == null)) {
                throw new global::System.ArgumentNullException("Razon_Social");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Razon_Social));
            }
            if ((CUIT == null)) {
                throw new global::System.ArgumentNullException("CUIT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CUIT));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Fecha_Creacion));
            if ((Mail == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Mail));
            }
            if ((Dom_Calle == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Dom_Calle));
            }
            if ((Nro_Calle.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Nro_Calle.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Piso.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Piso.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Depto == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Depto));
            }
            if ((Cod_Postal == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Cod_Postal));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Suma_Calificaciones));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Cantidad_Calificaciones));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Habilitada));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Comisiones_Pendientes));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_ID));
            if ((Original_Razon_Social == null)) {
                throw new global::System.ArgumentNullException("Original_Razon_Social");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Razon_Social));
            }
            if ((Original_CUIT == null)) {
                throw new global::System.ArgumentNullException("Original_CUIT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_CUIT));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_Fecha_Creacion));
            if ((Original_Mail == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Mail));
            }
            if ((Original_Dom_Calle == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Dom_Calle));
            }
            if ((Original_Nro_Calle.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_Nro_Calle.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Piso.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_Piso.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Depto == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Depto));
            }
            if ((Original_Cod_Postal == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Cod_Postal));
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_Suma_Calificaciones));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_Cantidad_Calificaciones));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(Original_Habilitada));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_Comisiones_Pendientes));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Razon_Social, 
                    string CUIT, 
                    System.DateTime Fecha_Creacion, 
                    string Mail, 
                    string Dom_Calle, 
                    global::System.Nullable<decimal> Nro_Calle, 
                    global::System.Nullable<decimal> Piso, 
                    string Depto, 
                    string Cod_Postal, 
                    decimal Suma_Calificaciones, 
                    decimal Cantidad_Calificaciones, 
                    bool Habilitada, 
                    decimal Comisiones_Pendientes, 
                    decimal Original_ID, 
                    string Original_Razon_Social, 
                    string Original_CUIT, 
                    System.DateTime Original_Fecha_Creacion, 
                    string Original_Mail, 
                    string Original_Dom_Calle, 
                    global::System.Nullable<decimal> Original_Nro_Calle, 
                    global::System.Nullable<decimal> Original_Piso, 
                    string Original_Depto, 
                    string Original_Cod_Postal, 
                    decimal Original_Suma_Calificaciones, 
                    decimal Original_Cantidad_Calificaciones, 
                    bool Original_Habilitada, 
                    decimal Original_Comisiones_Pendientes) {
            return this.Update(Original_ID, Razon_Social, CUIT, Fecha_Creacion, Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, Suma_Calificaciones, Cantidad_Calificaciones, Habilitada, Comisiones_Pendientes, Original_ID, Original_Razon_Social, Original_CUIT, Original_Fecha_Creacion, Original_Mail, Original_Dom_Calle, Original_Nro_Calle, Original_Piso, Original_Depto, Original_Cod_Postal, Original_Suma_Calificaciones, Original_Cantidad_Calificaciones, Original_Habilitada, Original_Comisiones_Pendientes);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int deshabilitar(decimal ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_GuardarEmpresa(global::System.Nullable<bool> isNew, string UserPassword, global::System.Nullable<int> ID, string Razon_Social, string CUIT, global::System.Nullable<global::System.DateTime> FechaCreacion, string Mail, string DomCalle, global::System.Nullable<int> NroCalle, global::System.Nullable<int> Piso, string Depto, string CodPostal, global::System.Nullable<bool> Habilitada) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((isNew.HasValue == true)) {
                command.Parameters[1].Value = ((bool)(isNew.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((UserPassword == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(UserPassword));
            }
            if ((ID.HasValue == true)) {
                command.Parameters[3].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Razon_Social == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Razon_Social));
            }
            if ((CUIT == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(CUIT));
            }
            if ((FechaCreacion.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(FechaCreacion.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Mail == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Mail));
            }
            if ((DomCalle == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(DomCalle));
            }
            if ((NroCalle.HasValue == true)) {
                command.Parameters[9].Value = ((int)(NroCalle.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Piso.HasValue == true)) {
                command.Parameters[10].Value = ((int)(Piso.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Depto == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Depto));
            }
            if ((CodPostal == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(CodPostal));
            }
            if ((Habilitada.HasValue == true)) {
                command.Parameters[13].Value = ((bool)(Habilitada.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_FacturasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_FacturasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Facturas";
            tableMapping.ColumnMappings.Add("Nro", "Nro");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            tableMapping.ColumnMappings.Add("Pago_Descripcion", "Pago_Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LOL].[tl_Facturas] WHERE (([Nro] = @Original_Nro) AND ([Fecha] = @Or" +
                "iginal_Fecha) AND ((@IsNull_Pago_Descripcion = 1 AND [Pago_Descripcion] IS NULL)" +
                " OR ([Pago_Descripcion] = @Original_Pago_Descripcion)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nro", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pago_Descripcion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pago_Descripcion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pago_Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pago_Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LOL].[tl_Facturas] ([Fecha], [Pago_Descripcion]) VALUES (@Fecha, @Pa" +
                "go_Descripcion);\r\nSELECT Nro, Fecha, Pago_Descripcion FROM LOL.tl_Facturas WHERE" +
                " (Nro = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pago_Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pago_Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Facturas] SET [Fecha] = @Fecha, [Pago_Descripcion] = @Pago_Descripcion WHERE (([Nro] = @Original_Nro) AND ([Fecha] = @Original_Fecha) AND ((@IsNull_Pago_Descripcion = 1 AND [Pago_Descripcion] IS NULL) OR ([Pago_Descripcion] = @Original_Pago_Descripcion)));
SELECT Nro, Fecha, Pago_Descripcion FROM LOL.tl_Facturas WHERE (Nro = @Nro)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pago_Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pago_Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nro", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Nro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pago_Descripcion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pago_Descripcion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pago_Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pago_Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nro", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Nro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Nro, Fecha, Pago_Descripcion\r\nFROM         LOL.tl_Facturas";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "LOL.sp_InsertarFactura";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PagoDescripcion", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nro", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_FacturasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_FacturasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_FacturasDataTable dataTable = new GD1C2014DataSet.tl_FacturasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_FacturasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Facturas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_Nro, System.DateTime Original_Fecha, string Original_Pago_Descripcion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_Nro));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Fecha));
            if ((Original_Pago_Descripcion == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Pago_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Fecha, string Pago_Descripcion) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Fecha));
            if ((Pago_Descripcion == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Pago_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Fecha, string Pago_Descripcion, decimal Original_Nro, System.DateTime Original_Fecha, string Original_Pago_Descripcion, decimal Nro) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Fecha));
            if ((Pago_Descripcion == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Pago_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_Nro));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Original_Fecha));
            if ((Original_Pago_Descripcion == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Pago_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Nro));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Fecha, string Pago_Descripcion, decimal Original_Nro, System.DateTime Original_Fecha, string Original_Pago_Descripcion) {
            return this.Update(Fecha, Pago_Descripcion, Original_Nro, Original_Fecha, Original_Pago_Descripcion, Original_Nro);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_InsertarFactura(global::System.Nullable<global::System.DateTime> Fecha, string PagoDescripcion, ref global::System.Nullable<int> Nro) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Fecha.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(Fecha.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PagoDescripcion == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(PagoDescripcion));
            }
            if ((Nro.HasValue == true)) {
                command.Parameters[3].Value = ((int)(Nro.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((command.Parameters[3].Value == null) 
                        || (command.Parameters[3].Value.GetType() == typeof(global::System.DBNull)))) {
                Nro = new global::System.Nullable<int>();
            }
            else {
                Nro = new global::System.Nullable<int>(((int)(command.Parameters[3].Value)));
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_Facturas_ItemsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_Facturas_ItemsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Facturas_Items";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Factura_Nro", "Factura_Nro");
            tableMapping.ColumnMappings.Add("Cantidad", "Cantidad");
            tableMapping.ColumnMappings.Add("Monto", "Monto");
            tableMapping.ColumnMappings.Add("Compra_ID", "Compra_ID");
            tableMapping.ColumnMappings.Add("Publicacion_Codigo", "Publicacion_Codigo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LOL].[tl_Facturas_Items] WHERE (([ID] = @Original_ID) AND ([Factura_Nro] = @Original_Factura_Nro) AND ([Cantidad] = @Original_Cantidad) AND ([Monto] = @Original_Monto) AND ([Publicacion_Codigo] = @Original_Publicacion_Codigo) AND ((@IsNull_Compra_ID = 1 AND [Compra_ID] IS NULL) OR ([Compra_ID] = @Original_Compra_ID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Factura_Nro", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Factura_Nro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cantidad", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Monto", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compra_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compra_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compra_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Compra_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LOL].[tl_Facturas_Items] ([Factura_Nro], [Cantidad], [Monto], [Publicacion_Codigo], [Compra_ID]) VALUES (@Factura_Nro, @Cantidad, @Monto, @Publicacion_Codigo, @Compra_ID);
SELECT ID, Factura_Nro, Cantidad, Monto, Publicacion_Codigo, Compra_ID FROM LOL.tl_Facturas_Items WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Factura_Nro", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Factura_Nro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cantidad", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Monto", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compra_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Compra_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Facturas_Items] SET [Factura_Nro] = @Factura_Nro, [Cantidad] = @Cantidad, [Monto] = @Monto, [Publicacion_Codigo] = @Publicacion_Codigo, [Compra_ID] = @Compra_ID WHERE (([ID] = @Original_ID) AND ([Factura_Nro] = @Original_Factura_Nro) AND ([Cantidad] = @Original_Cantidad) AND ([Monto] = @Original_Monto) AND ([Publicacion_Codigo] = @Original_Publicacion_Codigo) AND ((@IsNull_Compra_ID = 1 AND [Compra_ID] IS NULL) OR ([Compra_ID] = @Original_Compra_ID)));
SELECT ID, Factura_Nro, Cantidad, Monto, Publicacion_Codigo, Compra_ID FROM LOL.tl_Facturas_Items WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Factura_Nro", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Factura_Nro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cantidad", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Monto", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compra_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Compra_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Factura_Nro", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Factura_Nro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cantidad", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Monto", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compra_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compra_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compra_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Compra_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ID, Factura_Nro, Cantidad, Monto, Publicacion_Codigo, Compra_ID\r\nFROM " +
                "        LOL.tl_Facturas_Items";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "LOL.sp_InsertarFacturaItem";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacturaNro", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PendienteID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_Facturas_ItemsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_Facturas_ItemsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_Facturas_ItemsDataTable dataTable = new GD1C2014DataSet.tl_Facturas_ItemsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_Facturas_ItemsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Facturas_Items");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, decimal Original_Factura_Nro, decimal Original_Cantidad, decimal Original_Monto, decimal Original_Publicacion_Codigo, global::System.Nullable<decimal> Original_Compra_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_Factura_Nro));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Cantidad));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Monto));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_Publicacion_Codigo));
            if ((Original_Compra_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Compra_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal Factura_Nro, decimal Cantidad, decimal Monto, decimal Publicacion_Codigo, global::System.Nullable<decimal> Compra_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Factura_Nro));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Cantidad));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Monto));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Publicacion_Codigo));
            if ((Compra_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Compra_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Factura_Nro, decimal Cantidad, decimal Monto, decimal Publicacion_Codigo, global::System.Nullable<decimal> Compra_ID, decimal Original_ID, decimal Original_Factura_Nro, decimal Original_Cantidad, decimal Original_Monto, decimal Original_Publicacion_Codigo, global::System.Nullable<decimal> Original_Compra_ID, decimal ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(Factura_Nro));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Cantidad));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Monto));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Publicacion_Codigo));
            if ((Compra_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Compra_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_Factura_Nro));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_Cantidad));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_Monto));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_Publicacion_Codigo));
            if ((Original_Compra_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_Compra_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Factura_Nro, decimal Cantidad, decimal Monto, decimal Publicacion_Codigo, global::System.Nullable<decimal> Compra_ID, decimal Original_ID, decimal Original_Factura_Nro, decimal Original_Cantidad, decimal Original_Monto, decimal Original_Publicacion_Codigo, global::System.Nullable<decimal> Original_Compra_ID) {
            return this.Update(Factura_Nro, Cantidad, Monto, Publicacion_Codigo, Compra_ID, Original_ID, Original_Factura_Nro, Original_Cantidad, Original_Monto, Original_Publicacion_Codigo, Original_Compra_ID, Original_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_InsertarFacturaItem(global::System.Nullable<int> FacturaNro, global::System.Nullable<int> PendienteID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((FacturaNro.HasValue == true)) {
                command.Parameters[1].Value = ((int)(FacturaNro.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PendienteID.HasValue == true)) {
                command.Parameters[2].Value = ((int)(PendienteID.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_FuncionalidadesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_FuncionalidadesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Funcionalidades";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LOL].[tl_Funcionalidades] WHERE (([ID] = @Original_ID) AND ([Nombre]" +
                " = @Original_Nombre))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LOL].[tl_Funcionalidades] ([Nombre]) VALUES (@Nombre);\r\nSELECT ID, N" +
                "ombre FROM LOL.tl_Funcionalidades WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [LOL].[tl_Funcionalidades] SET [Nombre] = @Nombre WHERE (([ID] = @Original" +
                "_ID) AND ([Nombre] = @Original_Nombre));\r\nSELECT ID, Nombre FROM LOL.tl_Funciona" +
                "lidades WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ID, Nombre\r\nFROM         LOL.tl_Funcionalidades";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     LOL.tl_Funcionalidades.ID, LOL.tl_Funcionalidades.Nombre
FROM         LOL.tl_Funcionalidades INNER JOIN
                      LOL.tl_Roles_Funcionalidades ON LOL.tl_Funcionalidades.ID = LOL.tl_Roles_Funcionalidades.Funcionalidad_ID
WHERE     (LOL.tl_Roles_Funcionalidades.Rol_ID = @ROL_ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Rol_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_FuncionalidadesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_FuncionalidadesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_FuncionalidadesDataTable dataTable = new GD1C2014DataSet.tl_FuncionalidadesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_FuncionalidadesDataTable FuncionalidadesPorRol(decimal ROL_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(ROL_ID));
            GD1C2014DataSet.tl_FuncionalidadesDataTable dataTable = new GD1C2014DataSet.tl_FuncionalidadesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_FuncionalidadesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Funcionalidades");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, string Original_Nombre) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nombre));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Nombre) {
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Nombre));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nombre, decimal Original_ID, string Original_Nombre, decimal ID) {
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Nombre));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Original_ID));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Nombre));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nombre, decimal Original_ID, string Original_Nombre) {
            return this.Update(Nombre, Original_ID, Original_Nombre, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_OfertasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_OfertasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Ofertas";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Publicacion_Codigo", "Publicacion_Codigo");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            tableMapping.ColumnMappings.Add("Monto", "Monto");
            tableMapping.ColumnMappings.Add("Ganadora", "Ganadora");
            tableMapping.ColumnMappings.Add("Usuario_ID", "Usuario_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LOL].[tl_Ofertas] WHERE (([ID] = @Original_ID) AND ([Publicacion_Codigo] = @Original_Publicacion_Codigo) AND ([Usuario_ID] = @Original_Usuario_ID) AND ([Fecha] = @Original_Fecha) AND ([Monto] = @Original_Monto) AND ([Ganadora] = @Original_Ganadora))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Monto", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ganadora", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ganadora", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LOL].[tl_Ofertas] ([Publicacion_Codigo], [Usuario_ID], [Fecha], [Monto], [Ganadora]) VALUES (@Publicacion_Codigo, @Usuario_ID, @Fecha, @Monto, @Ganadora);
SELECT ID, Publicacion_Codigo, Usuario_ID, Fecha, Monto, Ganadora FROM LOL.tl_Ofertas WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Monto", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ganadora", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ganadora", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Ofertas] SET [Publicacion_Codigo] = @Publicacion_Codigo, [Usuario_ID] = @Usuario_ID, [Fecha] = @Fecha, [Monto] = @Monto, [Ganadora] = @Ganadora WHERE (([ID] = @Original_ID) AND ([Publicacion_Codigo] = @Original_Publicacion_Codigo) AND ([Usuario_ID] = @Original_Usuario_ID) AND ([Fecha] = @Original_Fecha) AND ([Monto] = @Original_Monto) AND ([Ganadora] = @Original_Ganadora));
SELECT ID, Publicacion_Codigo, Usuario_ID, Fecha, Monto, Ganadora FROM LOL.tl_Ofertas WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Monto", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ganadora", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ganadora", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Monto", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ganadora", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ganadora", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ID, Publicacion_Codigo, Usuario_ID, Fecha, Monto, Ganadora\r\nFROM      " +
                "   LOL.tl_Ofertas";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     MAX(Monto) AS MaxOferta\r\nFROM         LOL.tl_Ofertas AS O\r\nGROUP BY Pu" +
                "blicacion_Codigo\r\nHAVING      (Publicacion_Codigo = @Publicacion_Codigo)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "LOL.sp_crearOferta";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Monto", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_OfertasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_OfertasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_OfertasDataTable dataTable = new GD1C2014DataSet.tl_OfertasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_OfertasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Ofertas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, decimal Original_Publicacion_Codigo, decimal Original_Usuario_ID, System.DateTime Original_Fecha, decimal Original_Monto, bool Original_Ganadora) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_Publicacion_Codigo));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Usuario_ID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Fecha));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_Monto));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_Ganadora));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal Publicacion_Codigo, decimal Usuario_ID, System.DateTime Fecha, decimal Monto, bool Ganadora) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Publicacion_Codigo));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Usuario_ID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Fecha));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Monto));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Ganadora));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Publicacion_Codigo, decimal Usuario_ID, System.DateTime Fecha, decimal Monto, bool Ganadora, decimal Original_ID, decimal Original_Publicacion_Codigo, decimal Original_Usuario_ID, System.DateTime Original_Fecha, decimal Original_Monto, bool Original_Ganadora, decimal ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(Publicacion_Codigo));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Usuario_ID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Fecha));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Monto));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Ganadora));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_Publicacion_Codigo));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_Usuario_ID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_Fecha));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_Monto));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_Ganadora));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Publicacion_Codigo, decimal Usuario_ID, System.DateTime Fecha, decimal Monto, bool Ganadora, decimal Original_ID, decimal Original_Publicacion_Codigo, decimal Original_Usuario_ID, System.DateTime Original_Fecha, decimal Original_Monto, bool Original_Ganadora) {
            return this.Update(Publicacion_Codigo, Usuario_ID, Fecha, Monto, Ganadora, Original_ID, Original_Publicacion_Codigo, Original_Usuario_ID, Original_Fecha, Original_Monto, Original_Ganadora, Original_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> getOfertaMaximaByCodigo(decimal Publicacion_Codigo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((decimal)(Publicacion_Codigo));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_crearOferta(global::System.Nullable<int> Publicacion_Codigo, global::System.Nullable<int> Usuario_ID, global::System.Nullable<global::System.DateTime> fecha, global::System.Nullable<decimal> Monto) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Publicacion_Codigo.HasValue == true)) {
                command.Parameters[1].Value = ((int)(Publicacion_Codigo.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Usuario_ID.HasValue == true)) {
                command.Parameters[2].Value = ((int)(Usuario_ID.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((fecha.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(fecha.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Monto.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(Monto.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_PendientesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_PendientesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Pendientes";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            tableMapping.ColumnMappings.Add("Monto", "Monto");
            tableMapping.ColumnMappings.Add("Publicacion_Codigo", "Publicacion_Codigo");
            tableMapping.ColumnMappings.Add("Compra_ID", "Compra_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LOL].[tl_Pendientes] WHERE (([ID] = @Original_ID) AND ([Fecha] = @Original_Fecha) AND ([Monto] = @Original_Monto) AND ([Publicacion_Codigo] = @Original_Publicacion_Codigo) AND ((@IsNull_Compra_ID = 1 AND [Compra_ID] IS NULL) OR ([Compra_ID] = @Original_Compra_ID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Monto", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compra_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compra_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compra_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Compra_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LOL].[tl_Pendientes] ([Fecha], [Monto], [Publicacion_Codigo], [Compr" +
                "a_ID]) VALUES (@Fecha, @Monto, @Publicacion_Codigo, @Compra_ID);\r\nSELECT ID, Fec" +
                "ha, Monto, Publicacion_Codigo, Compra_ID FROM LOL.tl_Pendientes WHERE (ID = SCOP" +
                "E_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Monto", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compra_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Compra_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Pendientes] SET [Fecha] = @Fecha, [Monto] = @Monto, [Publicacion_Codigo] = @Publicacion_Codigo, [Compra_ID] = @Compra_ID WHERE (([ID] = @Original_ID) AND ([Fecha] = @Original_Fecha) AND ([Monto] = @Original_Monto) AND ([Publicacion_Codigo] = @Original_Publicacion_Codigo) AND ((@IsNull_Compra_ID = 1 AND [Compra_ID] IS NULL) OR ([Compra_ID] = @Original_Compra_ID)));
SELECT ID, Fecha, Monto, Publicacion_Codigo, Compra_ID FROM LOL.tl_Pendientes WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Monto", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compra_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Compra_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Monto", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Compra_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Compra_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compra_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Compra_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ID, Fecha, Monto, Publicacion_Codigo, Compra_ID\r\nFROM         LOL.tl_P" +
                "endientes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     LOL.tl_Pendientes.Compra_ID, LOL.tl_Pendientes.Fecha, LOL.tl_Pendientes.ID, LOL.tl_Pendientes.Monto, LOL.tl_Pendientes.Publicacion_Codigo
FROM         LOL.tl_Publicaciones INNER JOIN
                      LOL.tl_Pendientes ON LOL.tl_Publicaciones.Codigo = LOL.tl_Pendientes.Publicacion_Codigo
WHERE     (LOL.tl_Publicaciones.Usuario_ID = @Usuario_ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_PendientesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_PendientesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_PendientesDataTable dataTable = new GD1C2014DataSet.tl_PendientesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_PendientesDataTable getByUsuarioID(decimal Usuario_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(Usuario_ID));
            GD1C2014DataSet.tl_PendientesDataTable dataTable = new GD1C2014DataSet.tl_PendientesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_PendientesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Pendientes");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, System.DateTime Original_Fecha, decimal Original_Monto, decimal Original_Publicacion_Codigo, global::System.Nullable<decimal> Original_Compra_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Fecha));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Monto));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Publicacion_Codigo));
            if ((Original_Compra_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_Compra_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Fecha, decimal Monto, decimal Publicacion_Codigo, global::System.Nullable<decimal> Compra_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Fecha));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Monto));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Publicacion_Codigo));
            if ((Compra_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Compra_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Fecha, decimal Monto, decimal Publicacion_Codigo, global::System.Nullable<decimal> Compra_ID, decimal Original_ID, System.DateTime Original_Fecha, decimal Original_Monto, decimal Original_Publicacion_Codigo, global::System.Nullable<decimal> Original_Compra_ID, decimal ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Fecha));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Monto));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Publicacion_Codigo));
            if ((Compra_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Compra_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_Fecha));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_Monto));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_Publicacion_Codigo));
            if ((Original_Compra_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_Compra_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Fecha, decimal Monto, decimal Publicacion_Codigo, global::System.Nullable<decimal> Compra_ID, decimal Original_ID, System.DateTime Original_Fecha, decimal Original_Monto, decimal Original_Publicacion_Codigo, global::System.Nullable<decimal> Original_Compra_ID) {
            return this.Update(Fecha, Monto, Publicacion_Codigo, Compra_ID, Original_ID, Original_Fecha, Original_Monto, Original_Publicacion_Codigo, Original_Compra_ID, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_PreguntasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_PreguntasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Preguntas";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Publicacion_Codigo", "Publicacion_Codigo");
            tableMapping.ColumnMappings.Add("Pregunta", "Pregunta");
            tableMapping.ColumnMappings.Add("Fecha_Respuesta", "Fecha_Respuesta");
            tableMapping.ColumnMappings.Add("Respuesta", "Respuesta");
            tableMapping.ColumnMappings.Add("Usuario_ID", "Usuario_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LOL].[tl_Preguntas] WHERE (([ID] = @Original_ID) AND ([Publicacion_Codigo] = @Original_Publicacion_Codigo) AND ([Usuario_ID] = @Original_Usuario_ID) AND ([Pregunta] = @Original_Pregunta) AND ((@IsNull_Fecha_Respuesta = 1 AND [Fecha_Respuesta] IS NULL) OR ([Fecha_Respuesta] = @Original_Fecha_Respuesta)) AND ((@IsNull_Respuesta = 1 AND [Respuesta] IS NULL) OR ([Respuesta] = @Original_Respuesta)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pregunta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregunta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fecha_Respuesta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Respuesta", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_Respuesta", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Respuesta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Respuesta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Respuesta", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Respuesta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Respuesta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LOL].[tl_Preguntas] ([Publicacion_Codigo], [Usuario_ID], [Pregunta], [Fecha_Respuesta], [Respuesta]) VALUES (@Publicacion_Codigo, @Usuario_ID, @Pregunta, @Fecha_Respuesta, @Respuesta);
SELECT ID, Publicacion_Codigo, Usuario_ID, Pregunta, Fecha_Respuesta, Respuesta FROM LOL.tl_Preguntas WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pregunta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregunta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Respuesta", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Respuesta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Respuesta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Respuesta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Preguntas] SET [Publicacion_Codigo] = @Publicacion_Codigo, [Usuario_ID] = @Usuario_ID, [Pregunta] = @Pregunta, [Fecha_Respuesta] = @Fecha_Respuesta, [Respuesta] = @Respuesta WHERE (([ID] = @Original_ID) AND ([Publicacion_Codigo] = @Original_Publicacion_Codigo) AND ([Usuario_ID] = @Original_Usuario_ID) AND ([Pregunta] = @Original_Pregunta) AND ((@IsNull_Fecha_Respuesta = 1 AND [Fecha_Respuesta] IS NULL) OR ([Fecha_Respuesta] = @Original_Fecha_Respuesta)) AND ((@IsNull_Respuesta = 1 AND [Respuesta] IS NULL) OR ([Respuesta] = @Original_Respuesta)));
SELECT ID, Publicacion_Codigo, Usuario_ID, Pregunta, Fecha_Respuesta, Respuesta FROM LOL.tl_Preguntas WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pregunta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregunta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Respuesta", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Respuesta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Respuesta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Respuesta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pregunta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregunta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fecha_Respuesta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Respuesta", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_Respuesta", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Respuesta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Respuesta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Respuesta", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Respuesta", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Respuesta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ID, Publicacion_Codigo, Usuario_ID, Pregunta, Fecha_Respuesta, Respues" +
                "ta\r\nFROM         LOL.tl_Preguntas";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     Pr.ID, Pr.Publicacion_Codigo, Pr.Usuario_ID, Pr.Pregunta, Pr.Fecha_Respuesta, Pr.Respuesta
FROM         LOL.tl_Preguntas AS Pr INNER JOIN
                      LOL.tl_Publicaciones AS Pu ON Pr.Publicacion_Codigo = Pu.Codigo
WHERE     (Pr.Fecha_Respuesta IS NULL) AND (Pu.Usuario_ID = @Usuario_ID)
ORDER BY Pr.Publicacion_Codigo, Pr.Fecha_Respuesta";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     ID, Pr.Publicacion_Codigo, Pr.Usuario_ID, Pregunta, Fecha_Respuesta, Respuesta
FROM         LOL.tl_Preguntas Pr INNER JOIN LOL.tl_Publicaciones Pu ON (Pr.Publicacion_Codigo = Pu.Codigo)
WHERE  Pr.Fecha_Respuesta IS NOT NULL AND Pu.Usuario_ID = @Usuario_ID";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE    LOL.tl_Preguntas\r\nSET              Fecha_Respuesta = @Fecha_Respuesta, " +
                "Respuesta = @Respuesta\r\nWHERE     (ID = @ID)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Respuesta", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Respuesta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Respuesta", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Respuesta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_PreguntasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_PreguntasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_PreguntasDataTable dataTable = new GD1C2014DataSet.tl_PreguntasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_PreguntasDataTable GetParaResponder(decimal Usuario_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(Usuario_ID));
            GD1C2014DataSet.tl_PreguntasDataTable dataTable = new GD1C2014DataSet.tl_PreguntasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_PreguntasDataTable GetPreguntasWhitRespuesta(decimal Usuario_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(Usuario_ID));
            GD1C2014DataSet.tl_PreguntasDataTable dataTable = new GD1C2014DataSet.tl_PreguntasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_PreguntasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Preguntas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, decimal Original_Publicacion_Codigo, decimal Original_Usuario_ID, string Original_Pregunta, global::System.Nullable<global::System.DateTime> Original_Fecha_Respuesta, string Original_Respuesta) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_Publicacion_Codigo));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Usuario_ID));
            if ((Original_Pregunta == null)) {
                throw new global::System.ArgumentNullException("Original_Pregunta");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Pregunta));
            }
            if ((Original_Fecha_Respuesta.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Fecha_Respuesta.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_Respuesta == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Respuesta));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal Publicacion_Codigo, decimal Usuario_ID, string Pregunta, global::System.Nullable<global::System.DateTime> Fecha_Respuesta, string Respuesta) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Publicacion_Codigo));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Usuario_ID));
            if ((Pregunta == null)) {
                throw new global::System.ArgumentNullException("Pregunta");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Pregunta));
            }
            if ((Fecha_Respuesta.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Fecha_Respuesta.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Respuesta == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Respuesta));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Publicacion_Codigo, decimal Usuario_ID, string Pregunta, global::System.Nullable<global::System.DateTime> Fecha_Respuesta, string Respuesta, decimal Original_ID, decimal Original_Publicacion_Codigo, decimal Original_Usuario_ID, string Original_Pregunta, global::System.Nullable<global::System.DateTime> Original_Fecha_Respuesta, string Original_Respuesta, decimal ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(Publicacion_Codigo));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Usuario_ID));
            if ((Pregunta == null)) {
                throw new global::System.ArgumentNullException("Pregunta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Pregunta));
            }
            if ((Fecha_Respuesta.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Fecha_Respuesta.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Respuesta == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Respuesta));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_Publicacion_Codigo));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_Usuario_ID));
            if ((Original_Pregunta == null)) {
                throw new global::System.ArgumentNullException("Original_Pregunta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Pregunta));
            }
            if ((Original_Fecha_Respuesta.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_Fecha_Respuesta.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Respuesta == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Respuesta));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Publicacion_Codigo, decimal Usuario_ID, string Pregunta, global::System.Nullable<global::System.DateTime> Fecha_Respuesta, string Respuesta, decimal Original_ID, decimal Original_Publicacion_Codigo, decimal Original_Usuario_ID, string Original_Pregunta, global::System.Nullable<global::System.DateTime> Original_Fecha_Respuesta, string Original_Respuesta) {
            return this.Update(Publicacion_Codigo, Usuario_ID, Pregunta, Fecha_Respuesta, Respuesta, Original_ID, Original_Publicacion_Codigo, Original_Usuario_ID, Original_Pregunta, Original_Fecha_Respuesta, Original_Respuesta, Original_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int guardarRespuesta(string Fecha_Respuesta, string Respuesta, decimal ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((Fecha_Respuesta == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Fecha_Respuesta));
            }
            if ((Respuesta == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Respuesta));
            }
            command.Parameters[2].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_PublicacionesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_PublicacionesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Publicaciones";
            tableMapping.ColumnMappings.Add("Codigo", "Codigo");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            tableMapping.ColumnMappings.Add("Stock", "Stock");
            tableMapping.ColumnMappings.Add("Fecha_Vencimiento", "Fecha_Vencimiento");
            tableMapping.ColumnMappings.Add("Precio", "Precio");
            tableMapping.ColumnMappings.Add("Visibilidad_Codigo", "Visibilidad_Codigo");
            tableMapping.ColumnMappings.Add("Permite_Preguntas", "Permite_Preguntas");
            tableMapping.ColumnMappings.Add("Usuario_ID", "Usuario_ID");
            tableMapping.ColumnMappings.Add("Tipo_ID", "Tipo_ID");
            tableMapping.ColumnMappings.Add("Estado_ID", "Estado_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LOL].[tl_Publicaciones] WHERE (([Codigo] = @Original_Codigo) AND ([Usuario_ID] = @Original_Usuario_ID) AND ([Descripcion] = @Original_Descripcion) AND ([Fecha] = @Original_Fecha) AND ([Stock] = @Original_Stock) AND ([Fecha_Vencimiento] = @Original_Fecha_Vencimiento) AND ([Precio] = @Original_Precio) AND ([Tipo_ID] = @Original_Tipo_ID) AND ([Visibilidad_Codigo] = @Original_Visibilidad_Codigo) AND ([Estado_ID] = @Original_Estado_ID) AND ([Permite_Preguntas] = @Original_Permite_Preguntas))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stock", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Stock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_Vencimiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Vencimiento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Precio", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Precio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tipo_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Tipo_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Visibilidad_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Visibilidad_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Estado_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Estado_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Permite_Preguntas", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Permite_Preguntas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LOL].[tl_Publicaciones] ([Usuario_ID], [Descripcion], [Fecha], [Stock], [Fecha_Vencimiento], [Precio], [Tipo_ID], [Visibilidad_Codigo], [Estado_ID], [Permite_Preguntas]) VALUES (@Usuario_ID, @Descripcion, @Fecha, @Stock, @Fecha_Vencimiento, @Precio, @Tipo_ID, @Visibilidad_Codigo, @Estado_ID, @Permite_Preguntas);
SELECT Codigo, Usuario_ID, Descripcion, Fecha, Stock, Fecha_Vencimiento, Precio, Tipo_ID, Visibilidad_Codigo, Estado_ID, Permite_Preguntas FROM LOL.tl_Publicaciones WHERE (Codigo = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stock", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Stock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Vencimiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Vencimiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Precio", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Precio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Tipo_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Visibilidad_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Visibilidad_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estado_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Estado_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Permite_Preguntas", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Permite_Preguntas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Publicaciones] SET [Usuario_ID] = @Usuario_ID, [Descripcion] = @Descripcion, [Fecha] = @Fecha, [Stock] = @Stock, [Fecha_Vencimiento] = @Fecha_Vencimiento, [Precio] = @Precio, [Tipo_ID] = @Tipo_ID, [Visibilidad_Codigo] = @Visibilidad_Codigo, [Estado_ID] = @Estado_ID, [Permite_Preguntas] = @Permite_Preguntas WHERE (([Codigo] = @Original_Codigo) AND ([Usuario_ID] = @Original_Usuario_ID) AND ([Descripcion] = @Original_Descripcion) AND ([Fecha] = @Original_Fecha) AND ([Stock] = @Original_Stock) AND ([Fecha_Vencimiento] = @Original_Fecha_Vencimiento) AND ([Precio] = @Original_Precio) AND ([Tipo_ID] = @Original_Tipo_ID) AND ([Visibilidad_Codigo] = @Original_Visibilidad_Codigo) AND ([Estado_ID] = @Original_Estado_ID) AND ([Permite_Preguntas] = @Original_Permite_Preguntas));
SELECT Codigo, Usuario_ID, Descripcion, Fecha, Stock, Fecha_Vencimiento, Precio, Tipo_ID, Visibilidad_Codigo, Estado_ID, Permite_Preguntas FROM LOL.tl_Publicaciones WHERE (Codigo = @Codigo)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stock", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Stock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Vencimiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Vencimiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Precio", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Precio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Tipo_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Visibilidad_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Visibilidad_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estado_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Estado_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Permite_Preguntas", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Permite_Preguntas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stock", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Stock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_Vencimiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Vencimiento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Precio", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Precio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tipo_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Tipo_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Visibilidad_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Visibilidad_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Estado_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Estado_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Permite_Preguntas", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Permite_Preguntas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[8];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Codigo, Usuario_ID, Descripcion, Fecha, Stock, Fecha_Vencimiento, Prec" +
                "io, Tipo_ID, Visibilidad_Codigo, Estado_ID, Permite_Preguntas\r\nFROM         LOL." +
                "tl_Publicaciones";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT Codigo, Descripcion, Estado_ID, Fecha, Fecha_Vencimiento, Permite_Pregunta" +
                "s, Precio, Stock, Tipo_ID, Usuario_ID, Visibilidad_Codigo FROM LOL.tl_Publicacio" +
                "nes WHERE (Codigo = @Codigo)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT DISTINCT 
                      P.Codigo, P.Usuario_ID, P.Descripcion, P.Fecha, P.Stock, P.Fecha_Vencimiento, P.Precio, P.Tipo_ID, P.Visibilidad_Codigo, P.Estado_ID, 
                      P.Permite_Preguntas
FROM         LOL.tl_Publicaciones AS P INNER JOIN
                      LOL.tl_Publicaciones_Rubros AS PR ON P.Codigo = PR.Publicacion_Codigo INNER JOIN
                      LOL.tl_Visibilidades AS V ON P.Visibilidad_Codigo = V.Codigo INNER JOIN
                      LOL.tl_Publicacion_Estados AS E ON P.Estado_ID = E.ID
WHERE     (P.Descripcion LIKE @Descripcion) AND (PR.Rubro_ID = @Rubro) AND (E.Estado NOT IN ('Borrador', 'Finalizada'))";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rubro", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Rubro_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT DISTINCT 
                      P.Codigo, P.Usuario_ID, P.Descripcion, P.Fecha, P.Stock, P.Fecha_Vencimiento, P.Precio, T.Tipo, P.Visibilidad_Codigo, E.Estado, P.Permite_Preguntas, 
                      V.Precio AS Expr1
FROM         LOL.tl_Publicaciones AS P INNER JOIN
                      LOL.tl_Publicaciones_Rubros AS PR ON P.Codigo = PR.Publicacion_Codigo INNER JOIN
                      LOL.tl_Visibilidades AS V ON P.Visibilidad_Codigo = V.Codigo INNER JOIN
                      LOL.tl_Publicacion_Tipos AS T ON P.Tipo_ID = T.ID INNER JOIN
                      LOL.tl_Publicacion_Estados AS E ON P.Estado_ID = E.ID
WHERE     (P.Usuario_ID = @ID)
ORDER BY Expr1 DESC";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "LOL.sp_Paginador";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Offset", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Limit", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Table", global::System.Data.SqlDbType.Structured, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT COUNT(*) FROM LOL.tl_Publicaciones";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "LOL.sp_CrearPublicacion";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@descripcion", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stock", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha_vencimiento", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@precio", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tipo_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@visibilidad_Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@estado_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@permite_Preguntas", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaPendiente", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@monto", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "LOL.sp_editarPublicacion";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stock", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Vencimiento", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@precio", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tipo_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@visibilidad_Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estado_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@preguntas", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_PublicacionesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_PublicacionesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_PublicacionesDataTable dataTable = new GD1C2014DataSet.tl_PublicacionesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCode(GD1C2014DataSet.tl_PublicacionesDataTable dataTable, decimal Codigo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(Codigo));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_PublicacionesDataTable GetDataByCode(decimal Codigo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(Codigo));
            GD1C2014DataSet.tl_PublicacionesDataTable dataTable = new GD1C2014DataSet.tl_PublicacionesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFilter(GD1C2014DataSet.tl_PublicacionesDataTable dataTable, string Descripcion, decimal Rubro) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(Rubro));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIDAndVisibilidad(GD1C2014DataSet.tl_PublicacionesDataTable dataTable, decimal ID) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(ID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_PublicacionesDataTable GetDataByIDAndVisibilidad(decimal ID) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(ID));
            GD1C2014DataSet.tl_PublicacionesDataTable dataTable = new GD1C2014DataSet.tl_PublicacionesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_PublicacionesDataTable GetDataByPaginador(global::System.Nullable<int> Offset, global::System.Nullable<int> Limit, object Table) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((Offset.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Offset.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Limit.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(Limit.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Table == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((object)(Table));
            }
            GD1C2014DataSet.tl_PublicacionesDataTable dataTable = new GD1C2014DataSet.tl_PublicacionesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_PublicacionesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Publicaciones");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_Codigo, decimal Original_Usuario_ID, string Original_Descripcion, System.DateTime Original_Fecha, decimal Original_Stock, System.DateTime Original_Fecha_Vencimiento, decimal Original_Precio, decimal Original_Tipo_ID, decimal Original_Visibilidad_Codigo, decimal Original_Estado_ID, bool Original_Permite_Preguntas) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_Codigo));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_Usuario_ID));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Fecha));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_Stock));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Fecha_Vencimiento));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Precio));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_Tipo_ID));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_Visibilidad_Codigo));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_Estado_ID));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_Permite_Preguntas));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal Usuario_ID, string Descripcion, System.DateTime Fecha, decimal Stock, System.DateTime Fecha_Vencimiento, decimal Precio, decimal Tipo_ID, decimal Visibilidad_Codigo, decimal Estado_ID, bool Permite_Preguntas) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Usuario_ID));
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Descripcion));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Fecha));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Stock));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Fecha_Vencimiento));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Precio));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(Tipo_ID));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(Visibilidad_Codigo));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(Estado_ID));
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(Permite_Preguntas));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal Usuario_ID, 
                    string Descripcion, 
                    System.DateTime Fecha, 
                    decimal Stock, 
                    System.DateTime Fecha_Vencimiento, 
                    decimal Precio, 
                    decimal Tipo_ID, 
                    decimal Visibilidad_Codigo, 
                    decimal Estado_ID, 
                    bool Permite_Preguntas, 
                    decimal Original_Codigo, 
                    decimal Original_Usuario_ID, 
                    string Original_Descripcion, 
                    System.DateTime Original_Fecha, 
                    decimal Original_Stock, 
                    System.DateTime Original_Fecha_Vencimiento, 
                    decimal Original_Precio, 
                    decimal Original_Tipo_ID, 
                    decimal Original_Visibilidad_Codigo, 
                    decimal Original_Estado_ID, 
                    bool Original_Permite_Preguntas, 
                    decimal Codigo) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(Usuario_ID));
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Fecha));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Stock));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Fecha_Vencimiento));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Precio));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Tipo_ID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Visibilidad_Codigo));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Estado_ID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Permite_Preguntas));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_Codigo));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_Usuario_ID));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_Fecha));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_Stock));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_Fecha_Vencimiento));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_Precio));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_Tipo_ID));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_Visibilidad_Codigo));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_Estado_ID));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(Original_Permite_Preguntas));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Codigo));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal Usuario_ID, 
                    string Descripcion, 
                    System.DateTime Fecha, 
                    decimal Stock, 
                    System.DateTime Fecha_Vencimiento, 
                    decimal Precio, 
                    decimal Tipo_ID, 
                    decimal Visibilidad_Codigo, 
                    decimal Estado_ID, 
                    bool Permite_Preguntas, 
                    decimal Original_Codigo, 
                    decimal Original_Usuario_ID, 
                    string Original_Descripcion, 
                    System.DateTime Original_Fecha, 
                    decimal Original_Stock, 
                    System.DateTime Original_Fecha_Vencimiento, 
                    decimal Original_Precio, 
                    decimal Original_Tipo_ID, 
                    decimal Original_Visibilidad_Codigo, 
                    decimal Original_Estado_ID, 
                    bool Original_Permite_Preguntas) {
            return this.Update(Usuario_ID, Descripcion, Fecha, Stock, Fecha_Vencimiento, Precio, Tipo_ID, Visibilidad_Codigo, Estado_ID, Permite_Preguntas, Original_Codigo, Original_Usuario_ID, Original_Descripcion, Original_Fecha, Original_Stock, Original_Fecha_Vencimiento, Original_Precio, Original_Tipo_ID, Original_Visibilidad_Codigo, Original_Estado_ID, Original_Permite_Preguntas, Original_Codigo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> qtyRegistros() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_CrearPublicacion(global::System.Nullable<int> Usuario_ID, string descripcion, global::System.Nullable<global::System.DateTime> fecha, global::System.Nullable<decimal> stock, global::System.Nullable<global::System.DateTime> fecha_vencimiento, global::System.Nullable<decimal> precio, global::System.Nullable<int> tipo_ID, global::System.Nullable<decimal> visibilidad_Codigo, global::System.Nullable<int> estado_ID, global::System.Nullable<bool> permite_Preguntas, ref global::System.Nullable<int> ID, global::System.Nullable<global::System.DateTime> fechaPendiente, global::System.Nullable<decimal> monto) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[6];
            if ((Usuario_ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(Usuario_ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((descripcion == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(descripcion));
            }
            if ((fecha.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(fecha.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((stock.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(stock.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((fecha_vencimiento.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(fecha_vencimiento.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((precio.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(precio.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((tipo_ID.HasValue == true)) {
                command.Parameters[7].Value = ((int)(tipo_ID.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((visibilidad_Codigo.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(visibilidad_Codigo.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((estado_ID.HasValue == true)) {
                command.Parameters[9].Value = ((int)(estado_ID.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((permite_Preguntas.HasValue == true)) {
                command.Parameters[10].Value = ((bool)(permite_Preguntas.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ID.HasValue == true)) {
                command.Parameters[11].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((fechaPendiente.HasValue == true)) {
                command.Parameters[12].Value = ((System.DateTime)(fechaPendiente.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((monto.HasValue == true)) {
                command.Parameters[13].Value = ((decimal)(monto.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((command.Parameters[11].Value == null) 
                        || (command.Parameters[11].Value.GetType() == typeof(global::System.DBNull)))) {
                ID = new global::System.Nullable<int>();
            }
            else {
                ID = new global::System.Nullable<int>(((int)(command.Parameters[11].Value)));
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_editarPublicacion(global::System.Nullable<int> Publicacion_Codigo, string Descripcion, global::System.Nullable<global::System.DateTime> Fecha, global::System.Nullable<decimal> stock, global::System.Nullable<global::System.DateTime> Fecha_Vencimiento, global::System.Nullable<decimal> precio, global::System.Nullable<int> tipo_ID, global::System.Nullable<decimal> visibilidad_Codigo, global::System.Nullable<int> Estado_ID, global::System.Nullable<bool> preguntas) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[7];
            if ((Publicacion_Codigo.HasValue == true)) {
                command.Parameters[1].Value = ((int)(Publicacion_Codigo.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Descripcion == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Descripcion));
            }
            if ((Fecha.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(Fecha.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((stock.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(stock.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Fecha_Vencimiento.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(Fecha_Vencimiento.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((precio.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(precio.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((tipo_ID.HasValue == true)) {
                command.Parameters[7].Value = ((int)(tipo_ID.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((visibilidad_Codigo.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(visibilidad_Codigo.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Estado_ID.HasValue == true)) {
                command.Parameters[9].Value = ((int)(Estado_ID.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((preguntas.HasValue == true)) {
                command.Parameters[10].Value = ((bool)(preguntas.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_Publicaciones_RubrosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_Publicaciones_RubrosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Publicaciones_Rubros";
            tableMapping.ColumnMappings.Add("Publicacion_Codigo", "Publicacion_Codigo");
            tableMapping.ColumnMappings.Add("Rubro_ID", "Rubro_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LOL].[tl_Publicaciones_Rubros] WHERE (([Publicacion_Codigo] = @Origi" +
                "nal_Publicacion_Codigo) AND ([Rubro_ID] = @Original_Rubro_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rubro_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Rubro_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LOL].[tl_Publicaciones_Rubros] ([Publicacion_Codigo], [Rubro_ID]) VALUES (@Publicacion_Codigo, @Rubro_ID);
SELECT Publicacion_Codigo, Rubro_ID FROM LOL.tl_Publicaciones_Rubros WHERE (Publicacion_Codigo = @Publicacion_Codigo) AND (Rubro_ID = @Rubro_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rubro_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Rubro_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Publicaciones_Rubros] SET [Publicacion_Codigo] = @Publicacion_Codigo, [Rubro_ID] = @Rubro_ID WHERE (([Publicacion_Codigo] = @Original_Publicacion_Codigo) AND ([Rubro_ID] = @Original_Rubro_ID));
SELECT Publicacion_Codigo, Rubro_ID FROM LOL.tl_Publicaciones_Rubros WHERE (Publicacion_Codigo = @Publicacion_Codigo) AND (Rubro_ID = @Rubro_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rubro_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Rubro_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rubro_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Rubro_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Publicacion_Codigo, Rubro_ID\r\nFROM         LOL.tl_Publicaciones_Rubros" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM [LOL].[tl_Publicaciones_Rubros] WHERE (([Publicacion_Codigo] = @Origi" +
                "nal_Publicacion_Codigo))";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT Publicacion_Codigo, Rubro_ID FROM LOL.tl_Publicaciones_Rubros WHERE (Publi" +
                "cacion_Codigo = @Publicacion_Codigo)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Publicacion_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "LOL.sp_InsertPublicacionRubro";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Publicacion_Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rubro_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_Publicaciones_RubrosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_Publicaciones_RubrosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_Publicaciones_RubrosDataTable dataTable = new GD1C2014DataSet.tl_Publicaciones_RubrosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_Publicaciones_RubrosDataTable getDataByPublicacionCodigo(decimal Publicacion_Codigo) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(Publicacion_Codigo));
            GD1C2014DataSet.tl_Publicaciones_RubrosDataTable dataTable = new GD1C2014DataSet.tl_Publicaciones_RubrosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_Publicaciones_RubrosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Publicaciones_Rubros");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_Publicacion_Codigo, decimal Original_Rubro_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_Publicacion_Codigo));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_Rubro_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal Publicacion_Codigo, decimal Rubro_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Publicacion_Codigo));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Rubro_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Publicacion_Codigo, decimal Rubro_ID, decimal Original_Publicacion_Codigo, decimal Original_Rubro_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(Publicacion_Codigo));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Rubro_ID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_Publicacion_Codigo));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_Rubro_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Original_Publicacion_Codigo, decimal Original_Rubro_ID) {
            return this.Update(Original_Publicacion_Codigo, Original_Rubro_ID, Original_Publicacion_Codigo, Original_Rubro_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeletePorPublicacion(decimal Original_Publicacion_Codigo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((decimal)(Original_Publicacion_Codigo));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_InsertPublicacionRubro(global::System.Nullable<decimal> Publicacion_Codigo, global::System.Nullable<decimal> Rubro_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((Publicacion_Codigo.HasValue == true)) {
                command.Parameters[1].Value = ((decimal)(Publicacion_Codigo.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Rubro_ID.HasValue == true)) {
                command.Parameters[2].Value = ((decimal)(Rubro_ID.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_RolesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_RolesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Roles";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("Habilitado", "Habilitado");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LOL].[tl_Roles] WHERE (([ID] = @Original_ID) AND ([Nombre] = @Origin" +
                "al_Nombre) AND ([Habilitado] = @Original_Habilitado))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LOL].[tl_Roles] ([Nombre], [Habilitado]) VALUES (@Nombre, @Habilitad" +
                "o);\r\nSELECT ID, Nombre, Habilitado FROM LOL.tl_Roles WHERE (ID = SCOPE_IDENTITY(" +
                "))";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [LOL].[tl_Roles] SET [Nombre] = @Nombre, [Habilitado] = @Habilitado WHERE " +
                "(([ID] = @Original_ID) AND ([Nombre] = @Original_Nombre) AND ([Habilitado] = @Or" +
                "iginal_Habilitado));\r\nSELECT ID, Nombre, Habilitado FROM LOL.tl_Roles WHERE (ID " +
                "= @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Nombre, Habilitado FROM LOL.tl_Roles";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     ID, Nombre, Habilitado\r\nFROM         LOL.tl_Roles\r\nWHERE     (ID = @Ro" +
                "lID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RolID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     LOL.tl_Roles.Nombre, LOL.tl_Roles.ID, LOL.tl_Roles.Habilitado
FROM         LOL.tl_Roles INNER JOIN
                      LOL.tl_Usuarios_Roles ON LOL.tl_Roles.ID = LOL.tl_Usuarios_Roles.Rol_ID
WHERE     (LOL.tl_Usuarios_Roles.Usuario_ID = @user_ID) AND (LOL.tl_Usuarios_Roles.Habilitado = 1)
ORDER BY LOL.tl_Roles.Nombre";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "INSERT INTO [LOL].[tl_Roles] ([Nombre], [Habilitado]) VALUES (@Nombre, @Habilitad" +
                "o);\r\nSELECT @@IDENTITY;";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_RolesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_RolesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_RolesDataTable dataTable = new GD1C2014DataSet.tl_RolesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_RolesDataTable getByID(decimal RolID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(RolID));
            GD1C2014DataSet.tl_RolesDataTable dataTable = new GD1C2014DataSet.tl_RolesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int getRolesPorUsuarioID(GD1C2014DataSet.tl_RolesDataTable dataTable, decimal user_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(user_ID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_RolesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Roles");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, string Original_Nombre, bool Original_Habilitado) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nombre));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_Habilitado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Nombre, bool Habilitado) {
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Nombre));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(Habilitado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nombre, bool Habilitado, decimal Original_ID, string Original_Nombre, bool Original_Habilitado, decimal ID) {
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Nombre));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(Habilitado));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_ID));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Nombre));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Original_Habilitado));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nombre, bool Habilitado, decimal Original_ID, string Original_Nombre, bool Original_Habilitado) {
            return this.Update(Nombre, Habilitado, Original_ID, Original_Nombre, Original_Habilitado, Original_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual object InsertAndGetId(string Nombre, bool Habilitado) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                command.Parameters[0].Value = ((string)(Nombre));
            }
            command.Parameters[1].Value = ((bool)(Habilitado));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_Roles_FuncionalidadesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_Roles_FuncionalidadesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Roles_Funcionalidades";
            tableMapping.ColumnMappings.Add("Rol_ID", "Rol_ID");
            tableMapping.ColumnMappings.Add("Funcionalidad_ID", "Funcionalidad_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LOL].[tl_Roles_Funcionalidades] WHERE (([Rol_ID] = @Original_Rol_ID)" +
                " AND ([Funcionalidad_ID] = @Original_Funcionalidad_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rol_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Rol_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Funcionalidad_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Funcionalidad_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LOL].[tl_Roles_Funcionalidades] ([Rol_ID], [Funcionalidad_ID]) VALUE" +
                "S (@Rol_ID, @Funcionalidad_ID);\r\nSELECT Rol_ID, Funcionalidad_ID FROM LOL.tl_Rol" +
                "es_Funcionalidades WHERE (Funcionalidad_ID = @Funcionalidad_ID) AND (Rol_ID = @R" +
                "ol_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rol_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Rol_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Funcionalidad_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Funcionalidad_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Roles_Funcionalidades] SET [Rol_ID] = @Rol_ID, [Funcionalidad_ID] = @Funcionalidad_ID WHERE (([Rol_ID] = @Original_Rol_ID) AND ([Funcionalidad_ID] = @Original_Funcionalidad_ID));
SELECT Rol_ID, Funcionalidad_ID FROM LOL.tl_Roles_Funcionalidades WHERE (Funcionalidad_ID = @Funcionalidad_ID) AND (Rol_ID = @Rol_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rol_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Rol_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Funcionalidad_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Funcionalidad_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rol_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Rol_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Funcionalidad_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Funcionalidad_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Rol_ID, Funcionalidad_ID\r\nFROM         LOL.tl_Roles_Funcionalidades";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM LOL.tl_Roles_Funcionalidades\r\nWHERE     (Rol_ID = @ROL_ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Rol_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_Roles_FuncionalidadesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_Roles_FuncionalidadesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_Roles_FuncionalidadesDataTable dataTable = new GD1C2014DataSet.tl_Roles_FuncionalidadesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_Roles_FuncionalidadesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Roles_Funcionalidades");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_Rol_ID, decimal Original_Funcionalidad_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_Rol_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_Funcionalidad_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal Rol_ID, decimal Funcionalidad_ID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Rol_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Funcionalidad_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Rol_ID, decimal Funcionalidad_ID, decimal Original_Rol_ID, decimal Original_Funcionalidad_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(Rol_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Funcionalidad_ID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_Rol_ID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_Funcionalidad_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Original_Rol_ID, decimal Original_Funcionalidad_ID) {
            return this.Update(Original_Rol_ID, Original_Funcionalidad_ID, Original_Rol_ID, Original_Funcionalidad_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int BorrarPorRol(decimal ROL_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((decimal)(ROL_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_RubrosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_RubrosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Rubros";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("Habilitado", "Habilitado");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LOL].[tl_Rubros] WHERE (([ID] = @Original_ID) AND ([Descripcion] = @" +
                "Original_Descripcion) AND ([Habilitado] = @Original_Habilitado))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LOL].[tl_Rubros] ([Descripcion], [Habilitado]) VALUES (@Descripcion," +
                " @Habilitado);\r\nSELECT ID, Descripcion, Habilitado FROM LOL.tl_Rubros WHERE (ID " +
                "= SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Rubros] SET [Descripcion] = @Descripcion, [Habilitado] = @Habilitado WHERE (([ID] = @Original_ID) AND ([Descripcion] = @Original_Descripcion) AND ([Habilitado] = @Original_Habilitado));
SELECT ID, Descripcion, Habilitado FROM LOL.tl_Rubros WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ID, Descripcion, Habilitado\r\nFROM         LOL.tl_Rubros";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     ID, Descripcion,Habilitado FROM LOL.tl_Rubros WHERE     (Descripcion =" +
                " @Rubro)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rubro", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_RubrosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_RubrosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_RubrosDataTable dataTable = new GD1C2014DataSet.tl_RubrosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_RubrosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Rubros");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, string Original_Descripcion, bool Original_Habilitado) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_Habilitado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Descripcion, bool Habilitado) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(Habilitado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, bool Habilitado, decimal Original_ID, string Original_Descripcion, bool Original_Habilitado, decimal ID) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(Habilitado));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_ID));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Original_Habilitado));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, bool Habilitado, decimal Original_ID, string Original_Descripcion, bool Original_Habilitado) {
            return this.Update(Descripcion, Habilitado, Original_ID, Original_Descripcion, Original_Habilitado, Original_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object getRubro(string Rubro) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Rubro == null)) {
                throw new global::System.ArgumentNullException("Rubro");
            }
            else {
                command.Parameters[0].Value = ((string)(Rubro));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_UsuariosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_UsuariosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Usuarios";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Username", "Username");
            tableMapping.ColumnMappings.Add("Password", "Password");
            tableMapping.ColumnMappings.Add("Logins_Fallidos", "Logins_Fallidos");
            tableMapping.ColumnMappings.Add("Habilitado", "Habilitado");
            tableMapping.ColumnMappings.Add("Activo", "Activo");
            tableMapping.ColumnMappings.Add("Change_Password", "Change_Password");
            tableMapping.ColumnMappings.Add("Calificaciones_Pendientes", "Calificaciones_Pendientes");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LOL].[tl_Usuarios] WHERE (([ID] = @Original_ID) AND ([Username] = @Original_Username) AND ([Password] = @Original_Password) AND ([Logins_Fallidos] = @Original_Logins_Fallidos) AND ([Habilitado] = @Original_Habilitado) AND ([Activo] = @Original_Activo) AND ([Change_Password] = @Original_Change_Password) AND ([Calificaciones_Pendientes] = @Original_Calificaciones_Pendientes))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Username", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Username", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Password", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Logins_Fallidos", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Logins_Fallidos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Activo", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Activo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Change_Password", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Calificaciones_Pendientes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Calificaciones_Pendientes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LOL].[tl_Usuarios] ([Username], [Password], [Logins_Fallidos], [Habilitado], [Activo], [Change_Password], [Calificaciones_Pendientes]) VALUES (@Username, @Password, @Logins_Fallidos, @Habilitado, @Activo, @Change_Password, @Calificaciones_Pendientes);
SELECT ID, Username, Password, Logins_Fallidos, Habilitado, Activo, Change_Password, Calificaciones_Pendientes FROM LOL.tl_Usuarios WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Username", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Username", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Logins_Fallidos", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Logins_Fallidos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Activo", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Activo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Change_Password", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Calificaciones_Pendientes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Calificaciones_Pendientes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Usuarios] SET [Username] = @Username, [Password] = @Password, [Logins_Fallidos] = @Logins_Fallidos, [Habilitado] = @Habilitado, [Activo] = @Activo, [Change_Password] = @Change_Password, [Calificaciones_Pendientes] = @Calificaciones_Pendientes WHERE (([ID] = @Original_ID) AND ([Username] = @Original_Username) AND ([Password] = @Original_Password) AND ([Logins_Fallidos] = @Original_Logins_Fallidos) AND ([Habilitado] = @Original_Habilitado) AND ([Activo] = @Original_Activo) AND ([Change_Password] = @Original_Change_Password) AND ([Calificaciones_Pendientes] = @Original_Calificaciones_Pendientes));
SELECT ID, Username, Password, Logins_Fallidos, Habilitado, Activo, Change_Password, Calificaciones_Pendientes FROM LOL.tl_Usuarios WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Username", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Username", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Logins_Fallidos", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Logins_Fallidos", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Activo", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Activo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Change_Password", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Calificaciones_Pendientes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Calificaciones_Pendientes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Username", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Username", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Password", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Logins_Fallidos", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Logins_Fallidos", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Activo", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Activo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Change_Password", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Change_Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Calificaciones_Pendientes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Calificaciones_Pendientes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ID, Username, Password, Logins_Fallidos, Habilitado, Activo, Change_Pa" +
                "ssword, Calificaciones_Pendientes\r\nFROM         LOL.tl_Usuarios";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE    LOL.tl_Usuarios\r\nSET              Password = @Password, Change_Password" +
                " = 0\r\nWHERE     (ID = @ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT Activo, Calificaciones_Pendientes, Change_Password, Habilitado, ID, Logins" +
                "_Fallidos, Password, Username FROM LOL.tl_Usuarios WHERE (ID = @ID)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "LOL.sp_InsertarUsuario";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Username", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "LOL.sp_TryLogin";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pass", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangePassword", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.InputOutput, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_UsuariosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_UsuariosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_UsuariosDataTable dataTable = new GD1C2014DataSet.tl_UsuariosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_UsuariosDataTable getByID(decimal ID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(ID));
            GD1C2014DataSet.tl_UsuariosDataTable dataTable = new GD1C2014DataSet.tl_UsuariosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_UsuariosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Usuarios");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, string Original_Username, string Original_Password, byte Original_Logins_Fallidos, bool Original_Habilitado, bool Original_Activo, bool Original_Change_Password, int Original_Calificaciones_Pendientes) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_Username == null)) {
                throw new global::System.ArgumentNullException("Original_Username");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Username));
            }
            if ((Original_Password == null)) {
                throw new global::System.ArgumentNullException("Original_Password");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Password));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_Logins_Fallidos));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_Habilitado));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_Activo));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_Change_Password));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_Calificaciones_Pendientes));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Username, string Password, byte Logins_Fallidos, bool Habilitado, bool Activo, bool Change_Password, int Calificaciones_Pendientes) {
            if ((Username == null)) {
                throw new global::System.ArgumentNullException("Username");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Username));
            }
            if ((Password == null)) {
                throw new global::System.ArgumentNullException("Password");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Password));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(Logins_Fallidos));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(Habilitado));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Activo));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(Change_Password));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Calificaciones_Pendientes));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Username, 
                    string Password, 
                    byte Logins_Fallidos, 
                    bool Habilitado, 
                    bool Activo, 
                    bool Change_Password, 
                    int Calificaciones_Pendientes, 
                    decimal Original_ID, 
                    string Original_Username, 
                    string Original_Password, 
                    byte Original_Logins_Fallidos, 
                    bool Original_Habilitado, 
                    bool Original_Activo, 
                    bool Original_Change_Password, 
                    int Original_Calificaciones_Pendientes, 
                    decimal ID) {
            if ((Username == null)) {
                throw new global::System.ArgumentNullException("Username");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Username));
            }
            if ((Password == null)) {
                throw new global::System.ArgumentNullException("Password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Password));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(Logins_Fallidos));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(Habilitado));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Activo));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(Change_Password));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Calificaciones_Pendientes));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_ID));
            if ((Original_Username == null)) {
                throw new global::System.ArgumentNullException("Original_Username");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Username));
            }
            if ((Original_Password == null)) {
                throw new global::System.ArgumentNullException("Original_Password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Password));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((byte)(Original_Logins_Fallidos));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Original_Habilitado));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Original_Activo));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(Original_Change_Password));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_Calificaciones_Pendientes));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Username, string Password, byte Logins_Fallidos, bool Habilitado, bool Activo, bool Change_Password, int Calificaciones_Pendientes, decimal Original_ID, string Original_Username, string Original_Password, byte Original_Logins_Fallidos, bool Original_Habilitado, bool Original_Activo, bool Original_Change_Password, int Original_Calificaciones_Pendientes) {
            return this.Update(Username, Password, Logins_Fallidos, Habilitado, Activo, Change_Password, Calificaciones_Pendientes, Original_ID, Original_Username, Original_Password, Original_Logins_Fallidos, Original_Habilitado, Original_Activo, Original_Change_Password, Original_Calificaciones_Pendientes, Original_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int changePassword(string Password, decimal ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Password == null)) {
                throw new global::System.ArgumentNullException("Password");
            }
            else {
                command.Parameters[0].Value = ((string)(Password));
            }
            command.Parameters[1].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_InsertarUsuario(string Username, string Password, ref global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((Username == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Username));
            }
            if ((Password == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Password));
            }
            if ((ID.HasValue == true)) {
                command.Parameters[3].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((command.Parameters[3].Value == null) 
                        || (command.Parameters[3].Value.GetType() == typeof(global::System.DBNull)))) {
                ID = new global::System.Nullable<int>();
            }
            else {
                ID = new global::System.Nullable<int>(((int)(command.Parameters[3].Value)));
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_TryLogin(string user, string pass, ref global::System.Nullable<int> ID, ref global::System.Nullable<bool> ChangePassword) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((user == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(user));
            }
            if ((pass == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(pass));
            }
            if ((ID.HasValue == true)) {
                command.Parameters[3].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ChangePassword.HasValue == true)) {
                command.Parameters[4].Value = ((bool)(ChangePassword.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((command.Parameters[3].Value == null) 
                        || (command.Parameters[3].Value.GetType() == typeof(global::System.DBNull)))) {
                ID = new global::System.Nullable<int>();
            }
            else {
                ID = new global::System.Nullable<int>(((int)(command.Parameters[3].Value)));
            }
            if (((command.Parameters[4].Value == null) 
                        || (command.Parameters[4].Value.GetType() == typeof(global::System.DBNull)))) {
                ChangePassword = new global::System.Nullable<bool>();
            }
            else {
                ChangePassword = new global::System.Nullable<bool>(((bool)(command.Parameters[4].Value)));
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_Usuarios_RolesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_Usuarios_RolesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Usuarios_Roles";
            tableMapping.ColumnMappings.Add("Usuario_ID", "Usuario_ID");
            tableMapping.ColumnMappings.Add("Rol_ID", "Rol_ID");
            tableMapping.ColumnMappings.Add("Habilitado", "Habilitado");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LOL].[tl_Usuarios_Roles] WHERE (([Usuario_ID] = @Original_Usuario_ID" +
                ") AND ([Rol_ID] = @Original_Rol_ID) AND ([Habilitado] = @Original_Habilitado))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rol_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Rol_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LOL].[tl_Usuarios_Roles] ([Usuario_ID], [Rol_ID], [Habilitado]) VALU" +
                "ES (@Usuario_ID, @Rol_ID, @Habilitado);\r\nSELECT Usuario_ID, Rol_ID, Habilitado F" +
                "ROM LOL.tl_Usuarios_Roles WHERE (Rol_ID = @Rol_ID) AND (Usuario_ID = @Usuario_ID" +
                ")";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rol_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Rol_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Usuarios_Roles] SET [Usuario_ID] = @Usuario_ID, [Rol_ID] = @Rol_ID, [Habilitado] = @Habilitado WHERE (([Usuario_ID] = @Original_Usuario_ID) AND ([Rol_ID] = @Original_Rol_ID) AND ([Habilitado] = @Original_Habilitado));
SELECT Usuario_ID, Rol_ID, Habilitado FROM LOL.tl_Usuarios_Roles WHERE (Rol_ID = @Rol_ID) AND (Usuario_ID = @Usuario_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rol_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Rol_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usuario_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rol_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Rol_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Usuario_ID, Rol_ID, Habilitado\r\nFROM         LOL.tl_Usuarios_Roles";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM LOL.tl_Usuarios_Roles\r\nWHERE\r\n    tl_Usuarios_Roles.Rol_ID = @ROL_ID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROL_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Rol_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_Usuarios_RolesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_Usuarios_RolesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_Usuarios_RolesDataTable dataTable = new GD1C2014DataSet.tl_Usuarios_RolesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_Usuarios_RolesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Usuarios_Roles");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_Usuario_ID, decimal Original_Rol_ID, bool Original_Habilitado) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_Usuario_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_Rol_ID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_Habilitado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal Usuario_ID, decimal Rol_ID, bool Habilitado) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Usuario_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Rol_ID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Habilitado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Usuario_ID, decimal Rol_ID, bool Habilitado, decimal Original_Usuario_ID, decimal Original_Rol_ID, bool Original_Habilitado) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(Usuario_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Rol_ID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Habilitado));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_Usuario_ID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_Rol_ID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(Original_Habilitado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(bool Habilitado, decimal Original_Usuario_ID, decimal Original_Rol_ID, bool Original_Habilitado) {
            return this.Update(Original_Usuario_ID, Original_Rol_ID, Habilitado, Original_Usuario_ID, Original_Rol_ID, Original_Habilitado);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int BorrarPorRol(decimal ROL_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((decimal)(ROL_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_VisibilidadesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_VisibilidadesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Visibilidades";
            tableMapping.ColumnMappings.Add("Codigo", "Codigo");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("Precio", "Precio");
            tableMapping.ColumnMappings.Add("Porcentaje", "Porcentaje");
            tableMapping.ColumnMappings.Add("Duracion", "Duracion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LOL].[tl_Visibilidades] WHERE (([Codigo] = @Original_Codigo) AND ([D" +
                "escripcion] = @Original_Descripcion) AND ([Precio] = @Original_Precio) AND ([Por" +
                "centaje] = @Original_Porcentaje) AND ([Duracion] = @Original_Duracion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Precio", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Precio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Porcentaje", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Porcentaje", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Duracion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duracion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LOL].[tl_Visibilidades] ([Codigo], [Descripcion], [Precio], [Porcentaje], [Duracion]) VALUES (@Codigo, @Descripcion, @Precio, @Porcentaje, @Duracion);
SELECT Codigo, Descripcion, Precio, Porcentaje, Duracion FROM LOL.tl_Visibilidades WHERE (Codigo = @Codigo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Precio", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Precio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Porcentaje", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Porcentaje", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Duracion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duracion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Visibilidades] SET [Codigo] = @Codigo, [Descripcion] = @Descripcion, [Precio] = @Precio, [Porcentaje] = @Porcentaje, [Duracion] = @Duracion WHERE (([Codigo] = @Original_Codigo) AND ([Descripcion] = @Original_Descripcion) AND ([Precio] = @Original_Precio) AND ([Porcentaje] = @Original_Porcentaje) AND ([Duracion] = @Original_Duracion));
SELECT Codigo, Descripcion, Precio, Porcentaje, Duracion FROM LOL.tl_Visibilidades WHERE (Codigo = @Codigo)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Precio", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Precio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Porcentaje", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Porcentaje", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Duracion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duracion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Precio", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Precio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Porcentaje", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Porcentaje", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Duracion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duracion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[7];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Codigo, Descripcion, Precio, Porcentaje, Duracion FROM LOL.tl_Visibilidade" +
                "s";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT Codigo, Descripcion, Duracion, Porcentaje, Precio FROM LOL.tl_Visibilidade" +
                "s WHERE (Codigo = @Codigo)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT MAX (Porcentaje) FROM LOL.tl_Visibilidades where codigo=@Codigo";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "select MAX(precio) from LOL.tl_Visibilidades where LOL.tl_Visibilidades.Codigo = " +
                "@Codigo\r\n";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "LOL.sp_BorrarVisibilidad";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@codigo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "LOL.sp_EditarVisibilidad";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@codigo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@descripcion", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@precio", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@porcentaje", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@duracion", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "LOL.sp_NuevaVisibilidad";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@codigo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@descripcion", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@precio", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@porcentaje", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@duracion", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_VisibilidadesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_VisibilidadesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_VisibilidadesDataTable dataTable = new GD1C2014DataSet.tl_VisibilidadesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_VisibilidadesDataTable GetPorCodigo(decimal Codigo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(Codigo));
            GD1C2014DataSet.tl_VisibilidadesDataTable dataTable = new GD1C2014DataSet.tl_VisibilidadesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_VisibilidadesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Visibilidades");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_Codigo, string Original_Descripcion, decimal Original_Precio, decimal Original_Porcentaje, int Original_Duracion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_Codigo));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Precio));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Porcentaje));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Duracion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal Codigo, string Descripcion, decimal Precio, decimal Porcentaje, int Duracion) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Codigo));
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Descripcion));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Precio));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Porcentaje));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Duracion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Codigo, string Descripcion, decimal Precio, decimal Porcentaje, int Duracion, decimal Original_Codigo, string Original_Descripcion, decimal Original_Precio, decimal Original_Porcentaje, int Original_Duracion) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(Codigo));
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Precio));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Porcentaje));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Duracion));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_Codigo));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_Precio));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_Porcentaje));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Duracion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, decimal Precio, decimal Porcentaje, int Duracion, decimal Original_Codigo, string Original_Descripcion, decimal Original_Precio, decimal Original_Porcentaje, int Original_Duracion) {
            return this.Update(Original_Codigo, Descripcion, Precio, Porcentaje, Duracion, Original_Codigo, Original_Descripcion, Original_Precio, Original_Porcentaje, Original_Duracion);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> PorcentajePorCodigo(decimal Codigo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((decimal)(Codigo));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object PrecioVisibilidadQuery(decimal Codigo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((decimal)(Codigo));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_BorrarVisibilidad(global::System.Nullable<int> codigo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((codigo.HasValue == true)) {
                command.Parameters[1].Value = ((int)(codigo.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_EditarVisibilidad(global::System.Nullable<int> codigo, string descripcion, global::System.Nullable<decimal> precio, global::System.Nullable<decimal> porcentaje, global::System.Nullable<int> duracion) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            if ((codigo.HasValue == true)) {
                command.Parameters[1].Value = ((int)(codigo.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((descripcion == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(descripcion));
            }
            if ((precio.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(precio.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((porcentaje.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(porcentaje.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((duracion.HasValue == true)) {
                command.Parameters[5].Value = ((int)(duracion.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_NuevaVisibilidad(global::System.Nullable<int> codigo, string descripcion, global::System.Nullable<decimal> precio, global::System.Nullable<decimal> porcentaje, global::System.Nullable<int> duracion) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[6];
            if ((codigo.HasValue == true)) {
                command.Parameters[1].Value = ((int)(codigo.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((descripcion == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(descripcion));
            }
            if ((precio.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(precio.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((porcentaje.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(porcentaje.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((duracion.HasValue == true)) {
                command.Parameters[5].Value = ((int)(duracion.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sp_VendedoresConMasStockTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sp_VendedoresConMasStockTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sp_VendedoresConMasStock";
            tableMapping.ColumnMappings.Add("Codigo de usuario", "Codigo de usuario");
            tableMapping.ColumnMappings.Add("Productos sin vender", "Productos sin vender");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "LOL.sp_VendedoresConMasStock";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anio", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trimestre", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@visibilidad_codigo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mes", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.sp_VendedoresConMasStockDataTable dataTable, global::System.Nullable<int> anio, global::System.Nullable<int> trimestre, global::System.Nullable<int> visibilidad_codigo, global::System.Nullable<int> mes) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((anio.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(anio.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((trimestre.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(trimestre.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((visibilidad_codigo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(visibilidad_codigo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((mes.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(mes.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class clientesMasPublicacionesSinCalificarTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public clientesMasPublicacionesSinCalificarTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "clientesMasPublicacionesSinCalificar";
            tableMapping.ColumnMappings.Add("Username", "Username");
            tableMapping.ColumnMappings.Add("Usuario_ID", "Usuario_ID");
            tableMapping.ColumnMappings.Add("Sin Calificar", "Sin Calificar");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"--clientesMasPublicacionesSinCalificar
SELECT
	SC.Usuario_ID,
	U.Username,
	SC.[Sin Calificar]
FROM
	(SELECT TOP 5
		P.Usuario_ID AS Usuario_ID,
		COUNT(0) AS [Sin Calificar]
	FROM
		LOL.tl_Compras C
		INNER JOIN LOL.tl_Publicaciones P ON (C.Publicacion_Codigo = P.Codigo)
	WHERE
		C.ID NOT IN (SELECT Compra_ID FROM LOL.tl_Calificaciones)
		AND YEAR(C.Fecha) = @anio AND MONTH(C.Fecha) BETWEEN @trimestre AND (@trimestre+2)
	GROUP BY
		P.Usuario_ID
	ORDER BY
		[Sin Calificar] DESC
	) SC
	INNER JOIN LOL.tl_Usuarios U ON (SC.Usuario_ID = U.ID)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anio", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trimestre", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.clientesMasPublicacionesSinCalificarDataTable dataTable, decimal anio, decimal trimestre) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(anio));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(trimestre));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vendedoresMayorReputacionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vendedoresMayorReputacionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vendedoresMayorReputacion";
            tableMapping.ColumnMappings.Add("Username", "Username");
            tableMapping.ColumnMappings.Add("Reputacion", "Reputacion");
            tableMapping.ColumnMappings.Add("Usuario_ID", "Usuario_ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"--VendedoresMayorReputacion
SELECT
	R.Usuario_ID,
	U.Username,
	R.Reputacion
FROM
	(SELECT TOP 5
		P.Usuario_ID AS Usuario_ID,
		AVG(Ca.Cantidad_Estrellas) AS Reputacion
	FROM
		LOL.tl_Calificaciones Ca,
		LOL.tl_Compras Co,
		LOL.tl_Publicaciones P
	WHERE
		Ca.Compra_ID = Co.ID
		AND Co.Publicacion_Codigo = P.Codigo
		AND YEAR(Co.Fecha) = @anio AND MONTH(Co.Fecha) BETWEEN @trimestre AND (@trimestre+2)
	GROUP BY
		P.Usuario_ID
	ORDER BY
		Reputacion DESC
	) AS R
	INNER JOIN LOL.tl_Usuarios U ON (R.Usuario_ID = U.ID)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anio", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trimestre", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.vendedoresMayorReputacionDataTable dataTable, decimal anio, decimal trimestre) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(anio));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(trimestre));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vendedoresMayorFacturacionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vendedoresMayorFacturacionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vendedoresMayorFacturacion";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Username", "Username");
            tableMapping.ColumnMappings.Add("MontoTotal", "MontoTotal");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"/*vendedoresMayorFacturacion*/
SELECT
	F.ID,
	U.Username,
	F.MontoTotal
FROM
	(SELECT TOP (5)
		P.Usuario_ID AS ID,
		SUM(I.Monto) AS MontoTotal
	FROM
		LOL.tl_Facturas_Items I
		INNER JOIN LOL.tl_Publicaciones P ON (I.Publicacion_Codigo = P.Codigo)
	WHERE
		YEAR(P.Fecha) = @anio AND MONTH(P.Fecha) BETWEEN @trimestre AND @trimestre + 2
	GROUP BY
		P.Usuario_ID
	ORDER BY
		MontoTotal DESC
	) F
	JOIN LOL.tl_Usuarios U ON (F.ID = U.ID)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anio", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trimestre", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.vendedoresMayorFacturacionDataTable dataTable, decimal anio, decimal trimestre) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(anio));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(trimestre));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_ClientesyEmpresasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_ClientesyEmpresasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_ClientesyEmpresas";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("Apellido", "Apellido");
            tableMapping.ColumnMappings.Add("Mail", "Mail");
            tableMapping.ColumnMappings.Add("Dom_Calle", "Dom_Calle");
            tableMapping.ColumnMappings.Add("Nro_Calle", "Nro_Calle");
            tableMapping.ColumnMappings.Add("Piso", "Piso");
            tableMapping.ColumnMappings.Add("Depto", "Depto");
            tableMapping.ColumnMappings.Add("Cod_Postal", "Cod_Postal");
            tableMapping.ColumnMappings.Add("Telefono", "Telefono");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"/*INNER JOIN LOL.tl_Usuarios AS U ON U.ID = E.ID*/
SELECT     ID, Nombre, Apellido, Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, Telefono
FROM         LOL.tl_Clientes AS C
UNION
SELECT     ID, Razon_Social, CUIT, Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, NULL AS Expr1
FROM         LOL.tl_Empresas AS E";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"/*INNER JOIN LOL.tl_Usuarios AS U ON U.ID = E.ID*/
SELECT     ID, Nombre, Apellido, Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, Telefono
FROM         LOL.tl_Clientes AS C
WHERE     (ID = @userID)
UNION
SELECT     ID, Razon_Social, CUIT, Mail, Dom_Calle, Nro_Calle, Piso, Depto, Cod_Postal, NULL AS Expr1
FROM         LOL.tl_Empresas AS E
WHERE     (ID = @userID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_ClientesyEmpresasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_ClientesyEmpresasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_ClientesyEmpresasDataTable dataTable = new GD1C2014DataSet.tl_ClientesyEmpresasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByID(GD1C2014DataSet.tl_ClientesyEmpresasDataTable dataTable, decimal userID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(userID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.tl_ClientesyEmpresasDataTable GetDataByID(decimal userID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(userID));
            GD1C2014DataSet.tl_ClientesyEmpresasDataTable dataTable = new GD1C2014DataSet.tl_ClientesyEmpresasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HistorialComprasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HistorialComprasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HistorialCompras";
            tableMapping.ColumnMappings.Add("Publicacion_Codigo", "Publicacion_Codigo");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            tableMapping.ColumnMappings.Add("Cantidad", "Cantidad");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Publicacion_Codigo, Cantidad, Fecha\r\nFROM         LOL.tl_Compras\r\nWHER" +
                "E     (Usuario_ID = @UsuarioID)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UsuarioID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.HistorialComprasDataTable GetData(decimal UsuarioID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(UsuarioID));
            GD1C2014DataSet.HistorialComprasDataTable dataTable = new GD1C2014DataSet.HistorialComprasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HistorialCalificacionesOtorgadasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HistorialCalificacionesOtorgadasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HistorialCalificacionesOtorgadas";
            tableMapping.ColumnMappings.Add("Codigo", "Codigo");
            tableMapping.ColumnMappings.Add("Cantidad_Estrellas", "Cantidad_Estrellas");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Ca.Codigo, Ca.Cantidad_Estrellas, Ca.Descripcion\r\nFROM         LOL.tl_" +
                "Calificaciones AS Ca INNER JOIN\r\n                      LOL.tl_Compras AS Co ON C" +
                "a.Compra_ID = Co.ID\r\nWHERE     (Co.Usuario_ID = @UsuarioID)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UsuarioID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.HistorialCalificacionesOtorgadasDataTable GetData(decimal UsuarioID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(UsuarioID));
            GD1C2014DataSet.HistorialCalificacionesOtorgadasDataTable dataTable = new GD1C2014DataSet.HistorialCalificacionesOtorgadasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HistorialOfertasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HistorialOfertasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HistorialOfertas";
            tableMapping.ColumnMappings.Add("Publicacion_Codigo", "Publicacion_Codigo");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            tableMapping.ColumnMappings.Add("Monto", "Monto");
            tableMapping.ColumnMappings.Add("Ganadora", "Ganadora");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Publicacion_Codigo, Fecha, Monto, Ganadora\r\nFROM         LOL.tl_Oferta" +
                "s\r\nWHERE     (Usuario_ID = @UsuarioID)\r\nORDER BY Publicacion_Codigo, Fecha, Mont" +
                "o";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UsuarioID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.HistorialOfertasDataTable GetData(decimal UsuarioID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(UsuarioID));
            GD1C2014DataSet.HistorialOfertasDataTable dataTable = new GD1C2014DataSet.HistorialOfertasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HistorialCalificacionesRecibidasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HistorialCalificacionesRecibidasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HistorialCalificacionesRecibidas";
            tableMapping.ColumnMappings.Add("Codigo", "Codigo");
            tableMapping.ColumnMappings.Add("Cantidad_Estrellas", "Cantidad_Estrellas");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     Ca.Codigo, Ca.Cantidad_Estrellas, Ca.Descripcion
FROM         LOL.tl_Calificaciones AS Ca INNER JOIN
                      LOL.tl_Compras AS Co ON Ca.Compra_ID = Co.ID INNER JOIN
                      LOL.tl_Publicaciones AS P ON Co.Publicacion_Codigo = P.Codigo
WHERE     (P.Usuario_ID = @Usuario_ID)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.HistorialCalificacionesRecibidasDataTable GetDataByUsuarioID(decimal Usuario_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(Usuario_ID));
            GD1C2014DataSet.HistorialCalificacionesRecibidasDataTable dataTable = new GD1C2014DataSet.HistorialCalificacionesRecibidasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_CalificacionesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_CalificacionesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Calificaciones";
            tableMapping.ColumnMappings.Add("Codigo", "Codigo");
            tableMapping.ColumnMappings.Add("Compra_ID", "Compra_ID");
            tableMapping.ColumnMappings.Add("Cantidad_Estrellas", "Cantidad_Estrellas");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LOL].[tl_Calificaciones] WHERE (([Codigo] = @Original_Codigo) AND ([" +
                "Compra_ID] = @Original_Compra_ID) AND ([Cantidad_Estrellas] = @Original_Cantidad" +
                "_Estrellas) AND ([Descripcion] = @Original_Descripcion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compra_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Compra_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cantidad_Estrellas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad_Estrellas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LOL].[tl_Calificaciones] ([Compra_ID], [Cantidad_Estrellas], [Descripcion]) VALUES (@Compra_ID, @Cantidad_Estrellas, @Descripcion);
SELECT Codigo, Compra_ID, Cantidad_Estrellas, Descripcion FROM LOL.tl_Calificaciones WHERE (Codigo = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compra_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Compra_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cantidad_Estrellas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad_Estrellas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Calificaciones] SET [Compra_ID] = @Compra_ID, [Cantidad_Estrellas] = @Cantidad_Estrellas, [Descripcion] = @Descripcion WHERE (([Codigo] = @Original_Codigo) AND ([Compra_ID] = @Original_Compra_ID) AND ([Cantidad_Estrellas] = @Original_Cantidad_Estrellas) AND ([Descripcion] = @Original_Descripcion));
SELECT Codigo, Compra_ID, Cantidad_Estrellas, Descripcion FROM LOL.tl_Calificaciones WHERE (Codigo = @Codigo)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Compra_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Compra_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cantidad_Estrellas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad_Estrellas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Compra_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Compra_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cantidad_Estrellas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cantidad_Estrellas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Codigo, Compra_ID, Cantidad_Estrellas, Descripcion FROM LOL.tl_Calificacio" +
                "nes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_CalificacionesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_CalificacionesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_CalificacionesDataTable dataTable = new GD1C2014DataSet.tl_CalificacionesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_CalificacionesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Calificaciones");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_Codigo, decimal Original_Compra_ID, decimal Original_Cantidad_Estrellas, string Original_Descripcion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_Codigo));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_Compra_ID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Cantidad_Estrellas));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal Compra_ID, decimal Cantidad_Estrellas, string Descripcion) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Compra_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Cantidad_Estrellas));
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Compra_ID, decimal Cantidad_Estrellas, string Descripcion, decimal Original_Codigo, decimal Original_Compra_ID, decimal Original_Cantidad_Estrellas, string Original_Descripcion, decimal Codigo) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(Compra_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Cantidad_Estrellas));
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_Codigo));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_Compra_ID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_Cantidad_Estrellas));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Codigo));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal Compra_ID, decimal Cantidad_Estrellas, string Descripcion, decimal Original_Codigo, decimal Original_Compra_ID, decimal Original_Cantidad_Estrellas, string Original_Descripcion) {
            return this.Update(Compra_ID, Cantidad_Estrellas, Descripcion, Original_Codigo, Original_Compra_ID, Original_Cantidad_Estrellas, Original_Descripcion, Original_Codigo);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_Publicacion_EstadosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_Publicacion_EstadosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Publicacion_Estados";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Estado", "Estado");
            tableMapping.ColumnMappings.Add("Habilitado", "Habilitado");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LOL].[tl_Publicacion_Estados] WHERE (([ID] = @Original_ID) AND ([Est" +
                "ado] = @Original_Estado) AND ([Habilitado] = @Original_Habilitado))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Estado", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LOL].[tl_Publicacion_Estados] ([Estado], [Habilitado]) VALUES (@Esta" +
                "do, @Habilitado);\r\nSELECT ID, Estado, Habilitado FROM LOL.tl_Publicacion_Estados" +
                " WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estado", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Publicacion_Estados] SET [Estado] = @Estado, [Habilitado] = @Habilitado WHERE (([ID] = @Original_ID) AND ([Estado] = @Original_Estado) AND ([Habilitado] = @Original_Habilitado));
SELECT ID, Estado, Habilitado FROM LOL.tl_Publicacion_Estados WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Estado", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Estado", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Estado, Habilitado FROM LOL.tl_Publicacion_Estados";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_Publicacion_EstadosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_Publicacion_EstadosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_Publicacion_EstadosDataTable dataTable = new GD1C2014DataSet.tl_Publicacion_EstadosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_Publicacion_EstadosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Publicacion_Estados");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, string Original_Estado, bool Original_Habilitado) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_Estado == null)) {
                throw new global::System.ArgumentNullException("Original_Estado");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Estado));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_Habilitado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Estado, bool Habilitado) {
            if ((Estado == null)) {
                throw new global::System.ArgumentNullException("Estado");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Estado));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(Habilitado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Estado, bool Habilitado, decimal Original_ID, string Original_Estado, bool Original_Habilitado, decimal ID) {
            if ((Estado == null)) {
                throw new global::System.ArgumentNullException("Estado");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Estado));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(Habilitado));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_ID));
            if ((Original_Estado == null)) {
                throw new global::System.ArgumentNullException("Original_Estado");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Estado));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Original_Habilitado));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Estado, bool Habilitado, decimal Original_ID, string Original_Estado, bool Original_Habilitado) {
            return this.Update(Estado, Habilitado, Original_ID, Original_Estado, Original_Habilitado, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tl_Publicacion_TiposTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tl_Publicacion_TiposTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tl_Publicacion_Tipos";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Tipo", "Tipo");
            tableMapping.ColumnMappings.Add("Habilitado", "Habilitado");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LOL].[tl_Publicacion_Tipos] WHERE (([ID] = @Original_ID) AND ([Tipo]" +
                " = @Original_Tipo) AND ([Habilitado] = @Original_Habilitado))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tipo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LOL].[tl_Publicacion_Tipos] ([Tipo], [Habilitado]) VALUES (@Tipo, @H" +
                "abilitado);\r\nSELECT ID, Tipo, Habilitado FROM LOL.tl_Publicacion_Tipos WHERE (ID" +
                " = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOL].[tl_Publicacion_Tipos] SET [Tipo] = @Tipo, [Habilitado] = @Habilitado WHERE (([ID] = @Original_ID) AND ([Tipo] = @Original_Tipo) AND ([Habilitado] = @Original_Habilitado));
SELECT ID, Tipo, Habilitado FROM LOL.tl_Publicacion_Tipos WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tipo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Habilitado", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Habilitado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Tipo, Habilitado FROM LOL.tl_Publicacion_Tipos";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2014DataSet.tl_Publicacion_TiposDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.tl_Publicacion_TiposDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.tl_Publicacion_TiposDataTable dataTable = new GD1C2014DataSet.tl_Publicacion_TiposDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet.tl_Publicacion_TiposDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2014DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tl_Publicacion_Tipos");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID, string Original_Tipo, bool Original_Habilitado) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID));
            if ((Original_Tipo == null)) {
                throw new global::System.ArgumentNullException("Original_Tipo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Tipo));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_Habilitado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Tipo, bool Habilitado) {
            if ((Tipo == null)) {
                throw new global::System.ArgumentNullException("Tipo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Tipo));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(Habilitado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Tipo, bool Habilitado, decimal Original_ID, string Original_Tipo, bool Original_Habilitado, decimal ID) {
            if ((Tipo == null)) {
                throw new global::System.ArgumentNullException("Tipo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Tipo));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(Habilitado));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_ID));
            if ((Original_Tipo == null)) {
                throw new global::System.ArgumentNullException("Original_Tipo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Tipo));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Original_Habilitado));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Tipo, bool Habilitado, decimal Original_ID, string Original_Tipo, bool Original_Habilitado) {
            return this.Update(Tipo, Habilitado, Original_ID, Original_Tipo, Original_Habilitado, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PublicacionesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublicacionesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Publicaciones";
            tableMapping.ColumnMappings.Add("Codigo", "Codigo");
            tableMapping.ColumnMappings.Add("Usuario_ID", "Usuario_ID");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            tableMapping.ColumnMappings.Add("Stock", "Stock");
            tableMapping.ColumnMappings.Add("Fecha_Vencimiento", "Fecha_Vencimiento");
            tableMapping.ColumnMappings.Add("Precio", "Precio");
            tableMapping.ColumnMappings.Add("Tipo", "Tipo");
            tableMapping.ColumnMappings.Add("Visibilidad_Codigo", "Visibilidad_Codigo");
            tableMapping.ColumnMappings.Add("Visibilidad_Descripcion", "Visibilidad_Descripcion");
            tableMapping.ColumnMappings.Add("Estado", "Estado");
            tableMapping.ColumnMappings.Add("Permite_Preguntas", "Permite_Preguntas");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     LOL.tl_Publicaciones.Codigo, LOL.tl_Publicaciones.Usuario_ID, LOL.tl_Publicaciones.Descripcion, LOL.tl_Publicaciones.Fecha, 
                      LOL.tl_Publicaciones.Stock, LOL.tl_Publicaciones.Fecha_Vencimiento, LOL.tl_Publicaciones.Precio, LOL.tl_Publicacion_Tipos.Tipo, 
                      LOL.tl_Visibilidades.Codigo AS Visibilidad_Codigo, LOL.tl_Visibilidades.Descripcion AS Visibilidad_Descripcion, LOL.tl_Publicacion_Estados.Estado, 
                      LOL.tl_Publicaciones.Permite_Preguntas
FROM         LOL.tl_Publicaciones INNER JOIN
                      LOL.tl_Publicacion_Tipos ON LOL.tl_Publicaciones.Tipo_ID = LOL.tl_Publicacion_Tipos.ID INNER JOIN
                      LOL.tl_Publicacion_Estados ON LOL.tl_Publicaciones.Estado_ID = LOL.tl_Publicacion_Estados.ID INNER JOIN
                      LOL.tl_Visibilidades ON LOL.tl_Publicaciones.Visibilidad_Codigo = LOL.tl_Visibilidades.Codigo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     P.Codigo, P.Usuario_ID, P.Descripcion, P.Fecha, P.Stock, P.Fecha_Vencimiento, P.Precio, T.Tipo, V.Codigo AS Visibilidad_Codigo, 
                      V.Descripcion AS Visibilidad_Descripcion, E.Estado, P.Permite_Preguntas
FROM         LOL.tl_Publicaciones AS P INNER JOIN
                      LOL.tl_Publicacion_Tipos AS T ON P.Tipo_ID = T.ID INNER JOIN
                      LOL.tl_Publicacion_Estados AS E ON P.Estado_ID = E.ID INNER JOIN
                      LOL.tl_Visibilidades AS V ON P.Visibilidad_Codigo = V.Codigo INNER JOIN
                      LOL.tl_Publicaciones_Rubros AS PR ON P.Codigo = PR.Publicacion_Codigo
WHERE     (P.Usuario_ID <> @Usuario_ID) AND (P.Descripcion LIKE '%' + @Descripcion + '%') AND (PR.Rubro_ID = @Rubro_ID) AND (E.Estado = 'Publicada') AND 
                      (P.Fecha_Vencimiento <= @FechaActual)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rubro_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Rubro_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaActual", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Vencimiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     P.Codigo, P.Usuario_ID, P.Descripcion, P.Fecha, P.Stock, P.Fecha_Vencimiento, P.Precio, T.Tipo, V.Codigo AS Visibilidad_Codigo, 
                      V.Descripcion AS Visibilidad_Descripcion, E.Estado, P.Permite_Preguntas
FROM         LOL.tl_Publicaciones AS P INNER JOIN
                      LOL.tl_Publicacion_Tipos AS T ON P.Tipo_ID = T.ID INNER JOIN
                      LOL.tl_Publicacion_Estados AS E ON P.Estado_ID = E.ID INNER JOIN
                      LOL.tl_Visibilidades AS V ON P.Visibilidad_Codigo = V.Codigo INNER JOIN
                      LOL.tl_Publicaciones_Rubros AS PR ON P.Codigo = PR.Publicacion_Codigo
WHERE     (P.Usuario_ID = @Usuario_ID)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "Usuario_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "LOL.sp_PaginadorParaComprar";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rubro_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaActual", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inicio", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QtyRegistros", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalRegistros", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "LOL.sp_PaginadorParaEditar";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UsuarioID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inicio", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QtyRegistros", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalRegistros", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2014DataSet.PublicacionesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2014DataSet.PublicacionesDataTable dataTable = new GD1C2014DataSet.PublicacionesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.PublicacionesDataTable GetDataByDistinctID(decimal Usuario_ID, string Descripcion, decimal Rubro_ID, System.DateTime FechaActual) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(Usuario_ID));
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Descripcion));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(Rubro_ID));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(FechaActual));
            GD1C2014DataSet.PublicacionesDataTable dataTable = new GD1C2014DataSet.PublicacionesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.PublicacionesDataTable GetDataByID(decimal Usuario_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(Usuario_ID));
            GD1C2014DataSet.PublicacionesDataTable dataTable = new GD1C2014DataSet.PublicacionesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.PublicacionesDataTable GetParaComprar(global::System.Nullable<int> Usuario_ID, string Descripcion, global::System.Nullable<int> Rubro_ID, global::System.Nullable<global::System.DateTime> FechaActual, global::System.Nullable<int> Inicio, global::System.Nullable<int> QtyRegistros, ref global::System.Nullable<int> TotalRegistros) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((Usuario_ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Usuario_ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Descripcion == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Descripcion));
            }
            if ((Rubro_ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(Rubro_ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FechaActual.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(FechaActual.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Inicio.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(Inicio.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((QtyRegistros.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(QtyRegistros.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((TotalRegistros.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(TotalRegistros.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            GD1C2014DataSet.PublicacionesDataTable dataTable = new GD1C2014DataSet.PublicacionesDataTable();
            this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[7].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[7].Value.GetType() == typeof(global::System.DBNull)))) {
                TotalRegistros = new global::System.Nullable<int>();
            }
            else {
                TotalRegistros = new global::System.Nullable<int>(((int)(this.Adapter.SelectCommand.Parameters[7].Value)));
            }
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GD1C2014DataSet.PublicacionesDataTable GetParaEditar(global::System.Nullable<int> UsuarioID, global::System.Nullable<int> Inicio, global::System.Nullable<int> QtyRegistros, ref global::System.Nullable<int> TotalRegistros) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((UsuarioID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(UsuarioID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Inicio.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(Inicio.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((QtyRegistros.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(QtyRegistros.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((TotalRegistros.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(TotalRegistros.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            GD1C2014DataSet.PublicacionesDataTable dataTable = new GD1C2014DataSet.PublicacionesDataTable();
            this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[4].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[4].Value.GetType() == typeof(global::System.DBNull)))) {
                TotalRegistros = new global::System.Nullable<int>();
            }
            else {
                TotalRegistros = new global::System.Nullable<int>(((int)(this.Adapter.SelectCommand.Parameters[4].Value)));
            }
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QueriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.IDbCommand[] _commandCollection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.IDbCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Connection = new global::System.Data.SqlClient.SqlConnection(global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandText = "LOL.sp_NuevaVisibilidad";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@codigo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@descripcion", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@precio", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@porcentaje", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@duracion", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Connection = new global::System.Data.SqlClient.SqlConnection(global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).CommandText = "LOL.sp_BorrarVisibilidad";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@codigo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Connection = new global::System.Data.SqlClient.SqlConnection(global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).CommandText = "LOL.sp_CrearPublicacion";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usuario_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@descripcion", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stock", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fecha_vencimiento", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@precio", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tipo_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@visibilidad_Codigo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@estado_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@permite_Preguntas", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaPendiente", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@monto", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Connection = new global::System.Data.SqlClient.SqlConnection(global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).CommandText = "LOL.sp_EditarVisibilidad";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@codigo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@descripcion", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@precio", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@porcentaje", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 2, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@duracion", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Connection = new global::System.Data.SqlClient.SqlConnection(global::FrbaCommerce.Properties.Settings.Default.GD1C2014ConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).CommandText = "SELECT LOL.calificacionesPendientesDeUsuario(@usuario)";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).CommandType = global::System.Data.CommandType.Text;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[4])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@usuario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_NuevaVisibilidad(global::System.Nullable<int> codigo, string descripcion, global::System.Nullable<decimal> precio, global::System.Nullable<decimal> porcentaje, global::System.Nullable<int> duracion) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[0]));
            if ((codigo.HasValue == true)) {
                command.Parameters[1].Value = ((int)(codigo.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((descripcion == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(descripcion));
            }
            if ((precio.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(precio.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((porcentaje.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(porcentaje.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((duracion.HasValue == true)) {
                command.Parameters[5].Value = ((int)(duracion.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_BorrarVisibilidad(global::System.Nullable<int> codigo) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[1]));
            if ((codigo.HasValue == true)) {
                command.Parameters[1].Value = ((int)(codigo.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_CrearPublicacion(global::System.Nullable<int> Usuario_ID, string descripcion, global::System.Nullable<global::System.DateTime> fecha, global::System.Nullable<decimal> stock, global::System.Nullable<global::System.DateTime> fecha_vencimiento, global::System.Nullable<decimal> precio, global::System.Nullable<int> tipo_ID, global::System.Nullable<decimal> visibilidad_Codigo, global::System.Nullable<int> estado_ID, global::System.Nullable<bool> permite_Preguntas, ref global::System.Nullable<int> ID, global::System.Nullable<global::System.DateTime> fechaPendiente, global::System.Nullable<decimal> monto) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[2]));
            if ((Usuario_ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(Usuario_ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((descripcion == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(descripcion));
            }
            if ((fecha.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(fecha.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((stock.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(stock.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((fecha_vencimiento.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(fecha_vencimiento.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((precio.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(precio.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((tipo_ID.HasValue == true)) {
                command.Parameters[7].Value = ((int)(tipo_ID.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((visibilidad_Codigo.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(visibilidad_Codigo.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((estado_ID.HasValue == true)) {
                command.Parameters[9].Value = ((int)(estado_ID.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((permite_Preguntas.HasValue == true)) {
                command.Parameters[10].Value = ((bool)(permite_Preguntas.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ID.HasValue == true)) {
                command.Parameters[11].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((fechaPendiente.HasValue == true)) {
                command.Parameters[12].Value = ((System.DateTime)(fechaPendiente.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((monto.HasValue == true)) {
                command.Parameters[13].Value = ((decimal)(monto.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((command.Parameters[11].Value == null) 
                        || (command.Parameters[11].Value.GetType() == typeof(global::System.DBNull)))) {
                ID = new global::System.Nullable<int>();
            }
            else {
                ID = new global::System.Nullable<int>(((int)(command.Parameters[11].Value)));
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int sp_EditarVisibilidad(global::System.Nullable<int> codigo, string descripcion, global::System.Nullable<decimal> precio, global::System.Nullable<decimal> porcentaje, global::System.Nullable<int> duracion) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[3]));
            if ((codigo.HasValue == true)) {
                command.Parameters[1].Value = ((int)(codigo.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((descripcion == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(descripcion));
            }
            if ((precio.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(precio.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((porcentaje.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(porcentaje.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((duracion.HasValue == true)) {
                command.Parameters[5].Value = ((int)(duracion.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> calificacionesPendientesDeUsuario(int usuario) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[4]));
            command.Parameters[0].Value = ((int)(usuario));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private tl_ClientesTableAdapter _tl_ClientesTableAdapter;
        
        private tl_ComprasTableAdapter _tl_ComprasTableAdapter;
        
        private tl_EmpresasTableAdapter _tl_EmpresasTableAdapter;
        
        private tl_FacturasTableAdapter _tl_FacturasTableAdapter;
        
        private tl_Facturas_ItemsTableAdapter _tl_Facturas_ItemsTableAdapter;
        
        private tl_FuncionalidadesTableAdapter _tl_FuncionalidadesTableAdapter;
        
        private tl_OfertasTableAdapter _tl_OfertasTableAdapter;
        
        private tl_PendientesTableAdapter _tl_PendientesTableAdapter;
        
        private tl_PreguntasTableAdapter _tl_PreguntasTableAdapter;
        
        private tl_PublicacionesTableAdapter _tl_PublicacionesTableAdapter;
        
        private tl_Publicaciones_RubrosTableAdapter _tl_Publicaciones_RubrosTableAdapter;
        
        private tl_RolesTableAdapter _tl_RolesTableAdapter;
        
        private tl_Roles_FuncionalidadesTableAdapter _tl_Roles_FuncionalidadesTableAdapter;
        
        private tl_RubrosTableAdapter _tl_RubrosTableAdapter;
        
        private tl_UsuariosTableAdapter _tl_UsuariosTableAdapter;
        
        private tl_Usuarios_RolesTableAdapter _tl_Usuarios_RolesTableAdapter;
        
        private tl_VisibilidadesTableAdapter _tl_VisibilidadesTableAdapter;
        
        private tl_CalificacionesTableAdapter _tl_CalificacionesTableAdapter;
        
        private tl_Publicacion_EstadosTableAdapter _tl_Publicacion_EstadosTableAdapter;
        
        private tl_Publicacion_TiposTableAdapter _tl_Publicacion_TiposTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_ClientesTableAdapter tl_ClientesTableAdapter {
            get {
                return this._tl_ClientesTableAdapter;
            }
            set {
                this._tl_ClientesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_ComprasTableAdapter tl_ComprasTableAdapter {
            get {
                return this._tl_ComprasTableAdapter;
            }
            set {
                this._tl_ComprasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_EmpresasTableAdapter tl_EmpresasTableAdapter {
            get {
                return this._tl_EmpresasTableAdapter;
            }
            set {
                this._tl_EmpresasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_FacturasTableAdapter tl_FacturasTableAdapter {
            get {
                return this._tl_FacturasTableAdapter;
            }
            set {
                this._tl_FacturasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_Facturas_ItemsTableAdapter tl_Facturas_ItemsTableAdapter {
            get {
                return this._tl_Facturas_ItemsTableAdapter;
            }
            set {
                this._tl_Facturas_ItemsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_FuncionalidadesTableAdapter tl_FuncionalidadesTableAdapter {
            get {
                return this._tl_FuncionalidadesTableAdapter;
            }
            set {
                this._tl_FuncionalidadesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_OfertasTableAdapter tl_OfertasTableAdapter {
            get {
                return this._tl_OfertasTableAdapter;
            }
            set {
                this._tl_OfertasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_PendientesTableAdapter tl_PendientesTableAdapter {
            get {
                return this._tl_PendientesTableAdapter;
            }
            set {
                this._tl_PendientesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_PreguntasTableAdapter tl_PreguntasTableAdapter {
            get {
                return this._tl_PreguntasTableAdapter;
            }
            set {
                this._tl_PreguntasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_PublicacionesTableAdapter tl_PublicacionesTableAdapter {
            get {
                return this._tl_PublicacionesTableAdapter;
            }
            set {
                this._tl_PublicacionesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_Publicaciones_RubrosTableAdapter tl_Publicaciones_RubrosTableAdapter {
            get {
                return this._tl_Publicaciones_RubrosTableAdapter;
            }
            set {
                this._tl_Publicaciones_RubrosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_RolesTableAdapter tl_RolesTableAdapter {
            get {
                return this._tl_RolesTableAdapter;
            }
            set {
                this._tl_RolesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_Roles_FuncionalidadesTableAdapter tl_Roles_FuncionalidadesTableAdapter {
            get {
                return this._tl_Roles_FuncionalidadesTableAdapter;
            }
            set {
                this._tl_Roles_FuncionalidadesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_RubrosTableAdapter tl_RubrosTableAdapter {
            get {
                return this._tl_RubrosTableAdapter;
            }
            set {
                this._tl_RubrosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_UsuariosTableAdapter tl_UsuariosTableAdapter {
            get {
                return this._tl_UsuariosTableAdapter;
            }
            set {
                this._tl_UsuariosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_Usuarios_RolesTableAdapter tl_Usuarios_RolesTableAdapter {
            get {
                return this._tl_Usuarios_RolesTableAdapter;
            }
            set {
                this._tl_Usuarios_RolesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_VisibilidadesTableAdapter tl_VisibilidadesTableAdapter {
            get {
                return this._tl_VisibilidadesTableAdapter;
            }
            set {
                this._tl_VisibilidadesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_CalificacionesTableAdapter tl_CalificacionesTableAdapter {
            get {
                return this._tl_CalificacionesTableAdapter;
            }
            set {
                this._tl_CalificacionesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_Publicacion_EstadosTableAdapter tl_Publicacion_EstadosTableAdapter {
            get {
                return this._tl_Publicacion_EstadosTableAdapter;
            }
            set {
                this._tl_Publicacion_EstadosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tl_Publicacion_TiposTableAdapter tl_Publicacion_TiposTableAdapter {
            get {
                return this._tl_Publicacion_TiposTableAdapter;
            }
            set {
                this._tl_Publicacion_TiposTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tl_ClientesTableAdapter != null) 
                            && (this._tl_ClientesTableAdapter.Connection != null))) {
                    return this._tl_ClientesTableAdapter.Connection;
                }
                if (((this._tl_ComprasTableAdapter != null) 
                            && (this._tl_ComprasTableAdapter.Connection != null))) {
                    return this._tl_ComprasTableAdapter.Connection;
                }
                if (((this._tl_EmpresasTableAdapter != null) 
                            && (this._tl_EmpresasTableAdapter.Connection != null))) {
                    return this._tl_EmpresasTableAdapter.Connection;
                }
                if (((this._tl_FacturasTableAdapter != null) 
                            && (this._tl_FacturasTableAdapter.Connection != null))) {
                    return this._tl_FacturasTableAdapter.Connection;
                }
                if (((this._tl_Facturas_ItemsTableAdapter != null) 
                            && (this._tl_Facturas_ItemsTableAdapter.Connection != null))) {
                    return this._tl_Facturas_ItemsTableAdapter.Connection;
                }
                if (((this._tl_FuncionalidadesTableAdapter != null) 
                            && (this._tl_FuncionalidadesTableAdapter.Connection != null))) {
                    return this._tl_FuncionalidadesTableAdapter.Connection;
                }
                if (((this._tl_OfertasTableAdapter != null) 
                            && (this._tl_OfertasTableAdapter.Connection != null))) {
                    return this._tl_OfertasTableAdapter.Connection;
                }
                if (((this._tl_PendientesTableAdapter != null) 
                            && (this._tl_PendientesTableAdapter.Connection != null))) {
                    return this._tl_PendientesTableAdapter.Connection;
                }
                if (((this._tl_PreguntasTableAdapter != null) 
                            && (this._tl_PreguntasTableAdapter.Connection != null))) {
                    return this._tl_PreguntasTableAdapter.Connection;
                }
                if (((this._tl_PublicacionesTableAdapter != null) 
                            && (this._tl_PublicacionesTableAdapter.Connection != null))) {
                    return this._tl_PublicacionesTableAdapter.Connection;
                }
                if (((this._tl_Publicaciones_RubrosTableAdapter != null) 
                            && (this._tl_Publicaciones_RubrosTableAdapter.Connection != null))) {
                    return this._tl_Publicaciones_RubrosTableAdapter.Connection;
                }
                if (((this._tl_RolesTableAdapter != null) 
                            && (this._tl_RolesTableAdapter.Connection != null))) {
                    return this._tl_RolesTableAdapter.Connection;
                }
                if (((this._tl_Roles_FuncionalidadesTableAdapter != null) 
                            && (this._tl_Roles_FuncionalidadesTableAdapter.Connection != null))) {
                    return this._tl_Roles_FuncionalidadesTableAdapter.Connection;
                }
                if (((this._tl_RubrosTableAdapter != null) 
                            && (this._tl_RubrosTableAdapter.Connection != null))) {
                    return this._tl_RubrosTableAdapter.Connection;
                }
                if (((this._tl_UsuariosTableAdapter != null) 
                            && (this._tl_UsuariosTableAdapter.Connection != null))) {
                    return this._tl_UsuariosTableAdapter.Connection;
                }
                if (((this._tl_Usuarios_RolesTableAdapter != null) 
                            && (this._tl_Usuarios_RolesTableAdapter.Connection != null))) {
                    return this._tl_Usuarios_RolesTableAdapter.Connection;
                }
                if (((this._tl_VisibilidadesTableAdapter != null) 
                            && (this._tl_VisibilidadesTableAdapter.Connection != null))) {
                    return this._tl_VisibilidadesTableAdapter.Connection;
                }
                if (((this._tl_CalificacionesTableAdapter != null) 
                            && (this._tl_CalificacionesTableAdapter.Connection != null))) {
                    return this._tl_CalificacionesTableAdapter.Connection;
                }
                if (((this._tl_Publicacion_EstadosTableAdapter != null) 
                            && (this._tl_Publicacion_EstadosTableAdapter.Connection != null))) {
                    return this._tl_Publicacion_EstadosTableAdapter.Connection;
                }
                if (((this._tl_Publicacion_TiposTableAdapter != null) 
                            && (this._tl_Publicacion_TiposTableAdapter.Connection != null))) {
                    return this._tl_Publicacion_TiposTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tl_ClientesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_ComprasTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_EmpresasTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_FacturasTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_Facturas_ItemsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_FuncionalidadesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_OfertasTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_PendientesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_PreguntasTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_PublicacionesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_Publicaciones_RubrosTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_RolesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_Roles_FuncionalidadesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_RubrosTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_UsuariosTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_Usuarios_RolesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_VisibilidadesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_CalificacionesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_Publicacion_EstadosTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tl_Publicacion_TiposTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(GD1C2014DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tl_Publicacion_TiposTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Publicacion_Tipos.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_Publicacion_TiposTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_Publicacion_EstadosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Publicacion_Estados.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_Publicacion_EstadosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_UsuariosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Usuarios.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_UsuariosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_VisibilidadesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Visibilidades.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_VisibilidadesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_PublicacionesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Publicaciones.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_PublicacionesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_RolesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Roles.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_RolesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_RubrosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Rubros.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_RubrosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_ComprasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Compras.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_ComprasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_FuncionalidadesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Funcionalidades.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_FuncionalidadesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_FacturasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Facturas.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_FacturasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_CalificacionesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Calificaciones.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_CalificacionesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_PendientesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Pendientes.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_PendientesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_PreguntasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Preguntas.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_PreguntasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_OfertasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Ofertas.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_OfertasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_EmpresasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Empresas.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_EmpresasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_Facturas_ItemsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Facturas_Items.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_Facturas_ItemsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_Publicaciones_RubrosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Publicaciones_Rubros.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_Publicaciones_RubrosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_Usuarios_RolesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Usuarios_Roles.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_Usuarios_RolesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_Roles_FuncionalidadesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Roles_Funcionalidades.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_Roles_FuncionalidadesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tl_ClientesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tl_Clientes.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tl_ClientesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(GD1C2014DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tl_Publicacion_TiposTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Publicacion_Tipos.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_Publicacion_TiposTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_Publicacion_EstadosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Publicacion_Estados.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_Publicacion_EstadosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_UsuariosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Usuarios.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_UsuariosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_VisibilidadesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Visibilidades.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_VisibilidadesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_PublicacionesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Publicaciones.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_PublicacionesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_RolesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Roles.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_RolesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_RubrosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Rubros.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_RubrosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_ComprasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Compras.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_ComprasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_FuncionalidadesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Funcionalidades.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_FuncionalidadesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_FacturasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Facturas.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_FacturasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_CalificacionesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Calificaciones.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_CalificacionesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_PendientesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Pendientes.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_PendientesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_PreguntasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Preguntas.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_PreguntasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_OfertasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Ofertas.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_OfertasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_EmpresasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Empresas.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_EmpresasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_Facturas_ItemsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Facturas_Items.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_Facturas_ItemsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_Publicaciones_RubrosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Publicaciones_Rubros.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_Publicaciones_RubrosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_Usuarios_RolesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Usuarios_Roles.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_Usuarios_RolesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_Roles_FuncionalidadesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Roles_Funcionalidades.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_Roles_FuncionalidadesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tl_ClientesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tl_Clientes.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tl_ClientesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(GD1C2014DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tl_ClientesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Clientes.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_ClientesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_Roles_FuncionalidadesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Roles_Funcionalidades.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_Roles_FuncionalidadesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_Usuarios_RolesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Usuarios_Roles.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_Usuarios_RolesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_Publicaciones_RubrosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Publicaciones_Rubros.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_Publicaciones_RubrosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_Facturas_ItemsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Facturas_Items.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_Facturas_ItemsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_EmpresasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Empresas.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_EmpresasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_OfertasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Ofertas.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_OfertasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_PreguntasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Preguntas.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_PreguntasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_PendientesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Pendientes.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_PendientesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_CalificacionesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Calificaciones.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_CalificacionesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_FacturasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Facturas.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_FacturasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_FuncionalidadesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Funcionalidades.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_FuncionalidadesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_ComprasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Compras.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_ComprasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_RubrosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Rubros.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_RubrosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_RolesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Roles.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_RolesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_PublicacionesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Publicaciones.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_PublicacionesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_VisibilidadesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Visibilidades.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_VisibilidadesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_UsuariosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Usuarios.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_UsuariosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_Publicacion_EstadosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Publicacion_Estados.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_Publicacion_EstadosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tl_Publicacion_TiposTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tl_Publicacion_Tipos.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tl_Publicacion_TiposTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(GD1C2014DataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tl_ClientesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_ClientesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_ComprasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_ComprasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_EmpresasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_EmpresasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_FacturasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_FacturasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_Facturas_ItemsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_Facturas_ItemsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_FuncionalidadesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_FuncionalidadesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_OfertasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_OfertasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_PendientesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_PendientesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_PreguntasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_PreguntasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_PublicacionesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_PublicacionesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_Publicaciones_RubrosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_Publicaciones_RubrosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_RolesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_RolesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_Roles_FuncionalidadesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_Roles_FuncionalidadesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_RubrosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_RubrosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_UsuariosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_UsuariosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_Usuarios_RolesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_Usuarios_RolesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_VisibilidadesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_VisibilidadesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_CalificacionesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_CalificacionesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_Publicacion_EstadosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_Publicacion_EstadosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tl_Publicacion_TiposTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tl_Publicacion_TiposTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tl_ClientesTableAdapter != null)) {
                    revertConnections.Add(this._tl_ClientesTableAdapter, this._tl_ClientesTableAdapter.Connection);
                    this._tl_ClientesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_ClientesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_ClientesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_ClientesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_ClientesTableAdapter.Adapter);
                    }
                }
                if ((this._tl_ComprasTableAdapter != null)) {
                    revertConnections.Add(this._tl_ComprasTableAdapter, this._tl_ComprasTableAdapter.Connection);
                    this._tl_ComprasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_ComprasTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_ComprasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_ComprasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_ComprasTableAdapter.Adapter);
                    }
                }
                if ((this._tl_EmpresasTableAdapter != null)) {
                    revertConnections.Add(this._tl_EmpresasTableAdapter, this._tl_EmpresasTableAdapter.Connection);
                    this._tl_EmpresasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_EmpresasTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_EmpresasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_EmpresasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_EmpresasTableAdapter.Adapter);
                    }
                }
                if ((this._tl_FacturasTableAdapter != null)) {
                    revertConnections.Add(this._tl_FacturasTableAdapter, this._tl_FacturasTableAdapter.Connection);
                    this._tl_FacturasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_FacturasTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_FacturasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_FacturasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_FacturasTableAdapter.Adapter);
                    }
                }
                if ((this._tl_Facturas_ItemsTableAdapter != null)) {
                    revertConnections.Add(this._tl_Facturas_ItemsTableAdapter, this._tl_Facturas_ItemsTableAdapter.Connection);
                    this._tl_Facturas_ItemsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_Facturas_ItemsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_Facturas_ItemsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_Facturas_ItemsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_Facturas_ItemsTableAdapter.Adapter);
                    }
                }
                if ((this._tl_FuncionalidadesTableAdapter != null)) {
                    revertConnections.Add(this._tl_FuncionalidadesTableAdapter, this._tl_FuncionalidadesTableAdapter.Connection);
                    this._tl_FuncionalidadesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_FuncionalidadesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_FuncionalidadesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_FuncionalidadesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_FuncionalidadesTableAdapter.Adapter);
                    }
                }
                if ((this._tl_OfertasTableAdapter != null)) {
                    revertConnections.Add(this._tl_OfertasTableAdapter, this._tl_OfertasTableAdapter.Connection);
                    this._tl_OfertasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_OfertasTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_OfertasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_OfertasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_OfertasTableAdapter.Adapter);
                    }
                }
                if ((this._tl_PendientesTableAdapter != null)) {
                    revertConnections.Add(this._tl_PendientesTableAdapter, this._tl_PendientesTableAdapter.Connection);
                    this._tl_PendientesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_PendientesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_PendientesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_PendientesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_PendientesTableAdapter.Adapter);
                    }
                }
                if ((this._tl_PreguntasTableAdapter != null)) {
                    revertConnections.Add(this._tl_PreguntasTableAdapter, this._tl_PreguntasTableAdapter.Connection);
                    this._tl_PreguntasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_PreguntasTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_PreguntasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_PreguntasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_PreguntasTableAdapter.Adapter);
                    }
                }
                if ((this._tl_PublicacionesTableAdapter != null)) {
                    revertConnections.Add(this._tl_PublicacionesTableAdapter, this._tl_PublicacionesTableAdapter.Connection);
                    this._tl_PublicacionesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_PublicacionesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_PublicacionesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_PublicacionesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_PublicacionesTableAdapter.Adapter);
                    }
                }
                if ((this._tl_Publicaciones_RubrosTableAdapter != null)) {
                    revertConnections.Add(this._tl_Publicaciones_RubrosTableAdapter, this._tl_Publicaciones_RubrosTableAdapter.Connection);
                    this._tl_Publicaciones_RubrosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_Publicaciones_RubrosTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_Publicaciones_RubrosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_Publicaciones_RubrosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_Publicaciones_RubrosTableAdapter.Adapter);
                    }
                }
                if ((this._tl_RolesTableAdapter != null)) {
                    revertConnections.Add(this._tl_RolesTableAdapter, this._tl_RolesTableAdapter.Connection);
                    this._tl_RolesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_RolesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_RolesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_RolesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_RolesTableAdapter.Adapter);
                    }
                }
                if ((this._tl_Roles_FuncionalidadesTableAdapter != null)) {
                    revertConnections.Add(this._tl_Roles_FuncionalidadesTableAdapter, this._tl_Roles_FuncionalidadesTableAdapter.Connection);
                    this._tl_Roles_FuncionalidadesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_Roles_FuncionalidadesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_Roles_FuncionalidadesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_Roles_FuncionalidadesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_Roles_FuncionalidadesTableAdapter.Adapter);
                    }
                }
                if ((this._tl_RubrosTableAdapter != null)) {
                    revertConnections.Add(this._tl_RubrosTableAdapter, this._tl_RubrosTableAdapter.Connection);
                    this._tl_RubrosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_RubrosTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_RubrosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_RubrosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_RubrosTableAdapter.Adapter);
                    }
                }
                if ((this._tl_UsuariosTableAdapter != null)) {
                    revertConnections.Add(this._tl_UsuariosTableAdapter, this._tl_UsuariosTableAdapter.Connection);
                    this._tl_UsuariosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_UsuariosTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_UsuariosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_UsuariosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_UsuariosTableAdapter.Adapter);
                    }
                }
                if ((this._tl_Usuarios_RolesTableAdapter != null)) {
                    revertConnections.Add(this._tl_Usuarios_RolesTableAdapter, this._tl_Usuarios_RolesTableAdapter.Connection);
                    this._tl_Usuarios_RolesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_Usuarios_RolesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_Usuarios_RolesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_Usuarios_RolesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_Usuarios_RolesTableAdapter.Adapter);
                    }
                }
                if ((this._tl_VisibilidadesTableAdapter != null)) {
                    revertConnections.Add(this._tl_VisibilidadesTableAdapter, this._tl_VisibilidadesTableAdapter.Connection);
                    this._tl_VisibilidadesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_VisibilidadesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_VisibilidadesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_VisibilidadesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_VisibilidadesTableAdapter.Adapter);
                    }
                }
                if ((this._tl_CalificacionesTableAdapter != null)) {
                    revertConnections.Add(this._tl_CalificacionesTableAdapter, this._tl_CalificacionesTableAdapter.Connection);
                    this._tl_CalificacionesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_CalificacionesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_CalificacionesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_CalificacionesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_CalificacionesTableAdapter.Adapter);
                    }
                }
                if ((this._tl_Publicacion_EstadosTableAdapter != null)) {
                    revertConnections.Add(this._tl_Publicacion_EstadosTableAdapter, this._tl_Publicacion_EstadosTableAdapter.Connection);
                    this._tl_Publicacion_EstadosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_Publicacion_EstadosTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_Publicacion_EstadosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_Publicacion_EstadosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_Publicacion_EstadosTableAdapter.Adapter);
                    }
                }
                if ((this._tl_Publicacion_TiposTableAdapter != null)) {
                    revertConnections.Add(this._tl_Publicacion_TiposTableAdapter, this._tl_Publicacion_TiposTableAdapter.Connection);
                    this._tl_Publicacion_TiposTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tl_Publicacion_TiposTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tl_Publicacion_TiposTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tl_Publicacion_TiposTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tl_Publicacion_TiposTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tl_ClientesTableAdapter != null)) {
                    this._tl_ClientesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_ClientesTableAdapter]));
                    this._tl_ClientesTableAdapter.Transaction = null;
                }
                if ((this._tl_ComprasTableAdapter != null)) {
                    this._tl_ComprasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_ComprasTableAdapter]));
                    this._tl_ComprasTableAdapter.Transaction = null;
                }
                if ((this._tl_EmpresasTableAdapter != null)) {
                    this._tl_EmpresasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_EmpresasTableAdapter]));
                    this._tl_EmpresasTableAdapter.Transaction = null;
                }
                if ((this._tl_FacturasTableAdapter != null)) {
                    this._tl_FacturasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_FacturasTableAdapter]));
                    this._tl_FacturasTableAdapter.Transaction = null;
                }
                if ((this._tl_Facturas_ItemsTableAdapter != null)) {
                    this._tl_Facturas_ItemsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_Facturas_ItemsTableAdapter]));
                    this._tl_Facturas_ItemsTableAdapter.Transaction = null;
                }
                if ((this._tl_FuncionalidadesTableAdapter != null)) {
                    this._tl_FuncionalidadesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_FuncionalidadesTableAdapter]));
                    this._tl_FuncionalidadesTableAdapter.Transaction = null;
                }
                if ((this._tl_OfertasTableAdapter != null)) {
                    this._tl_OfertasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_OfertasTableAdapter]));
                    this._tl_OfertasTableAdapter.Transaction = null;
                }
                if ((this._tl_PendientesTableAdapter != null)) {
                    this._tl_PendientesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_PendientesTableAdapter]));
                    this._tl_PendientesTableAdapter.Transaction = null;
                }
                if ((this._tl_PreguntasTableAdapter != null)) {
                    this._tl_PreguntasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_PreguntasTableAdapter]));
                    this._tl_PreguntasTableAdapter.Transaction = null;
                }
                if ((this._tl_PublicacionesTableAdapter != null)) {
                    this._tl_PublicacionesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_PublicacionesTableAdapter]));
                    this._tl_PublicacionesTableAdapter.Transaction = null;
                }
                if ((this._tl_Publicaciones_RubrosTableAdapter != null)) {
                    this._tl_Publicaciones_RubrosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_Publicaciones_RubrosTableAdapter]));
                    this._tl_Publicaciones_RubrosTableAdapter.Transaction = null;
                }
                if ((this._tl_RolesTableAdapter != null)) {
                    this._tl_RolesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_RolesTableAdapter]));
                    this._tl_RolesTableAdapter.Transaction = null;
                }
                if ((this._tl_Roles_FuncionalidadesTableAdapter != null)) {
                    this._tl_Roles_FuncionalidadesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_Roles_FuncionalidadesTableAdapter]));
                    this._tl_Roles_FuncionalidadesTableAdapter.Transaction = null;
                }
                if ((this._tl_RubrosTableAdapter != null)) {
                    this._tl_RubrosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_RubrosTableAdapter]));
                    this._tl_RubrosTableAdapter.Transaction = null;
                }
                if ((this._tl_UsuariosTableAdapter != null)) {
                    this._tl_UsuariosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_UsuariosTableAdapter]));
                    this._tl_UsuariosTableAdapter.Transaction = null;
                }
                if ((this._tl_Usuarios_RolesTableAdapter != null)) {
                    this._tl_Usuarios_RolesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_Usuarios_RolesTableAdapter]));
                    this._tl_Usuarios_RolesTableAdapter.Transaction = null;
                }
                if ((this._tl_VisibilidadesTableAdapter != null)) {
                    this._tl_VisibilidadesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_VisibilidadesTableAdapter]));
                    this._tl_VisibilidadesTableAdapter.Transaction = null;
                }
                if ((this._tl_CalificacionesTableAdapter != null)) {
                    this._tl_CalificacionesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_CalificacionesTableAdapter]));
                    this._tl_CalificacionesTableAdapter.Transaction = null;
                }
                if ((this._tl_Publicacion_EstadosTableAdapter != null)) {
                    this._tl_Publicacion_EstadosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_Publicacion_EstadosTableAdapter]));
                    this._tl_Publicacion_EstadosTableAdapter.Transaction = null;
                }
                if ((this._tl_Publicacion_TiposTableAdapter != null)) {
                    this._tl_Publicacion_TiposTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tl_Publicacion_TiposTableAdapter]));
                    this._tl_Publicacion_TiposTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591